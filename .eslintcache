[{"C:\\Users\\Maya\\Documents\\GitHub\\factory\\src\\index.tsx":"1","C:\\Users\\Maya\\Documents\\GitHub\\factory\\src\\reportWebVitals.ts":"2","C:\\Users\\Maya\\Documents\\GitHub\\factory\\src\\components\\layout\\layout.tsx":"3","C:\\Users\\Maya\\Documents\\GitHub\\factory\\src\\components\\home\\home.tsx":"4","C:\\Users\\Maya\\Documents\\GitHub\\factory\\src\\components\\report-maker\\report-maker.tsx":"5","C:\\Users\\Maya\\Documents\\GitHub\\factory\\src\\components\\page-not-found\\page-not-found.tsx":"6","C:\\Users\\Maya\\Documents\\GitHub\\factory\\src\\components\\auth\\auth.tsx":"7","C:\\Users\\Maya\\Documents\\GitHub\\factory\\src\\components\\report\\report.tsx":"8","C:\\Users\\Maya\\Documents\\GitHub\\factory\\src\\components\\auth\\InputCode.js":"9","C:\\Users\\Maya\\Documents\\GitHub\\factory\\src\\redux\\store.js":"10","C:\\Users\\Maya\\Documents\\GitHub\\factory\\src\\config.ts":"11","C:\\Users\\Maya\\Documents\\GitHub\\factory\\src\\get-logo.ts":"12","C:\\Users\\Maya\\Documents\\GitHub\\factory\\src\\redux\\actionType.ts":"13","C:\\Users\\Maya\\Documents\\GitHub\\factory\\src\\models\\userModel.ts":"14","C:\\Users\\Maya\\Documents\\GitHub\\factory\\src\\models\\reportModel.ts":"15","C:\\Users\\Maya\\Documents\\GitHub\\factory\\src\\components\\restore-state-pop-up\\restore-state-pop-up.tsx":"16","C:\\Users\\Maya\\Documents\\GitHub\\factory\\src\\components\\all-clients\\all-clients.tsx":"17","C:\\Users\\Maya\\Documents\\GitHub\\factory\\src\\components\\top-clients-nav\\top-clients-nav.tsx":"18","C:\\Users\\Maya\\Documents\\GitHub\\factory\\src\\components\\campaigns\\campaigns.tsx":"19","C:\\Users\\Maya\\Documents\\GitHub\\factory\\src\\components\\filtering-side-menu\\filtering-side-menu.tsx":"20","C:\\Users\\Maya\\Documents\\GitHub\\factory\\src\\components\\top-campaigns-nav\\top-campaigns-nav.tsx":"21","C:\\Users\\Maya\\Documents\\GitHub\\factory\\src\\components\\link-pop-up\\link-pop-up.tsx":"22","C:\\Users\\Maya\\Documents\\GitHub\\factory\\src\\components\\reports-history-pop-up\\reports-history-pop-up.tsx":"23","C:\\Users\\Maya\\Documents\\GitHub\\factory\\src\\components\\no-campains-pop-up\\no-campains-pop-up.tsx":"24","C:\\Users\\Maya\\Documents\\GitHub\\factory\\src\\components\\link-pop-up-from-report\\link-pop-up-from-report.tsx":"25","C:\\Users\\Maya\\Documents\\GitHub\\factory\\src\\components\\top-report-nav\\top-report-nav.tsx":"26","C:\\Users\\Maya\\Documents\\GitHub\\factory\\src\\components\\auth-for-watching-only\\auth-for-watching-only.tsx":"27","C:\\Users\\Maya\\Documents\\GitHub\\factory\\src\\components\\bottom-bar\\bottom-bar.tsx":"28","C:\\Users\\Maya\\Documents\\GitHub\\factory\\src\\redux\\reducer.ts":"29","C:\\Users\\Maya\\Documents\\GitHub\\factory\\src\\redux\\appState.ts":"30","C:\\Users\\Maya\\Documents\\GitHub\\factory\\src\\redux\\middleware.ts":"31","C:\\Users\\Maya\\Documents\\GitHub\\factory\\src\\models\\campaignModel.ts":"32","C:\\Users\\Maya\\Documents\\GitHub\\factory\\src\\models\\productModel.ts":"33","C:\\Users\\Maya\\Documents\\GitHub\\factory\\src\\models\\dateModel.ts":"34","C:\\Users\\Maya\\Documents\\GitHub\\factory\\src\\components\\add-client-pop-up\\add-client-pop-up.tsx":"35","C:\\Users\\Maya\\Documents\\GitHub\\factory\\src\\components\\product-pop-up\\product-pop-up.tsx":"36","C:\\Users\\Maya\\Documents\\GitHub\\factory\\src\\models\\productsTypeModel.ts":"37","C:\\Users\\Maya\\Documents\\GitHub\\factory\\src\\models\\imagesModel.ts":"38","C:\\Users\\Maya\\Documents\\GitHub\\factory\\src\\is-on-factory.ts":"39","C:\\Users\\Maya\\Documents\\GitHub\\factory\\src\\components\\pedometer\\pedometer.js":"40"},{"size":333,"mtime":1621761045168,"results":"41","hashOfConfig":"42"},{"size":440,"mtime":1621761045181,"results":"43","hashOfConfig":"42"},{"size":2312,"mtime":1621944434342,"results":"44","hashOfConfig":"42"},{"size":2856,"mtime":1622703731974,"results":"45","hashOfConfig":"42"},{"size":4472,"mtime":1621761045101,"results":"46","hashOfConfig":"42"},{"size":298,"mtime":1621761045097,"results":"47","hashOfConfig":"42"},{"size":8151,"mtime":1621761045079,"results":"48","hashOfConfig":"42"},{"size":5457,"mtime":1621930804130,"results":"49","hashOfConfig":"42"},{"size":1687,"mtime":1621761045078,"results":"50","hashOfConfig":"42"},{"size":295,"mtime":1621761045181,"results":"51","hashOfConfig":"42"},{"size":648,"mtime":1621945643914,"results":"52","hashOfConfig":"42"},{"size":607,"mtime":1621945682180,"results":"53","hashOfConfig":"42"},{"size":970,"mtime":1622632570271,"results":"54","hashOfConfig":"42"},{"size":186,"mtime":1621761045176,"results":"55","hashOfConfig":"42"},{"size":684,"mtime":1621761045175,"results":"56","hashOfConfig":"42"},{"size":2173,"mtime":1621761045107,"results":"57","hashOfConfig":"42"},{"size":9817,"mtime":1622027659430,"results":"58","hashOfConfig":"42"},{"size":6530,"mtime":1622027659435,"results":"59","hashOfConfig":"42"},{"size":20791,"mtime":1622701896073,"results":"60","hashOfConfig":"42"},{"size":24824,"mtime":1622701543706,"results":"61","hashOfConfig":"42"},{"size":9457,"mtime":1621761045109,"results":"62","hashOfConfig":"42"},{"size":6910,"mtime":1622027659433,"results":"63","hashOfConfig":"42"},{"size":10419,"mtime":1621761045104,"results":"64","hashOfConfig":"42"},{"size":2609,"mtime":1621761045094,"results":"65","hashOfConfig":"42"},{"size":3223,"mtime":1621761045090,"results":"66","hashOfConfig":"42"},{"size":8628,"mtime":1621761045114,"results":"67","hashOfConfig":"42"},{"size":8351,"mtime":1621761045077,"results":"68","hashOfConfig":"42"},{"size":4708,"mtime":1621761045081,"results":"69","hashOfConfig":"42"},{"size":6479,"mtime":1622632600834,"results":"70","hashOfConfig":"42"},{"size":3049,"mtime":1622632880465,"results":"71","hashOfConfig":"42"},{"size":511,"mtime":1621761045179,"results":"72","hashOfConfig":"42"},{"size":284,"mtime":1621761045170,"results":"73","hashOfConfig":"42"},{"size":626,"mtime":1621761045173,"results":"74","hashOfConfig":"42"},{"size":113,"mtime":1621761045171,"results":"75","hashOfConfig":"42"},{"size":13707,"mtime":1622704292384,"results":"76","hashOfConfig":"42"},{"size":10747,"mtime":1621761045099,"results":"77","hashOfConfig":"42"},{"size":175,"mtime":1621761045174,"results":"78","hashOfConfig":"42"},{"size":486,"mtime":1621761045173,"results":"79","hashOfConfig":"42"},{"size":592,"mtime":1621761045168,"results":"80","hashOfConfig":"42"},{"size":0,"mtime":1619937746916,"results":"81","hashOfConfig":"42"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},"z5uj72",{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"91","messages":"92","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"84"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"84"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"84"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121","usedDeprecatedRules":"84"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"124","usedDeprecatedRules":"84"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":23,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"127","messages":"128","errorCount":0,"warningCount":23,"fixableErrorCount":0,"fixableWarningCount":2,"source":null},{"filePath":"129","messages":"130","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"131","usedDeprecatedRules":"84"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"134","usedDeprecatedRules":"84"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"137","usedDeprecatedRules":"84"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"140","usedDeprecatedRules":"84"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"143","usedDeprecatedRules":"84"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"146","usedDeprecatedRules":"84"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"149","usedDeprecatedRules":"84"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"152","usedDeprecatedRules":"84"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"155","usedDeprecatedRules":"84"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"160","usedDeprecatedRules":"84"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"163","usedDeprecatedRules":"84"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"170","messages":"171","errorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":"172","usedDeprecatedRules":"84"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"177"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\Maya\\Documents\\GitHub\\factory\\src\\index.tsx",[],["182","183"],"C:\\Users\\Maya\\Documents\\GitHub\\factory\\src\\reportWebVitals.ts",[],"C:\\Users\\Maya\\Documents\\GitHub\\factory\\src\\components\\layout\\layout.tsx",[],"C:\\Users\\Maya\\Documents\\GitHub\\factory\\src\\components\\home\\home.tsx",[],"C:\\Users\\Maya\\Documents\\GitHub\\factory\\src\\components\\report-maker\\report-maker.tsx",["184","185"],"import React, { Component } from \"react\";\r\nimport { Campaigns } from \"../campaigns/campaigns\";\r\nimport { FilteringSideMenu } from \"../filtering-side-menu/filtering-side-menu\";\r\nimport { TopCampaignsNav } from \"../top-campaigns-nav/top-campaigns-nav\";\r\nimport \"./report-maker.css\";\r\nimport { store } from \"../../redux/store\";\r\nimport { Unsubscribe } from \"redux\";\r\nimport { LinkPopUp } from \"../link-pop-up/link-pop-up\";\r\nimport { UserModel } from \"../../models/userModel\";\r\nimport { ActionType } from \"../../redux/actionType\";\r\nimport { ReportsHistoryPopUp } from \"../reports-history-pop-up/reports-history-pop-up\";\r\nimport { LinkPopUpFromReport } from \"../link-pop-up-from-report/link-pop-up-from-report\";\r\nimport { NoCampaignsPopUp } from \"../no-campains-pop-up/no-campains-pop-up\";\r\n\r\ninterface ReportMakerState {\r\n    isScroll: boolean,\r\n    display: boolean,\r\n    windowWidth: number,\r\n    isAfterAuth: boolean,\r\n    displayForReportsPopUp: boolean,\r\n    displayForReportsLinkPopUp: boolean,\r\n    isNoCampaignsPopUpOpen: boolean\r\n}\r\n\r\nexport class ReportMaker extends Component<any, ReportMakerState>{\r\n\r\n    private unsubscribeStore: Unsubscribe;\r\n\r\n    public constructor(props: any) {\r\n        super(props);\r\n        this.state = {\r\n            isScroll: false,\r\n            display: store.getState().isLinksPopUpShow,\r\n            displayForReportsPopUp: store.getState().isReportsPopUpShow,\r\n            displayForReportsLinkPopUp: store.getState().displayForReportsLinkPopUp,\r\n            windowWidth: 0,\r\n            isAfterAuth: store.getState().isAuthSucceeded,\r\n            isNoCampaignsPopUpOpen: store.getState().isNoCampaignsPopUpOpen\r\n        }\r\n\r\n        this.unsubscribeStore = store.subscribe(() => {\r\n            const display = store.getState().isLinksPopUpShow;\r\n            this.setState({ display });\r\n            const isAfterAuth = store.getState().isAuthSucceeded;\r\n            this.setState({ isAfterAuth });\r\n            const displayForReportsPopUp = store.getState().isReportsPopUpShow;\r\n            this.setState({ displayForReportsPopUp });\r\n            const displayForReportsLinkPopUp = store.getState().displayForReportsLinkPopUp;\r\n            this.setState({ displayForReportsLinkPopUp });\r\n            const isNoCampaignsPopUpOpen = store.getState().isNoCampaignsPopUpOpen;\r\n            this.setState({ isNoCampaignsPopUpOpen });\r\n\r\n        })\r\n\r\n    }\r\n\r\n\r\n    public componentDidMount() {\r\n\r\n        if (!this.state.isAfterAuth) {\r\n            this.props.history.push(\"/auth\");\r\n            return;\r\n        }\r\n\r\n        window.addEventListener('scroll', (e) => {\r\n            const YPosition = window.pageYOffset;\r\n            if (YPosition === 0) {\r\n                this.setState({ isScroll: false });\r\n            }\r\n            else {\r\n                this.setState({ isScroll: true });\r\n            }\r\n        });\r\n\r\n        const windowWidth = window.screen.width;\r\n        this.setState({ windowWidth });\r\n    }\r\n\r\n    public componentWillUnmount(): void {\r\n        this.unsubscribeStore();\r\n    }\r\n\r\n    public render() {\r\n        return (\r\n            <div className=\"report-maker\">\r\n                {!this.state.isAfterAuth &&\r\n                    this.props.history.push(\"/auth\")\r\n\r\n                }\r\n                {this.state.isAfterAuth &&\r\n                    <>\r\n\r\n                        {this.state.isNoCampaignsPopUpOpen && <NoCampaignsPopUp />}\r\n                        <main>\r\n                            <div className=\"header\">\r\n                                <TopCampaignsNav isScroll={this.state.isScroll} />\r\n                            </div>\r\n\r\n                            <Campaigns />\r\n                        </main>\r\n\r\n                        <aside>\r\n                            {this.state.windowWidth > 600 &&\r\n                                <FilteringSideMenu isOnReport={false} />\r\n                            }\r\n\r\n\r\n                            {this.state.windowWidth <= 600 && store.getState().isMobileMenuShow &&\r\n                                <FilteringSideMenu isOnReport={false} />\r\n                            }\r\n                        </aside>\r\n                        {this.state.display && <LinkPopUp />}\r\n                        {this.state.displayForReportsPopUp && <ReportsHistoryPopUp />}\r\n                        {this.state.displayForReportsLinkPopUp && <LinkPopUpFromReport />}\r\n                    </>\r\n                }\r\n\r\n\r\n            </div>\r\n\r\n        )\r\n    }\r\n}","C:\\Users\\Maya\\Documents\\GitHub\\factory\\src\\components\\page-not-found\\page-not-found.tsx",[],"C:\\Users\\Maya\\Documents\\GitHub\\factory\\src\\components\\auth\\auth.tsx",["186","187","188","189","190"],"import React, { ChangeEvent, Component } from \"react\";\r\nimport { Unsubscribe } from \"redux\";\r\nimport { UserModel } from \"../../models/userModel\";\r\nimport { ActionType } from \"../../redux/actionType\";\r\nimport { store } from \"../../redux/store\";\r\nimport \"./auth.css\";\r\nimport axios from \"axios\";\r\nimport { rejects } from \"assert\";\r\nimport TextField from '@material-ui/core/TextField';\r\nimport InputCode from \"./InputCode\";\r\nimport { Config } from \"../../config\";\r\nimport { Logo } from \"../../get-logo\";\r\n\r\ninterface AuthState {\r\n  phoneNumber: string,\r\n  code: string,\r\n  message: string,\r\n  isPhoneLegal: boolean,\r\n  isCodeLegal: boolean,\r\n  isDisplayForBtn: boolean,\r\n  allUsers: UserModel[],\r\n  isSmsSent: boolean,\r\n  title: string,\r\n  user: UserModel,\r\n  resendMessage: string,\r\n  displayErrorsArea: boolean\r\n}\r\n\r\nexport class Auth extends Component<any, AuthState> {\r\n\r\n\r\n  public constructor(props: any) {\r\n    super(props);\r\n    this.state = {\r\n      phoneNumber: \"\",\r\n      code: \"\",\r\n      message: \"\",\r\n      title: \"יש להזין מספר טלפון על מנת להתחבר\",\r\n      isPhoneLegal: false,\r\n      isCodeLegal: false,\r\n      isDisplayForBtn: false,\r\n      allUsers: [],\r\n      isSmsSent: false,\r\n      user: new UserModel(),\r\n      resendMessage: \"\",\r\n      displayErrorsArea: false\r\n    }\r\n  }\r\n\r\n  public async componentDidMount() {\r\n    try {\r\n      const response = await axios.get(Config.serverUrl + \"/all-users/\");\r\n      const allUsers: UserModel[] = response.data.users;\r\n      this.setState({ allUsers });\r\n\r\n    }\r\n    catch (err) {\r\n      console.log(err.message);\r\n    }\r\n  }\r\n\r\n  public linsenToKeyPress = (e: any) => {\r\n    e.keyCode === 13 &&\r\n      this.authPhoneNumber();\r\n  }\r\n\r\n\r\n  public setPhoneNumber = (args: ChangeEvent<HTMLInputElement>) => {\r\n    const phoneNumber = args.target.value;\r\n    const fixedPhone = phoneNumber.replace(/[a-zA-Z$&@#*^%()!]/g, \"\");\r\n    this.setState({ phoneNumber: fixedPhone });\r\n    this.setState({ message: \"\" })\r\n\r\n  }\r\n\r\n  public countForResend = () => {\r\n    let count = 30;\r\n    const int = setInterval(() => {\r\n      if (count > 1) {\r\n        count--;\r\n        const message = 'נוכל לשלוח לך את הקוד פעם נוספת בעוד ' + count + \" שניות\";\r\n        this.setState({ resendMessage: message });\r\n      }\r\n      else if (count === 1) {\r\n        const message = \"אפשר לנסות שוב ממש כאן\";\r\n        this.setState({ resendMessage: message });\r\n        clearInterval(int);\r\n      }\r\n    }, 1000);\r\n  }\r\n\r\n\r\n  //Demo functions\r\n  public authPhoneNumber = () => {\r\n    const phoneNumber = this.state.phoneNumber;\r\n    this.setState({ code: \"\" });\r\n    const allUsers = [...this.state.allUsers];\r\n    const user = allUsers.find(u => u.phoneNumber?.toString() === phoneNumber);\r\n\r\n    let message = \"\";\r\n    let isPhoneLegal = false;\r\n    let displayErrorsArea = false;\r\n\r\n    if (user) {\r\n      this.setState({ user });\r\n      if (user.permission === \"יצירת דוחות\") {\r\n        message = \"\";\r\n        isPhoneLegal = true;\r\n        displayErrorsArea = false;\r\n\r\n        this.setState({ title: \"יש להזין את הקוד שקיבלת\" });\r\n        this.countForResend();\r\n        new Promise((resolve, reject) => {\r\n          resolve(() => console.log(\"\"))\r\n        }\r\n\r\n        )\r\n          .then(() =>\r\n            fetch(\r\n              `https://landing-page-media.co.il/projects/phone-auth/?phone=${phoneNumber}`\r\n            )\r\n          )\r\n          .then((data) => {\r\n            this.setState({ isSmsSent: true });\r\n            this.setState({ displayErrorsArea: false });\r\n          }\r\n          )\r\n          .catch((e) => {\r\n            console.log(e)\r\n          });\r\n      }\r\n      else {\r\n        message = \"מספר הטלפון שהוזן אינו מספר מורשה\";\r\n        displayErrorsArea = true;\r\n      }\r\n    }\r\n    else {\r\n      message = \"מספר הטלפון שהוזן אינו מספר מורשה\";\r\n      displayErrorsArea = true;\r\n\r\n    }\r\n    this.setState({ message });\r\n    this.setState({ isPhoneLegal });\r\n    this.setState({ displayErrorsArea });\r\n\r\n  }\r\n\r\n  public authCode = () => {\r\n    const code = this.state.code;\r\n    const phoneNumber = this.state.phoneNumber;\r\n    let message = \"\";\r\n    let isCodeLegal = false;\r\n\r\n    if (this.state.isSmsSent) {\r\n      new Promise((resolve, reject) => {\r\n        resolve(console.log(\"\"));\r\n        reject(message = \"קוד אינו חוקי\");\r\n      })\r\n        .then(() =>\r\n          fetch(\r\n            `https://landing-page-media.co.il/projects/phone-auth/code_validation.php?code=${code}&phone=${phoneNumber}`\r\n          )\r\n        )\r\n        .then((response) => response.json())\r\n        .then((data) => {\r\n          if (data.auth) {\r\n            message = \"ברוכים הבאים\";\r\n            isCodeLegal = true;\r\n            store.dispatch({ type: ActionType.loginEditingMode, payLoad: this.state.user });\r\n            this.props.history.push('/home');\r\n          }\r\n          else if (!data.auth) {\r\n            message = \"קוד אינו חוקי\";\r\n          }\r\n          this.setState({ message })\r\n          this.setState({ isCodeLegal })\r\n        })\r\n    }\r\n  }\r\n\r\n\r\n\r\n\r\n  public render() {\r\n    return (\r\n      <div className=\"auth\">\r\n\r\n        <div className=\"auth-box\">\r\n\r\n          <img className=\"auth-logo\" src={Logo.logoSrc} />\r\n\r\n          <div className=\"auth-titles\">\r\n            <h1>מערכת תוצר</h1>\r\n          </div>\r\n\r\n          {this.state.displayErrorsArea && <div className=\"errors-area\">\r\n            <span className=\"auth-errors-message\">.יש לך אחלה מספר, אבל הוא לא ברשימה שלנו <br />\r\n            ...אולי טעות בספרה ואולי צריך לבקש רשות\r\n            <br />\r\n              <a href={`mailto:naorB@mccann.co.il; advaA@mccann.co.il&subject=אני רוצה אישור לצפייה בתוצרי הפקטורי&body=Pretty%20please...%20My%20number%20is%20${this.state.phoneNumber}`} className=\"allow-permission\">.לבקשת רשות קליק קטן כאן</a>\r\n            </span>\r\n            <img className=\"error-img\" src=\"./assets/images/error.gif\" />\r\n\r\n          </div>\r\n          }\r\n\r\n          {!this.state.isPhoneLegal &&\r\n            <button onClick={this.authPhoneNumber} className=\"send-btn\"><img src=\"./assets/images/pink_btn_after.svg\" /></button>\r\n          }\r\n          <div className=\"phone-field\">\r\n            <TextField id=\"standard-basic\"\r\n              label=\"יש להזין מספר טלפון על מנת להתחבר\"\r\n              color=\"primary\"\r\n              onChange={this.setPhoneNumber}\r\n              onKeyDown={this.linsenToKeyPress}\r\n              className={this.state.isPhoneLegal ? \"out\" : \"\"}\r\n              value={this.state.phoneNumber}\r\n              style={{ borderBottom: this.state.message === \"\" ? \"2px solid black\" : \"2px solid red\" }} />\r\n            {!this.state.isPhoneLegal && <span className=\"err-message\">{this.state.message}</span>}\r\n            <br />\r\n          </div>\r\n\r\n\r\n          {this.state.isPhoneLegal &&\r\n            <div className=\"code-area\">\r\n              <InputCode\r\n                length={4}\r\n                label=\"יש להזין את הקוד שקיבלת\"\r\n                loading={() => { }}\r\n                onComplete={(code: any) => {\r\n                  this.setState({ code });\r\n                  setTimeout(() => {\r\n                    this.authCode();\r\n                  }, 1000);\r\n                }} />\r\n\r\n              <span className=\"err-message\">{this.state.message}</span>\r\n              <span className=\"re-send-area\"><span className=\"rtl\">לא קיבלת sms עם הקוד?</span>\r\n              <br />\r\n                <p className={this.state.resendMessage === \"אפשר לנסות שוב ממש כאן\" ? \"resend-btn\" : \"resend-timer\"}\r\n                  onClick={this.state.resendMessage === \"אפשר לנסות שוב ממש כאן\" ? this.authPhoneNumber : () => console.log(\"Not yet\")}>{this.state.resendMessage}</p>\r\n              </span>\r\n\r\n            </div>\r\n          }\r\n\r\n\r\n\r\n\r\n\r\n        </div>\r\n\r\n\r\n      </div>\r\n\r\n    )\r\n  }\r\n}","C:\\Users\\Maya\\Documents\\GitHub\\factory\\src\\components\\report\\report.tsx",["191","192"],"import React, { Component } from \"react\";\r\nimport { ReportModel } from \"../../models/reportModel\";\r\nimport \"./report.css\";\r\nimport { getAllReports } from \"../../data/report\";\r\nimport { Campaigns } from \"../campaigns/campaigns\";\r\nimport { TopCampaignsNav } from \"../top-campaigns-nav/top-campaigns-nav\";\r\nimport { store } from \"../../redux/store\";\r\nimport { Unsubscribe } from \"redux\";\r\nimport { FilteringSideMenu } from \"../filtering-side-menu/filtering-side-menu\";\r\nimport { LinkPopUp } from \"../link-pop-up/link-pop-up\";\r\nimport { TopReportNav } from \"../top-report-nav/top-report-nav\";\r\nimport { ActionType } from \"../../redux/actionType\";\r\nimport axios from \"axios\";\r\nimport { AuthForWatchingOnly } from \"../auth-for-watching-only/auth-for-watching-only\";\r\nimport { Config } from \"../../config\";\r\nimport { BottomBar } from \"../bottom-bar/bottom-bar\";\r\n\r\ninterface ReportState {\r\n    report: ReportModel,\r\n    isScroll: boolean,\r\n    display: boolean,\r\n    isAfterAuth: boolean,\r\n    isPreAuth: boolean,\r\n    isMobile: boolean\r\n}\r\n\r\nexport class Report extends Component<any, ReportState>{\r\n\r\n    private unsubscribeStore: Unsubscribe;\r\n\r\n    public constructor(props: any) {\r\n        super(props);\r\n        this.state = {\r\n            report: new ReportModel(),\r\n            isScroll: false,\r\n            display: store.getState().isLinksPopUpShow,\r\n            isAfterAuth: store.getState().isAuthSucceededForReport,\r\n            isPreAuth: store.getState().isAuthSucceeded,\r\n            isMobile: false\r\n        }\r\n\r\n\r\n        this.unsubscribeStore = store.subscribe(() => {\r\n            const display = store.getState().isLinksPopUpShow;\r\n            this.setState({ display });\r\n            const isAfterAuth = store.getState().isAuthSucceededForReport;\r\n            this.setState({ isAfterAuth });\r\n            const isPreAuth = store.getState().isAuthSucceeded;\r\n            this.setState({ isPreAuth });\r\n        })\r\n    }\r\n\r\n    public async componentDidMount() {\r\n        try {\r\n            const bodyClass = document.body.classList[0];\r\n            if (bodyClass === \"mobile\") {\r\n                this.setState({ isMobile: true });\r\n            }\r\n\r\n            const uuid = this.props.match.params.uuid;\r\n            const response = await axios.get(Config.serverUrl + \"/all-reports/?uuid=\" + uuid);\r\n            const report: ReportModel = response.data;\r\n            if (report === '0 results') {\r\n                this.props.history.push(\"/page-not-found\");\r\n                return;\r\n            }\r\n            this.setState({ report });\r\n            store.dispatch({ type: ActionType.getCurrentReport, payLoad: report });\r\n\r\n            window.addEventListener('scroll', (e) => {\r\n                const YPosition = window.pageYOffset;\r\n                if (YPosition === 0) {\r\n                    this.setState({ isScroll: false });\r\n                }\r\n                else {\r\n                    this.setState({ isScroll: true });\r\n                }\r\n            });\r\n\r\n\r\n            store.dispatch({ type: ActionType.updateSelectedClients, payLoad: this.removeDuplicatesFromArray(report.clients as [], 'clientId') });\r\n            store.dispatch({ type: ActionType.getDatesRanges, payLoad: report.datesOnReport });\r\n            if (report.products && report.products.length > 0) {\r\n                store.dispatch({ type: ActionType.getSelectedProducts, payLoad: this.removeDuplicatesFromArray(report.products as [], 'productId') });\r\n            }\r\n            if (report.campaigns && report.campaigns.length > 0) {\r\n                store.dispatch({ type: ActionType.getSelectedCampaigns, payLoad: this.removeDuplicatesFromArray(report.campaigns as [], 'campaignId') });\r\n            }\r\n        }\r\n        catch (err) {\r\n            console.log(err.message);\r\n            if(err.message === 'array is not iterable'){\r\n                this.props.history.push(\"/page-not-found\");\r\n            }\r\n        }\r\n    }\r\n\r\n    public componentWillUnmount(): void {\r\n        this.unsubscribeStore();\r\n    }\r\n\r\n    public removeDuplicatesFromArray = (array: any[], id: any) => {\r\n        const freshArray: any[] = [];\r\n        for (const item of array) {\r\n            let isUnique = true;\r\n            for (const freshItem of freshArray) {\r\n                if (freshItem[id] === item[id]) {\r\n                    isUnique = false;\r\n                }\r\n            }\r\n            if (isUnique) {\r\n                freshArray.push(item);\r\n            }\r\n        }\r\n\r\n        return freshArray;\r\n    }\r\n\r\n    public render() {\r\n        return (\r\n            <div className=\"report\">\r\n                {!this.state.isAfterAuth && <AuthForWatchingOnly />}\r\n                {this.state.isAfterAuth &&\r\n                    <div>\r\n                        <main>\r\n                            <div className=\"header\">\r\n                                <TopReportNav isScroll={this.state.isScroll} />\r\n                            </div>\r\n                            <Campaigns />\r\n                        </main>\r\n\r\n                        {!this.state.isMobile && <aside>\r\n                            <FilteringSideMenu isOnReport={true} />\r\n                        </aside>}\r\n\r\n                        {this.state.isMobile && <footer>\r\n                            <BottomBar />\r\n                        </footer>}\r\n                        {this.state.display && <LinkPopUp />}\r\n                    </div>\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}","C:\\Users\\Maya\\Documents\\GitHub\\factory\\src\\components\\auth\\InputCode.js",[],["193","194"],"C:\\Users\\Maya\\Documents\\GitHub\\factory\\src\\redux\\store.js",[],"C:\\Users\\Maya\\Documents\\GitHub\\factory\\src\\config.ts",[],"C:\\Users\\Maya\\Documents\\GitHub\\factory\\src\\get-logo.ts",[],"C:\\Users\\Maya\\Documents\\GitHub\\factory\\src\\redux\\actionType.ts",[],"C:\\Users\\Maya\\Documents\\GitHub\\factory\\src\\models\\userModel.ts",[],"C:\\Users\\Maya\\Documents\\GitHub\\factory\\src\\models\\reportModel.ts",[],"C:\\Users\\Maya\\Documents\\GitHub\\factory\\src\\components\\restore-state-pop-up\\restore-state-pop-up.tsx",[],"C:\\Users\\Maya\\Documents\\GitHub\\factory\\src\\components\\all-clients\\all-clients.tsx",["195","196","197","198","199","200","201","202","203","204","205"],"import React, { Component } from \"react\";\r\nimport { ClientModel } from \"../../models/clientModel\";\r\nimport \"./all-clients.css\";\r\nimport { getAllClients } from \"../../data/clients\";\r\nimport { store } from \"../../redux/store\";\r\nimport { ActionType } from \"../../redux/actionType\";\r\nimport { Unsubscribe } from \"redux\";\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport axios from \"axios\";\r\nimport KeyboardArrowDownIcon from '@material-ui/icons/KeyboardArrowDown';\r\nimport { Config } from \"../../config\";\r\n\r\ninterface AllClientsState {\r\n    allClients: ClientModel[],\r\n    companies: string[],\r\n    isPopUpShow: boolean,\r\n    clientsToShow: ClientModel[],\r\n    selectedClients: ClientModel[],\r\n    currentFilterToBold: string,\r\n    hoveredImageId: number,\r\n    selectedCompany: string\r\n}\r\n\r\nexport class AllClients extends Component<any, AllClientsState>{\r\n\r\n    private unsubscribeStore: Unsubscribe;\r\n\r\n    public constructor(props: any) {\r\n        super(props);\r\n        this.state = {\r\n            allClients: [],\r\n            companies: [],\r\n            isPopUpShow: false,\r\n            clientsToShow: [],\r\n            selectedClients: store.getState().selectedClients,\r\n            currentFilterToBold: \"latest\",\r\n            hoveredImageId: 656724564,\r\n            selectedCompany: \"\"\r\n        }\r\n\r\n        this.unsubscribeStore = store.subscribe(() => {\r\n            const selectedClients = store.getState().selectedClients;\r\n            this.setState({ selectedClients });\r\n        })\r\n    }\r\n\r\n    async componentDidMount() {\r\n        try {\r\n            const response = await axios.get(Config.serverUrl + \"/all-clients/\");\r\n            const allClients: ClientModel[] = response.data.clients;\r\n            this.setState({ allClients });\r\n            this.setState({ clientsToShow: allClients });\r\n\r\n            store.dispatch({ type: ActionType.getAllClients, payLoad: allClients });\r\n        }\r\n        catch (err) {\r\n            console.log(err.message);\r\n        }\r\n\r\n    }\r\n\r\n\r\n    //Display latest campaigns who changed first  \r\n    public filterByLatest = () => {\r\n        const allClients = [...this.state.allClients];\r\n        for (const client of allClients) {\r\n            client.timePassed = Date.parse(client.lastUpdate as string)\r\n        }\r\n        allClients.sort((a, b) => ((a.timePassed as number) > (b.timePassed as number)) ? -1 : 1);\r\n        this.setState({ clientsToShow: allClients });\r\n        this.setState({ currentFilterToBold: \"latest\" })\r\n    }\r\n\r\n    public componentWillUnmount(): void {\r\n        this.unsubscribeStore();\r\n    }\r\n\r\n\r\n\r\n    //Add client to clients top list\r\n    public selectClient = (client: ClientModel) => (event: any) => {\r\n        const selectedClients: ClientModel[] = store.getState().selectedClients;\r\n        let isUnique: boolean = true;\r\n        selectedClients.map(selectedClient => {\r\n            if (selectedClient.clientId === client.clientId) {\r\n                isUnique = false;\r\n                store.dispatch({ type: ActionType.removeClient, payLoad: client.clientId });\r\n                return;\r\n            }\r\n        })\r\n        if (isUnique) {\r\n            let selectedClients = [...this.state.selectedClients];\r\n            selectedClients.push(client);\r\n            this.setState({ selectedClients });\r\n            store.dispatch({ type: ActionType.addClientToSelectedClients, payLoad: client });\r\n        }\r\n    }\r\n\r\n\r\n    //Filter companies by company in Mccann\r\n    public filterByCompany = (companyName: string) => (event: any) => {\r\n\r\n        if (companyName === \"הכל\") {\r\n            const allClients = [...this.state.allClients];\r\n            this.setState({ clientsToShow: allClients });\r\n            this.setState({ selectedCompany: \"\" });\r\n            return;\r\n        }\r\n\r\n        const clientsToShow = this.state.allClients.filter(c => c.company === companyName);\r\n        this.setState({ clientsToShow });\r\n        this.setState({ selectedCompany: companyName });\r\n    }\r\n\r\n    public addAllClientsForCompany = (companyName: string) => (event: any) => {\r\n\r\n        const selectedClients: ClientModel[] = store.getState().selectedClients;\r\n        const clientsToAdd = this.state.allClients.filter(c => c.company === companyName);\r\n        let isUnique: boolean = true;\r\n\r\n        for (const client of clientsToAdd) {\r\n            selectedClients.map(selectedClient => {\r\n                if (selectedClient.clientId === client.clientId) {\r\n                    isUnique = false;\r\n                    store.dispatch({ type: ActionType.removeClient, payLoad: client.clientId });\r\n                    return;\r\n                }\r\n            })\r\n            if (isUnique) {\r\n                let selectedClients = [...this.state.selectedClients];\r\n                selectedClients.push(client);\r\n                this.setState({ selectedClients });\r\n                store.dispatch({ type: ActionType.addClientToSelectedClients, payLoad: client });\r\n            }\r\n        }\r\n\r\n\r\n    }\r\n\r\n    public filterAlphabetically = () => {\r\n        const clientsByAlphabetically = this.state.allClients.map(c => c.clientName).sort();\r\n        let clientsToShow: ClientModel[] = [];\r\n        for (let i = 0; i <= clientsByAlphabetically.length; i++) {\r\n            for (const client of this.state.allClients) {\r\n                if (client.clientName === clientsByAlphabetically[i]) {\r\n                    clientsToShow.push(client);\r\n                }\r\n            }\r\n        }\r\n        this.setState({ clientsToShow });\r\n        this.setState({ currentFilterToBold: \"name\" })\r\n    }\r\n\r\n    public hoverBtn = (clientId: number) => (event: any) => {\r\n        this.setState({ hoveredImageId: clientId });\r\n\r\n    }\r\n\r\n    public unHoverBtn = (clientId: number) => (event: any) => {\r\n        this.setState({ hoveredImageId: 656724564 });\r\n    }\r\n\r\n\r\n\r\n    public render() {\r\n        return (\r\n            <div className=\"all-clients\">\r\n\r\n                <div className=\"filter-area\">\r\n                    <div className=\"left-filter\">\r\n                        <img className=\"filter-by-date-img\" src=\"./assets/images/filter_by_date.svg\" />\r\n                        <span className=\"filter-by-new\" style={{\r\n                            fontWeight: this.state.currentFilterToBold === \"latest\" ? \"bold\" : \"normal\",\r\n                            color: this.state.currentFilterToBold === \"latest\" ? \"black\" : \"grey\"\r\n                        }} onClick={this.filterByLatest}>Latest</span>\r\n                        <span className=\"separate\">|</span>\r\n                        <span className=\"filter-by-name\" style={{\r\n                            fontWeight: this.state.currentFilterToBold === \"name\" ? \"bold\" : \"normal\",\r\n                            color: this.state.currentFilterToBold === \"name\" ? \"black\" : \"grey\"\r\n                        }} onClick={this.filterAlphabetically}>A <span className=\"inside-filter\">to</span> Z</span>\r\n                    </div>\r\n\r\n\r\n                    <span onMouseEnter={() => this.setState({ isPopUpShow: true })}\r\n                        onMouseLeave={() => this.setState({ isPopUpShow: false })}\r\n                        className=\"filter-by-company\"><KeyboardArrowDownIcon\r\n                            style={{ fontSize: 16, position: \"relative\", top: 4 }} />\r\n                        דוח לפי חברה\r\n                        </span>\r\n\r\n                    {this.state.selectedCompany !== \"\" &&\r\n                        <span onClick={this.addAllClientsForCompany(this.state.selectedCompany)} className=\"addAllClientsForCompany\">הוספת כל לקוחות {this.state.selectedCompany}</span>}\r\n\r\n                </div>\r\n\r\n                {this.state.clientsToShow.length === 0 &&\r\n                    <img className=\"loader-main\" src=\"./assets/images/loading.gif\" />\r\n                   \r\n                }\r\n\r\n                <div className=\"clients-area\">\r\n\r\n                    {this.state.clientsToShow.length !== 0 && this.state.clientsToShow.map(client =>\r\n                        <div className=\"client\">\r\n                            <img src={client.clientImageSrc} onClick={this.selectClient(client)} />\r\n                            <div className=\"client-info\">\r\n                                <img src={this.state.selectedClients.filter(c => c.clientId === client.clientId).length === 0 && this.state.hoveredImageId !== client.clientId ?\r\n                                    \"./assets/images/add_button_before.svg\" : \"./assets/images/add_button_after.svg\"} onClick={this.selectClient(client)}\r\n                                    className=\"add-btn-img\" onMouseEnter={this.hoverBtn(client.clientId as number)} onMouseLeave={this.unHoverBtn(client.clientId as number)} />\r\n\r\n                                <span>{client.clientName}</span>\r\n                            </div>\r\n                        </div>)}\r\n\r\n                </div>\r\n\r\n\r\n\r\n\r\n\r\n                <div style={{ display: this.state.isPopUpShow ? \"block\" : \"none\" }} className=\"company-filter-pop-up-menu\"\r\n                    onMouseEnter={() => this.setState({ isPopUpShow: true })}\r\n                    onMouseLeave={() => this.setState({ isPopUpShow: false })}>\r\n                    <span onClick={this.filterByCompany(\"הכל\")} className=\"company-name\">כל הלקוחות</span>\r\n                    <span onClick={this.filterByCompany(\"Mccann\")} className=\"company-name\">לקוחות Mccann</span>\r\n                    <span onClick={this.filterByCompany(\"MRM\")} className=\"company-name\">לקוחות MRM</span>\r\n                    <span onClick={this.filterByCompany(\"Valley\")} className=\"company-name\">לקוחות Valley</span>\r\n                    <span onClick={this.filterByCompany(\"UMD\")} className=\"company-name\">לקוחות UMD</span>\r\n\r\n                </div>\r\n\r\n            </div>\r\n        )\r\n    }\r\n}","C:\\Users\\Maya\\Documents\\GitHub\\factory\\src\\components\\top-clients-nav\\top-clients-nav.tsx",["206","207","208","209","210","211","212"],"import React, { Component, useRef } from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { Unsubscribe } from \"redux\";\r\nimport { Logo } from \"../../get-logo\";\r\nimport { ClientModel } from \"../../models/clientModel\";\r\nimport { ActionType } from \"../../redux/actionType\";\r\nimport { store } from \"../../redux/store\";\r\nimport { AllClients } from \"../all-clients/all-clients\";\r\nimport \"./top-clients-nav.css\";\r\nimport ScrollContainer from 'react-indiana-drag-scroll'\r\n\r\ninterface TopClientsNavProps {\r\n    isScroll: boolean\r\n}\r\n\r\ninterface TopClientsNavState {\r\n    selectedClients: ClientModel[],\r\n    isButtonsScrolled: boolean,\r\n    showLogout: boolean\r\n}\r\n\r\nexport class TopClientsNav extends Component<TopClientsNavProps, TopClientsNavState>{\r\n\r\n    private unsubscribeStore: Unsubscribe;\r\n    public buttonsRef = React.createRef<any>();\r\n    public topNavRef = React.createRef<HTMLDivElement>();\r\n\r\n\r\n    public constructor(props: TopClientsNavProps) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            selectedClients: store.getState().selectedClients,\r\n            isButtonsScrolled: false,\r\n            showLogout: false\r\n        }\r\n\r\n        \r\n        this.unsubscribeStore = store.subscribe(() => {\r\n            const selectedClients = store.getState().selectedClients;\r\n            this.setState({ selectedClients });\r\n        })\r\n        \r\n       \r\n    }\r\n\r\n    componentDidMount() {\r\n\r\n        this.unsubscribeStore = store.subscribe(() => {\r\n            const selectedClients = store.getState().selectedClients;\r\n            this.setState({ selectedClients });\r\n        })\r\n\r\n        const topNavWidth: number = this.topNavRef.current?.clientWidth as number;\r\n        const maxWidth = topNavWidth / 100 * 60;\r\n        const buttonsWidth = this.buttonsRef?.current?.container.current.scrollWidth;\r\n\r\n        if (buttonsWidth > maxWidth) {\r\n            this.setState({ isButtonsScrolled: true });\r\n        }\r\n        else {\r\n            this.setState({ isButtonsScrolled: false });\r\n        }\r\n\r\n        window.addEventListener(\"click\", () => {\r\n\r\n            const updatedButtonsWidth = this.buttonsRef?.current?.container.current.scrollWidth;\r\n\r\n            if (updatedButtonsWidth > maxWidth) {\r\n                this.setState({ isButtonsScrolled: true });\r\n            }\r\n            else {\r\n                this.setState({ isButtonsScrolled: false });\r\n            }\r\n        })\r\n    }\r\n\r\n\r\n    public componentWillUnmount(): void {\r\n        this.unsubscribeStore();\r\n    }\r\n\r\n\r\n    public removeAllClients = () => {\r\n        this.setState({ selectedClients: [] })\r\n        store.dispatch({ type: ActionType.unselectAllClients });\r\n        store.dispatch({ type: ActionType.getSelectedCampaigns, payLoad: [] });\r\n        store.dispatch({ type: ActionType.getSelectedProducts, payLoad: [] });\r\n        store.dispatch({ type: ActionType.updateClientsToDisplay, payLoad: [] });\r\n        store.dispatch({ type: ActionType.updateCampaignsToDisplay, payLoad: [] });\r\n        store.dispatch({ type: ActionType.updateProductsToDisplay, payLoad: [] });\r\n\r\n    }\r\n\r\n    public removeClient = (clientId: number) => (event: any) => {\r\n        const selectedClients = [...this.state.selectedClients];\r\n        const index = selectedClients.findIndex(c => c.clientId === clientId);\r\n        selectedClients.splice(index, 1);\r\n        this.setState({ selectedClients });\r\n\r\n        store.dispatch({ type: ActionType.removeClient, payLoad: clientId });\r\n    }\r\n\r\n    public render() {\r\n        return (\r\n            <div ref={this.topNavRef} className=\"top-companies-nav\">\r\n                <img src=\"./assets/images/add-client-circle-off.svg\" className=\"no-selected-img\" style={{ display: this.state.selectedClients.length === 0 ? \"block\" : \"none\" }} />\r\n                <img src=\"./assets/images/add-client-circle-on.svg\" className=\"no-selected-img\" style={{ display: this.state.selectedClients.length > 0 ? \"block\" : \"none\" }} />\r\n\r\n\r\n                <ScrollContainer ref={this.buttonsRef} className=\"buttons\">\r\n\r\n                    {this.state?.selectedClients.map(client =>\r\n                        <button className=\"client-btn\">\r\n                            <button className=\"remove-btn\" onClick={this.removeClient(client.clientId as number)}>\r\n                                <span>&#10006;</span>\r\n                            </button>\r\n                            <span className=\"inside-client-btn\">{client.clientName}</span>\r\n                        </button>\r\n                    )}\r\n      \r\n                        <span style={{display: this.state.isButtonsScrolled ? \"block\" : \"none\"}} className=\"more-buttons-icon\">|</span>\r\n                </ScrollContainer>\r\n\r\n\r\n                <div className=\"top-scroll\" style={{ top: this.props.isScroll ? this.topNavRef.current?.clientHeight : 0 }}></div>\r\n                <img src=\"./assets/images/pink_btn_before.svg\" className=\"next-btn-pink\" style={{ display: this.state.selectedClients.length === 0 ? \"block\" : \"none\" }} />\r\n                <NavLink to=\"/report-maker\" className=\"link-to-report-maker\" exact>\r\n                    <img src=\"./assets/images/pink_btn_after.svg\" className=\"next-btn-pink\" style={{ display: this.state.selectedClients.length > 0 ? \"block\" : \"none\" }} />\r\n                </NavLink>\r\n                <div className=\"other-buttons\">\r\n                    <span className=\"remove-all\" onClick={this.removeAllClients}>מההתחלה</span>\r\n                </div>\r\n\r\n                <span className=\"logout-span\" onClick={() => this.setState({ showLogout: true })}>logout</span>\r\n\r\n                <div className=\"logo-container\"></div>\r\n                <img className=\"logo\" src={Logo.logoSrc} />\r\n\r\n                {this.state.showLogout &&\r\n                    <div className=\"logout-dialog\" >\r\n                        <span className=\"logout-subtitle\">התנתקות מהמערכת תמחק את כל הבחירות הנוכחיות</span>\r\n                        <br />\r\n                        <span className=\"logout-title\">מה ברצונך לעשות?</span>\r\n                        <br />\r\n                        <button className=\"logout-cancel-btn\" onClick={() => this.setState({ showLogout: false })}>אני רוצה להישאר</button>\r\n                        <button className=\"logout-confirm-btn\" onClick={() => store.dispatch({ type: ActionType.logoutEditingMode })}>אני רוצה להתנתק</button>\r\n                    </div>\r\n                }\r\n\r\n\r\n            </div>\r\n\r\n        )\r\n    }\r\n}","C:\\Users\\Maya\\Documents\\GitHub\\factory\\src\\components\\campaigns\\campaigns.tsx",["213","214","215","216","217","218","219","220","221","222","223","224","225","226","227","228","229","230","231","232","233","234","235"],"C:\\Users\\Maya\\Documents\\GitHub\\factory\\src\\components\\filtering-side-menu\\filtering-side-menu.tsx",["236","237","238","239","240","241","242","243","244","245","246","247","248","249","250","251","252","253","254","255","256","257","258"],"C:\\Users\\Maya\\Documents\\GitHub\\factory\\src\\components\\top-campaigns-nav\\top-campaigns-nav.tsx",["259","260","261","262"],"import React, { Component, useRef } from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { Unsubscribe } from \"redux\";\r\nimport { Logo } from \"../../get-logo\";\r\nimport { CampaignModel } from \"../../models/campaignModel\";\r\nimport { ClientModel } from \"../../models/clientModel\";\r\nimport { ProductModel } from \"../../models/productModel\";\r\nimport { ProductsType } from \"../../models/productsTypeModel\";\r\nimport { ActionType } from \"../../redux/actionType\";\r\nimport { store } from \"../../redux/store\";\r\nimport { AddClientPopUp } from \"../add-client-pop-up/add-client-pop-up\";\r\nimport { AllClients } from \"../all-clients/all-clients\";\r\nimport \"./top-campaigns-nav.css\";\r\nimport ScrollContainer from 'react-indiana-drag-scroll'\r\n\r\ninterface TopCampaignsNavProps {\r\n    isScroll: boolean\r\n}\r\n\r\ninterface TopCampaignsNavState {\r\n    selectedClients: ClientModel[],\r\n    clientsToDisplay: ClientModel[],\r\n    isButtonsScrolled: boolean,\r\n    display: boolean,\r\n    filteringBefore: {\r\n        beforeCampaignsToDisplay: CampaignModel[],\r\n        beforeProductsToDisplay: ProductModel[]\r\n\r\n    },\r\n    showLogout: boolean\r\n}\r\n\r\nexport class TopCampaignsNav extends Component<TopCampaignsNavProps, TopCampaignsNavState>{\r\n\r\n    private unsubscribeStore: Unsubscribe;\r\n    public buttonsRef = React.createRef<any>();\r\n    public topNavRef = React.createRef<HTMLDivElement>();\r\n\r\n\r\n    public constructor(props: TopCampaignsNavProps) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            selectedClients: store.getState().selectedClients,\r\n            clientsToDisplay: store.getState().clientsToDisplay,\r\n            isButtonsScrolled: false,\r\n            display: store.getState().isPopUpShow,\r\n            filteringBefore: {\r\n                beforeCampaignsToDisplay: [],\r\n                beforeProductsToDisplay: []\r\n            },\r\n            showLogout: false\r\n        }\r\n        this.unsubscribeStore = store.subscribe(() => {\r\n            const selectedClients = store.getState().selectedClients;\r\n            const display = store.getState().isPopUpShow;\r\n            const clientsToDisplay = store.getState().clientsToDisplay;\r\n            this.setState({ selectedClients });\r\n            this.setState({ display });\r\n            this.setState({ clientsToDisplay });\r\n\r\n\r\n            const topNavWidth: number = this.topNavRef.current?.clientWidth as number;\r\n            const maxWidth = topNavWidth / 100 * 70;\r\n            const buttonsWidth = this.buttonsRef?.current?.container.current.scrollWidth as number;\r\n            if (buttonsWidth > maxWidth) {\r\n                this.setState({ isButtonsScrolled: true });\r\n            }\r\n            else {\r\n                this.setState({ isButtonsScrolled: false });\r\n            }\r\n        })\r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n        const topNavWidth: number = this.topNavRef.current?.clientWidth as number;\r\n        const maxWidth = topNavWidth / 100 * 70;\r\n        const buttonsWidth = this.buttonsRef?.current?.container.current.scrollWidth as number;\r\n\r\n        if (buttonsWidth > maxWidth) {\r\n            this.setState({ isButtonsScrolled: true });\r\n        }\r\n        else {\r\n            this.setState({ isButtonsScrolled: false });\r\n        }\r\n\r\n\r\n        window.addEventListener(\"click\", () => {\r\n            const topNavWidth: number = this.topNavRef.current?.clientWidth as number;\r\n            const maxWidth = topNavWidth / 100 * 70;\r\n            const buttonsWidth = this.buttonsRef?.current?.container.current.scrollWidth as number;\r\n\r\n            if (buttonsWidth > maxWidth) {\r\n                this.setState({ isButtonsScrolled: true });\r\n            }\r\n            else {\r\n                this.setState({ isButtonsScrolled: false });\r\n            }\r\n        })\r\n    }\r\n\r\n\r\n    public filterByClientId = (clientId: number) => (event: any) => {\r\n\r\n        const campaignsToDisplay: CampaignModel[] = [];\r\n\r\n        const filteringBefore = { ...this.state.filteringBefore };\r\n        filteringBefore.beforeCampaignsToDisplay = store.getState().campaignsToDisplay;\r\n        filteringBefore.beforeProductsToDisplay = store.getState().productsToDisplay;\r\n        this.setState({ filteringBefore });\r\n\r\n        const allSelectedCampaigns = store.getState().selectedCampaigns;\r\n        for (const c of allSelectedCampaigns) {\r\n            if (c.clientId === clientId) {\r\n                campaignsToDisplay.push(c);\r\n            }\r\n        }\r\n        store.dispatch({ type: ActionType.updateCampaignsToDisplay, payLoad: campaignsToDisplay });\r\n\r\n\r\n        const clientsToDisplay: ClientModel[] = [];\r\n        const allSelectedClients = store.getState().selectedClients;\r\n        for (const c of allSelectedClients) {\r\n            if (c.clientId === clientId) {\r\n                clientsToDisplay.push(c);\r\n            }\r\n        }\r\n\r\n        store.dispatch({ type: ActionType.updateClientsToDisplay, payLoad: clientsToDisplay });\r\n    }\r\n\r\n\r\n    public componentWillUnmount(): void {\r\n        this.unsubscribeStore();\r\n    }\r\n\r\n    public scrollToRight = () => {\r\n        this.buttonsRef.current?.scrollTo({\r\n            top: 0,\r\n            left: 0,\r\n            behavior: \"smooth\"\r\n        });\r\n    }\r\n\r\n\r\n    public removeClient = (clientId: number) => (event: any) => {\r\n\r\n        //Remove from clients in redux\r\n        const selectedClients = [...this.state.selectedClients];\r\n        const index = selectedClients.findIndex(c => c.clientId === clientId);\r\n        selectedClients.splice(index, 1);\r\n        this.setState({ selectedClients });\r\n\r\n        store.dispatch({ type: ActionType.removeClient, payLoad: clientId });\r\n\r\n    }\r\n\r\n    public openPopUp = () => {\r\n        store.dispatch({ type: ActionType.changeDisplayForPopUp, payLoad: false });\r\n    }\r\n\r\n    public resetClientsToDisplay = () => {\r\n        store.dispatch({ type: ActionType.updateClientsToDisplay, payLoad: [] });\r\n        store.dispatch({ type: ActionType.updateCampaignsToDisplay, payLoad: this.state.filteringBefore.beforeCampaignsToDisplay });\r\n        store.dispatch({ type: ActionType.updateProductsToDisplay, payLoad: this.state.filteringBefore.beforeProductsToDisplay });\r\n    }\r\n\r\n\r\n    public render() {\r\n        return (\r\n            <div ref={this.topNavRef} className=\"top-campaigns-nav\">\r\n\r\n\r\n                <ScrollContainer ref={this.buttonsRef} className=\"campaigns-buttons\">\r\n\r\n                {this.state.clientsToDisplay.length === 0 && this.state?.selectedClients.map(client =>\r\n                        <button className=\"campaigns-client-btn\" onClick={this.filterByClientId(client.clientId as number)}>\r\n                            <button className=\"campaigns-remove-btn\" onClick={this.removeClient(client.clientId as number)}>\r\n                                <span>&#10006;</span>\r\n                            </button>\r\n                            <span className=\"campaigns-inside-client-btn\">{client.clientName}</span>\r\n                        </button>\r\n                    )}\r\n\r\n                    {this.state.clientsToDisplay.length > 0 && this.state?.clientsToDisplay.map(client =>\r\n                        <button className=\"campaigns-client-btn\" onClick={this.filterByClientId(client.clientId as number)}>\r\n                            <button className=\"campaigns-remove-btn\" onClick={this.removeClient(client.clientId as number)}>\r\n                                <span>&#10006;</span>\r\n                            </button>\r\n                            <span className=\"campaigns-inside-client-btn\">{client.clientName}</span>\r\n                        </button>\r\n                    )}\r\n\r\n\r\n                    <span style={{ display: this.state.isButtonsScrolled ? \"block\" : \"none\" }} className=\"campaigns-more-buttons-icon\">|</span>\r\n                </ScrollContainer>\r\n\r\n\r\n                {this.state.clientsToDisplay.length === 0 &&\r\n                    <span className=\"add-client-span\" onClick={this.openPopUp}>הוספת לקוח</span>}\r\n\r\n                <span className=\"logout-span\" onClick={() => this.setState({ showLogout: true })}>logout</span>\r\n\r\n                {this.state.clientsToDisplay.length > 0 &&\r\n                    <span className=\"add-client-span\" onClick={this.resetClientsToDisplay}>כל הלקוחות</span>}\r\n\r\n                <div className=\"campaigns-top-scroll\" style={{ top: this.props.isScroll ? this.topNavRef.current?.clientHeight : 0 }}></div>\r\n\r\n                <NavLink to=\"/home\">\r\n                    <img className=\"campaigns-logo\" src={Logo.logoSrc} />\r\n                </NavLink>\r\n\r\n                {this.state.display &&\r\n                    <AddClientPopUp />\r\n                }\r\n\r\n\r\n                {this.state.showLogout &&\r\n                    <div className=\"logout-dialog\" >\r\n                        <span className=\"logout-subtitle\">התנתקות מהמערכת תמחק את כל הבחירות הנוכחיות</span>\r\n                        <br />\r\n                        <span className=\"logout-title\">מה ברצונך לעשות?</span>\r\n                        <br />\r\n                        <button className=\"logout-cancel-btn\" onClick={() => this.setState({ showLogout: false })}>אני רוצה להישאר</button>\r\n                        <button className=\"logout-confirm-btn\" onClick={() => store.dispatch({ type: ActionType.logoutEditingMode })}>אני רוצה להתנתק</button>\r\n                    </div>\r\n                }\r\n\r\n            </div>\r\n\r\n        )\r\n    }\r\n}\r\n","C:\\Users\\Maya\\Documents\\GitHub\\factory\\src\\components\\link-pop-up\\link-pop-up.tsx",["263","264"],"import React, { ChangeEvent, Component } from \"react\";\r\nimport { ActionType } from \"../../redux/actionType\";\r\nimport { store } from \"../../redux/store\";\r\nimport \"./link-pop-up.css\";\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport { Config } from \"../../config\";\r\nimport { config } from \"process\";\r\nimport { ReportModel } from \"../../models/reportModel\";\r\nimport axios from \"axios\";\r\nimport { Unsubscribe } from \"redux\";\r\nimport { ClientModel } from \"../../models/clientModel\";\r\nimport { UserModel } from \"../../models/userModel\";\r\n\r\ninterface LinkPopUpState {\r\n    url: string,\r\n    isReportCreated: boolean,\r\n    uuid: string,\r\n    user: UserModel,\r\n    report: ReportModel,\r\n    datesRanges: string\r\n}\r\n\r\nexport class LinkPopUp extends Component<any, LinkPopUpState>{\r\n\r\n    public urlInput = React.createRef<HTMLDivElement>();\r\n    private unsubscribeStore: Unsubscribe;\r\n    public linkRef = React.createRef<HTMLInputElement>();\r\n\r\n\r\n    public constructor(props: any) {\r\n        super(props);\r\n        this.state = {\r\n            url: \"\",\r\n            isReportCreated: false,\r\n            uuid: \"\",\r\n            user: store.getState().user,\r\n            report: new ReportModel(),\r\n            datesRanges: store.getState().datesRange\r\n        }\r\n\r\n        this.unsubscribeStore = store.subscribe(() => {\r\n            const user = store.getState().user;\r\n            this.setState({ user });\r\n            const datesRanges = store.getState().datesRange;\r\n            this.setState({datesRanges});\r\n        })\r\n    }\r\n\r\n    public componentDidMount() {\r\n        let url =window.location.href.split(\"/r\")[0]  ;\r\n        this.setState({ url });\r\n    }\r\n\r\n    public componentWillUnmount(): void {\r\n        this.unsubscribeStore();\r\n    }\r\n\r\n\r\n    public closePopUp = () => {\r\n        store.dispatch({ type: ActionType.changeDisplayForLinkPopUp });\r\n    }\r\n\r\n    public stopPropagation = (e: any) => {\r\n        e.stopPropagation();\r\n    }\r\n\r\n    public copyToClipboard = () => {\r\n        console.log(this.state.report);\r\n\r\n        this.linkRef.current?.select();\r\n        document.execCommand(\"copy\");\r\n    };\r\n\r\n    public setReportName = (args: ChangeEvent<HTMLInputElement>) => {\r\n        const reportName = args.target.value;\r\n        const report = { ...this.state.report };\r\n        report.reportName = reportName;;\r\n        this.setState({ report });\r\n    }\r\n\r\n\r\n    public createReport = async () => {\r\n        try {\r\n            store.dispatch({ type: ActionType.saveReport });\r\n            //Made new report\r\n            const report = { ...this.state.report };\r\n            const uuid = this.uuid();\r\n            const url = this.state.url + \"/\" + uuid;\r\n            this.setState({ url });\r\n            this.setState({ uuid });\r\n            report.uuid = uuid;\r\n            report.creatorId = this.state.user.userId;\r\n            report.creationDate = new Date().toLocaleDateString();\r\n            report.datesOnReport= store.getState().datesRange;\r\n\r\n            const allClients: ClientModel[] = store.getState().selectedClients;\r\n            //Push new report all selections\r\n            report.clients = allClients;\r\n            report.campaigns = store.getState().campaignsToDisplay;\r\n            report.products = store.getState().productsToDisplay;\r\n\r\n            if (report.campaigns && report.campaigns?.length > 0) {\r\n                report.clients = [];\r\n                const filteredClients: ClientModel[] = [];\r\n                report.campaigns?.map(campaign => {\r\n                    allClients.filter(client => client.clientId === campaign.clientId)\r\n                        .forEach(c => filteredClients.push(c));\r\n                });\r\n                report.clients = filteredClients;\r\n            }\r\n\r\n            const id: string = (this.state.user.userId?.toString() as string);\r\n\r\n\r\n            let formData = new FormData();\r\n            formData.append(\"state\", JSON.stringify(report));\r\n            formData.append(\"userId\", id);\r\n            formData.append(\"uuid\", uuid);\r\n            await axios.post(Config.serverUrl + \"/create-report/\", formData);\r\n\r\n            this.setState({ isReportCreated: true });\r\n            this.setState({report});\r\n        }\r\n        catch (err) {\r\n            console.log(err.message);\r\n        }\r\n\r\n    }\r\n\r\n    public uuid = () => {\r\n        const hashTable = [\r\n            'a', 'b', 'c', 'd', 'e', 'f',\r\n            '0', '1', '2', '3', '4', '5', '6', '7', '8', '9'\r\n        ]\r\n        let uuid = []\r\n        for (let i = 0; i < 35; i++) {\r\n            if (i === 7 || i === 12 || i === 17 || i === 22) {\r\n                uuid[i] = '-'\r\n            } else {\r\n                uuid[i] = hashTable[Math.floor(Math.random() * hashTable.length - 1)]\r\n            }\r\n        }\r\n        return uuid.join('');\r\n    }\r\n\r\n    public render() {\r\n        return (\r\n            <div className=\"full-screen-link-conatiner\" onClick={this.closePopUp} >\r\n\r\n                <div className=\"small-link-conatiner\" onClick={this.stopPropagation}>\r\n                    <button className=\"close-link-pop-up-btn\" onClick={this.closePopUp} ><CloseIcon /></button>\r\n\r\n                    <div className={this.state.isReportCreated ? \"inner-content-first out\" : \"inner-content-first\"}>\r\n                        <h2 className=\"link-title\">בחירת שם לדו\"ח</h2>\r\n                        <input onChange={this.setReportName} className=\"report-name-box\" />\r\n\r\n                        <button disabled={!this.state.report.reportName} onClick={this.createReport}\r\n                            className=\"copy-link-btn\">יצירת דו\"ח תוצרים</button>\r\n                    </div>\r\n\r\n\r\n                    <div className={this.state.isReportCreated ? \"inner-content-second in\" : \"inner-content-second\"}>\r\n\r\n                        <h2 className=\"link-title\">{this.state.report.reportName} :והנה הלינק לשיתוף</h2>\r\n                        <input ref={this.linkRef} className=\"url-box\" value={this.state.url} />\r\n\r\n                        <button onClick={this.copyToClipboard} className=\"copy-link-btn\">העתקת קישור</button>\r\n                        <button className=\"send-on-email-btn\">\r\n                            <a href={`mailto:?subject=תוצרי פקטורי - ${this.state.report.reportName} ${this.state.report.datesOnReport}\r\n                            &body=מומלץ לצרוך את התוכן הבא בישיבה.%0D%0Aאם הנכם חשים תופעות מסוג: חיוך בלתי נשלט, פששש, וואו, איזה מדהים, כמה כישרון, הלם, איזה פקטורי זה, סימן שהחודש הצלחנו!%0D%0A%0D%0Aצפייה מהנה%0D%0A${this.state.url}`}>\r\n                                שליחה במייל\r\n                            </a>\r\n                        </button>\r\n                    </div>\r\n\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}","C:\\Users\\Maya\\Documents\\GitHub\\factory\\src\\components\\reports-history-pop-up\\reports-history-pop-up.tsx",["265","266","267","268"],"import React, { Component } from \"react\";\r\nimport { ActionType } from \"../../redux/actionType\";\r\nimport { store } from \"../../redux/store\";\r\nimport \"./reports-history-pop-up.css\";\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport { ReportModel } from \"../../models/reportModel\";\r\nimport axios from \"axios\";\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport VisibilityIcon from '@material-ui/icons/Visibility';\r\nimport LinkIcon from '@material-ui/icons/Link';\r\nimport { Config } from \"../../config\";\r\nimport { CampaignModel } from \"../../models/campaignModel\";\r\nimport { ProductModel } from \"../../models/productModel\";\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport ExpandLessIcon from '@material-ui/icons/ExpandLess';\r\nimport { DateModel } from \"../../models/dateModel\";\r\n\r\ninterface ReportsHistoryPopUpState {\r\n    reports: ReportModel[],\r\n    reportsToDisplay: ReportModel[],\r\n    allStartDates: DateModel[],\r\n    sorting: {\r\n        alphabetically: string,\r\n        dates: string\r\n    }\r\n}\r\n\r\n\r\n\r\nexport class ReportsHistoryPopUp extends Component<any, ReportsHistoryPopUpState>{\r\n\r\n    public constructor(props: any) {\r\n        super(props);\r\n        this.state = {\r\n            reports: [],\r\n            reportsToDisplay: [],\r\n            allStartDates: [],\r\n            sorting: {\r\n                alphabetically: \"down\",\r\n                dates: \"down\"\r\n            }\r\n        }\r\n    }\r\n\r\n    public async componentDidMount() {\r\n        try {\r\n            const user = store.getState().user;\r\n            const response = await axios.get(Config.serverUrl + \"/reports-by-user/?userId=\" + user.userId);\r\n            const reportsStr = response.data;\r\n            if (typeof (reportsStr) === 'object') {\r\n                const reports: ReportModel[] = [];\r\n                reports.push(reportsStr);\r\n                this.setState({ reports });\r\n            }\r\n            else {\r\n                const fixedJson = \"[\" + reportsStr.replace(/}{/g, \"},{\") + \"]\";\r\n                const reports: ReportModel[] = JSON.parse(fixedJson);\r\n                this.setState({ reports });\r\n                this.setState({ reportsToDisplay: reports });\r\n            }\r\n            setTimeout(() => {\r\n                const allReports = [...this.state.reports];\r\n                const allStartDates: DateModel[] = [];\r\n                for (const r of allReports) {\r\n                    const obj = new DateModel();\r\n                    obj.uuid = r.uuid;\r\n                    obj.date = r.datesOnReport?.split(\" - \")[1] as string;\r\n                    allStartDates.push(obj);\r\n                }\r\n                this.setState({ allStartDates });\r\n\r\n            }, 1000);\r\n        }\r\n        catch (err) {\r\n            console.log(err.message);\r\n        }\r\n    }\r\n\r\n    public openLinkPopUp = (report: ReportModel) => (event: any) => {\r\n        store.dispatch({ type: ActionType.changeDisplayForReportsPopUp });\r\n        store.dispatch({ type: ActionType.changeDisplayForReportsLinkPopUp });\r\n        store.dispatch({ type: ActionType.getReportToCopy, payLoad: report });\r\n    }\r\n\r\n    public watchReport = (report: ReportModel) => async (event: any) => {\r\n        store.dispatch({ type: ActionType.updateSelectedClients, payLoad: report.clients });\r\n        store.dispatch({ type: ActionType.getSelectedCampaigns, payLoad: report.campaigns });\r\n        store.dispatch({ type: ActionType.getSelectedProducts, payLoad: report.products });\r\n        store.dispatch({ type: ActionType.getDatesRanges, payLoad: report.datesOnReport });\r\n\r\n        const response = await axios.get(Config.serverUrl + \"/all-campaigns/\");\r\n        const allCampaigns: CampaignModel[] = response.data.campaigns;\r\n\r\n        if (report.campaigns?.length === 0) {\r\n            const selectedCampaigns: CampaignModel[] = [];\r\n            report.clients?.map(client => {\r\n                allCampaigns.map(campaign => {\r\n                    if (campaign.clientId === client.clientId) {\r\n                        selectedCampaigns.push(campaign);\r\n                    }\r\n                })\r\n            })\r\n            store.dispatch({ type: ActionType.getSelectedCampaigns, payLoad: selectedCampaigns });\r\n        }\r\n\r\n\r\n        if (report.products?.length === 0) {\r\n            const responseForProducts = await axios.get(Config.serverUrl + \"/all-products\");\r\n            const allProductsFromDb: ProductModel[] = responseForProducts.data.products;\r\n            const selectedCampaigns: CampaignModel[] = store.getState().selectedCampaigns;\r\n\r\n            const selectedProducts: ProductModel[] = [];\r\n            selectedCampaigns.map(campaign => {\r\n                allProductsFromDb.map(product => {\r\n                    if (product.campaignId === campaign.campaignId) {\r\n                        selectedProducts.push(product);\r\n\r\n                    }\r\n                })\r\n            });\r\n\r\n            store.dispatch({ type: ActionType.getSelectedProducts, payLoad: selectedProducts });\r\n        }\r\n        store.dispatch({ type: ActionType.changeDisplayForReportsPopUp });\r\n    }\r\n\r\n    public sortAlphabetically = () => {\r\n        if (this.state.sorting.alphabetically === \"down\") {\r\n            const reportsByAlphabetically = this.state.reports.map(r => r.reportName).sort();\r\n            let reportsToDisplay: ReportModel[] = [];\r\n            for (let i = 0; i <= reportsByAlphabetically.length; i++) {\r\n                for (const report of this.state.reports) {\r\n                    if (report.reportName === reportsByAlphabetically[i]) {\r\n                        reportsToDisplay.push(report);\r\n                    }\r\n                }\r\n            }\r\n            this.setState({ reportsToDisplay });\r\n            const sorting = { ...this.state.sorting };\r\n            sorting.alphabetically = \"up\";\r\n            this.setState({ sorting });\r\n            return;\r\n        }\r\n        const reportsByAlphabetically = this.state.reports.map(r => r.reportName).sort();\r\n        let reportsToDisplay: ReportModel[] = [];\r\n        for (let i = reportsByAlphabetically.length; i >= 0; i--) {\r\n            for (const report of this.state.reports) {\r\n                if (report.reportName === reportsByAlphabetically[i]) {\r\n                    reportsToDisplay.push(report);\r\n                }\r\n            }\r\n        }\r\n        this.setState({ reportsToDisplay });\r\n        const sorting = { ...this.state.sorting };\r\n        sorting.alphabetically = \"down\";\r\n        this.setState({ sorting });\r\n        return;\r\n\r\n    }\r\n\r\n    public filterByDates = () => {\r\n        const allDates = [...this.state.allStartDates];\r\n        const allReports = [...this.state.reports];\r\n        for (const date of allDates) {\r\n            for (const r of allReports) {\r\n                if (date.date && r.uuid === date.uuid) {\r\n                    const dateArr = date.date.split(\"/\");\r\n                    const fixedDate = `${dateArr[1]}/${dateArr[0]}/${dateArr[2]}`\r\n                    r.timePassed = Date.parse(fixedDate as string);\r\n                }\r\n            }\r\n        }\r\n        const sorting = { ...this.state.sorting };\r\n        if (sorting.dates === \"down\") {\r\n            allReports.sort((a, b) => ((a.timePassed as number) > (b.timePassed as number)) ? 1 : -1);\r\n            this.setState({ reportsToDisplay: allReports });\r\n            sorting.dates = \"up\";\r\n            this.setState({ sorting });\r\n        }\r\n        else {\r\n            allReports.sort((a, b) => ((a.timePassed as number) > (b.timePassed as number)) ? -1 : 1);\r\n            this.setState({ reportsToDisplay: allReports });\r\n            sorting.dates = \"down\";\r\n            this.setState({ sorting });\r\n        }\r\n\r\n\r\n    }\r\n\r\n    public render() {\r\n        return (\r\n            <div className=\"full-screen-link-conatiner\">\r\n                <div className=\"small-reports-conatiner\">\r\n                    <button className=\"close-reports-pop-up-btn\"\r\n                        onClick={() => store.dispatch({ type: ActionType.changeDisplayForReportsPopUp })} >\r\n                        <CloseIcon />\r\n                    </button>\r\n                    <h2>היסטוריית הדוחות שלי</h2>\r\n                    <table>\r\n                        <thead>\r\n                            <tr>\r\n                                <th className=\"name-th\" onClick={this.sortAlphabetically}>\r\n                                    שם הדו\"ח\r\n                                    {this.state.sorting.alphabetically === \"down\" && <ExpandMoreIcon />}\r\n                                    {this.state.sorting.alphabetically === \"up\" && <ExpandLessIcon />}\r\n                                </th>\r\n                                <th className=\"dates-th\" onClick={this.filterByDates}>\r\n                                    תאריכים\r\n                                    {this.state.sorting.dates === \"down\" && <ExpandMoreIcon />}\r\n                                    {this.state.sorting.dates === \"up\" && <ExpandLessIcon />}\r\n                                </th>\r\n                                <th className=\"watch-th\">צפייה</th>\r\n                                <th className=\"link-th\"> קישור</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {this.state.reportsToDisplay.length !== 0 && this.state.reportsToDisplay.map(r =>\r\n                                <tr className=\"white\">\r\n                                    <td>{r.reportName}</td>\r\n                                    <td>{r.datesOnReport}</td>\r\n                                    <td>\r\n                                        <IconButton onClick={this.watchReport(r)}>\r\n                                            <VisibilityIcon style={{ fontSize: 25 }} />\r\n                                        </IconButton>\r\n                                    </td>\r\n                                    <td>\r\n                                        <IconButton onClick={this.openLinkPopUp(r as ReportModel)}>\r\n                                            <LinkIcon style={{ fontSize: 25 }} />\r\n                                        </IconButton>\r\n                                    </td>\r\n\r\n                                </tr>\r\n                            )}\r\n                        </tbody>\r\n                    </table>\r\n\r\n\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}","C:\\Users\\Maya\\Documents\\GitHub\\factory\\src\\components\\no-campains-pop-up\\no-campains-pop-up.tsx",["269","270"],"import React, { Component } from \"react\";\r\nimport \"./no-campains-pop-up.css\";\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport { ActionType } from \"../../redux/actionType\";\r\nimport { store } from \"../../redux/store\";\r\nimport { ClientModel } from \"../../models/clientModel\";\r\nimport { Unsubscribe } from \"redux\";\r\n\r\ninterface NoCampaignsPopUpState {\r\n    nonClientsCampaigns: ClientModel[]\r\n}\r\n\r\n\r\nexport class NoCampaignsPopUp extends Component<any, NoCampaignsPopUpState>{\r\n\r\n    private unsubscribeStore: Unsubscribe;\r\n\r\n    public constructor(props: any) {\r\n        super(props);\r\n        this.state = {\r\n            nonClientsCampaigns: store.getState().nonCampaignsClients\r\n        }\r\n\r\n        this.unsubscribeStore = store.subscribe(() => {\r\n            const nonClientsCampaigns = store.getState().nonCampaignsClients;\r\n            this.setState({ nonClientsCampaigns });\r\n\r\n        })\r\n    }\r\n\r\n\r\n    public componentWillUnmount(): void {\r\n        this.unsubscribeStore();\r\n    }\r\n\r\n\r\n    public closePopUp = () => {\r\n        store.dispatch({ type: ActionType.changeDisplayForNoCampaignsPopUp, payLoad: false });\r\n    }\r\n\r\n    public componentDidMount() {\r\n        setTimeout(() => {\r\n            this.removeNonClientsCampaigns();\r\n        }, 2000);\r\n\r\n    }\r\n\r\n    public removeNonClientsCampaigns = () => {\r\n        this.state.nonClientsCampaigns.map(c => {\r\n            store.dispatch({ type: ActionType.removeClient, payLoad: c.clientId });\r\n        })\r\n    }\r\n\r\n\r\n    public render() {\r\n        return (\r\n            <div className=\"no-campaigns-pop-up\">\r\n                <div className=\"inside-no-campaigns-pop-up\">\r\n                    ,הלקוחות הבאים הוסרו מהדו\"ח\r\n                        <br />\r\n                        :כי וואלה, לא עשינו להם כלום החודש\r\n                        <br />\r\n                    <span>{this.state.nonClientsCampaigns.map(c => {\r\n                        if (this.state.nonClientsCampaigns.indexOf(c) !== (this.state.nonClientsCampaigns.length - 1 )) {\r\n                            return <span>{c.clientName + \", \"}</span>\r\n                        }\r\n                        else{\r\n                            return <span>{c.clientName + \" \"}</span>\r\n                        }\r\n                    }\r\n                    )}\r\n                    </span>\r\n                    <br />\r\n                    <br />\r\n                    <button className=\"sababa-btn\" onClick={this.closePopUp}>סבבה</button>\r\n                    <br />\r\n\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\n","C:\\Users\\Maya\\Documents\\GitHub\\factory\\src\\components\\link-pop-up-from-report\\link-pop-up-from-report.tsx",["271","272","273","274","275"],"import React, { ChangeEvent, Component } from \"react\";\r\nimport { ActionType } from \"../../redux/actionType\";\r\nimport { store } from \"../../redux/store\";\r\nimport \"./link-pop-up-from-report.css\";\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport { Config } from \"../../config\";\r\nimport { config } from \"process\";\r\nimport { ReportModel } from \"../../models/reportModel\";\r\nimport axios from \"axios\";\r\nimport { Unsubscribe } from \"redux\";\r\nimport { ClientModel } from \"../../models/clientModel\";\r\nimport { UserModel } from \"../../models/userModel\";\r\n\r\ninterface LinkPopUpFromReportState {\r\n    url: string,\r\n    user: UserModel,\r\n    report: ReportModel\r\n}\r\n\r\n\r\nexport class LinkPopUpFromReport extends Component<any, LinkPopUpFromReportState>{\r\n\r\n    public urlInput = React.createRef<HTMLDivElement>();\r\n    private unsubscribeStore: Unsubscribe;\r\n    public linkRef = React.createRef<HTMLInputElement>();\r\n\r\n\r\n    public constructor(props: any) {\r\n        super(props);\r\n        this.state = {\r\n            url: \"\",\r\n            user: store.getState().user,\r\n            report: store.getState().reportToCopy\r\n        }\r\n\r\n        this.unsubscribeStore = store.subscribe(() => {\r\n            const user = store.getState().user;\r\n            this.setState({ user });\r\n            const report = store.getState().reportToCopy;\r\n            this.setState({ report });\r\n        })\r\n    }\r\n\r\n    public componentDidMount() {\r\n        const currentUrl = window.location.href;\r\n        let url = currentUrl.split(\"/r\")[0] + \"/\" + this.state.report.uuid;\r\n        this.setState({ url });\r\n    }\r\n\r\n    public componentWillUnmount(): void {\r\n        this.unsubscribeStore();\r\n    }\r\n\r\n\r\n    public closePopUp = () => {\r\n        store.dispatch({ type: ActionType.changeDisplayForReportsLinkPopUp });\r\n    }\r\n\r\n    public stopPropagation = (e: any) => {\r\n        e.stopPropagation();\r\n    }\r\n\r\n    public copyToClipboard = () => {\r\n\r\n        this.linkRef.current?.select();\r\n        document.execCommand(\"copy\");\r\n    };\r\n\r\n\r\n    public render() {\r\n        return (\r\n            <div className=\"full-screen-link-conatiner\" onClick={this.closePopUp} >\r\n\r\n                <div className=\"small-link-conatiner\" onClick={this.stopPropagation}>\r\n                    <button className=\"close-link-pop-up-btn\" onClick={this.closePopUp} ><CloseIcon /></button>\r\n\r\n\r\n                    <div className=\"inner-content in\">\r\n\r\n                        <h2 className=\"link-title\">והנה הלינק לשיתוף לדו\"ח {this.state.report.reportName} </h2>\r\n                        <input ref={this.linkRef} className=\"url-box\" value={this.state.url} />\r\n\r\n                        <button onClick={this.copyToClipboard} className=\"copy-link-btn\">העתקת קישור</button>\r\n                        <button className=\"send-on-email-btn\">\r\n                            <a href={`mailto:?subject=${this.state.report.reportName}-${this.state.report.datesOnReport}\r\n                            &body=${this.state.url}`}>\r\n                                שליחה במייל\r\n                            </a>\r\n                        </button>\r\n                    </div>\r\n\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}","C:\\Users\\Maya\\Documents\\GitHub\\factory\\src\\components\\top-report-nav\\top-report-nav.tsx",["276","277","278","279","280","281"],"import React, { Component, useRef } from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { Unsubscribe } from \"redux\";\r\nimport { Logo } from \"../../get-logo\";\r\nimport { CampaignModel } from \"../../models/campaignModel\";\r\nimport { ClientModel } from \"../../models/clientModel\";\r\nimport { ProductModel } from \"../../models/productModel\";\r\nimport { ActionType } from \"../../redux/actionType\";\r\nimport { store } from \"../../redux/store\";\r\nimport { AddClientPopUp } from \"../add-client-pop-up/add-client-pop-up\";\r\nimport { AllClients } from \"../all-clients/all-clients\";\r\nimport \"./top-report-nav.css\";\r\nimport ScrollContainer from 'react-indiana-drag-scroll'\r\nimport { ReportModel } from \"../../models/reportModel\";\r\n\r\ninterface TopReportNavProps {\r\n    isScroll: boolean\r\n}\r\n\r\ninterface TopReportNavState {\r\n    selectedClients: ClientModel[],\r\n    isButtonsScrolled: boolean,\r\n    display: boolean,\r\n    filteringBefore: {\r\n        beforeCampaignsToDisplay: CampaignModel[],\r\n        beforeProductsToDisplay: ProductModel[]\r\n\r\n    },\r\n    isMobile: boolean,\r\n    barTop: string,\r\n    report: ReportModel\r\n}\r\n\r\nexport class TopReportNav extends Component<TopReportNavProps, TopReportNavState>{\r\n\r\n    private unsubscribeStore: Unsubscribe;\r\n    public buttonsRef = React.createRef<any>();\r\n    public topNavRef = React.createRef<HTMLDivElement>();\r\n    public barTop: string = \"\";\r\n\r\n\r\n    public constructor(props: TopReportNavProps) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            selectedClients: store.getState().selectedClients,\r\n            isButtonsScrolled: false,\r\n            display: store.getState().isPopUpShow,\r\n            filteringBefore: {\r\n                beforeCampaignsToDisplay: [],\r\n                beforeProductsToDisplay: []\r\n            },\r\n            isMobile: false,\r\n            barTop: \"7vw\",\r\n            report: store.getState().currentReport\r\n        }\r\n        this.unsubscribeStore = store.subscribe(() => {\r\n            const selectedClients = store.getState().selectedClients;\r\n            const display = store.getState().isPopUpShow;\r\n            this.setState({ selectedClients });\r\n            this.setState({ display });\r\n        })\r\n    }\r\n\r\n    componentDidMount() {\r\n\r\n        const topNavWidth: number = this.topNavRef.current?.clientWidth as number;\r\n        const maxWidth = topNavWidth / 100 * 70;\r\n        const buttonsWidth = this.buttonsRef?.current?.container.current.scrollWidth as number;\r\n        const bodyClass = document.body.classList[0];\r\n        if(bodyClass === \"mobile\"){\r\n            this.setState({isMobile: true});\r\n            this.setState({barTop: \"42vw\"});\r\n        }\r\n\r\n\r\n        if (buttonsWidth > maxWidth) {\r\n            this.setState({ isButtonsScrolled: true });\r\n        }\r\n        else {\r\n            this.setState({ isButtonsScrolled: false });\r\n        }\r\n\r\n\r\n        window.addEventListener(\"click\", () => {\r\n            const topNavWidth: number = this.topNavRef.current?.clientWidth as number;\r\n            const maxWidth = topNavWidth / 100 * 70;\r\n            const buttonsWidth = this.buttonsRef?.current?.container.current.scrollWidth as number;\r\n\r\n            if (buttonsWidth > maxWidth) {\r\n                this.setState({ isButtonsScrolled: true });\r\n            }\r\n            else {\r\n                this.setState({ isButtonsScrolled: false });\r\n            }\r\n        })\r\n    }\r\n\r\n    public filterByClientId = (clientId: number) => (event: any) => {\r\n\r\n        const campaignsToDisplay: CampaignModel[] = [];\r\n\r\n        const filteringBefore = { ...this.state.filteringBefore };\r\n        filteringBefore.beforeCampaignsToDisplay = store.getState().campaignsToDisplay;\r\n        filteringBefore.beforeProductsToDisplay = store.getState().productsToDisplay;\r\n        this.setState({ filteringBefore });\r\n\r\n        const allSelectedCampaigns = store.getState().selectedCampaigns;\r\n        for (const c of allSelectedCampaigns) {\r\n            if (c.clientId === clientId) {\r\n                campaignsToDisplay.push(c);\r\n            }\r\n        }\r\n        store.dispatch({ type: ActionType.updateCampaignsToDisplay, payLoad: campaignsToDisplay });\r\n\r\n\r\n        const clientsToDisplay: ClientModel[] = [];\r\n        const allSelectedClients = store.getState().selectedClients;\r\n        for (const c of allSelectedClients) {\r\n            if (c.clientId === clientId) {\r\n                clientsToDisplay.push(c);\r\n            }\r\n        }\r\n\r\n        store.dispatch({ type: ActionType.updateClientsToDisplay, payLoad: clientsToDisplay });\r\n    }\r\n\r\n\r\n    public componentWillUnmount(): void {\r\n        this.unsubscribeStore();\r\n    }\r\n\r\n    public scrollToRight = () => {\r\n        this.buttonsRef.current?.scrollTo({\r\n            top: 0,\r\n            left: 0,\r\n            behavior: \"smooth\"\r\n        });\r\n    }\r\n\r\n    public scrollToLeft = () => {\r\n        const buttonsWidth = this.buttonsRef.current?.scrollWidth as number;\r\n        this.buttonsRef.current?.scrollTo({\r\n            top: 0,\r\n            left: -buttonsWidth,\r\n            behavior: \"smooth\"\r\n        });\r\n    }\r\n\r\n\r\n    public openPopUp = () => {\r\n        store.dispatch({ type: ActionType.changeDisplayForPopUp, payLoad: false });\r\n    }\r\n\r\n    public resetClientsToDisplay = () => {\r\n        store.dispatch({ type: ActionType.updateClientsToDisplay, payLoad: [] });\r\n        store.dispatch({ type: ActionType.updateCampaignsToDisplay, payLoad: this.state.filteringBefore.beforeCampaignsToDisplay });\r\n        store.dispatch({ type: ActionType.updateProductsToDisplay, payLoad: this.state.filteringBefore.beforeProductsToDisplay });\r\n    }\r\n\r\n\r\n    public scrollBar = (event: any) => {\r\n        const x = event.clientX;\r\n        const width = this.buttonsRef.current?.offsetWidth as number;\r\n        const offsetLeft = this.buttonsRef.current?.offsetLeft as number;\r\n        const scrollLeft = this.buttonsRef.current?.scrollLeft as number;\r\n\r\n\r\n        const buttonsWidth = this.buttonsRef.current?.scrollWidth as number;\r\n        const topNavWidth: number = this.topNavRef.current?.clientWidth as number;\r\n\r\n        const position = x - (topNavWidth - width);\r\n        const half = width / 2;\r\n        let precentages;\r\n\r\n        if (position < half) { precentages = 0; }\r\n        if (position >= half) { precentages = 1; }\r\n\r\n        if (precentages && precentages > 0) {\r\n            this.buttonsRef.current?.scrollTo({\r\n                top: 0,\r\n                left: scrollLeft + x,\r\n                behavior: \"smooth\"\r\n            });\r\n\r\n        }\r\n        else {\r\n            this.buttonsRef.current?.scrollTo({\r\n                top: 0,\r\n                left: -(scrollLeft + x),\r\n                behavior: \"smooth\"\r\n            });\r\n        }\r\n\r\n    }\r\n\r\n    public render() {\r\n        return (\r\n            <div ref={this.topNavRef} className=\"top-campaigns-nav-report\">\r\n                \r\n\r\n                {this.state.isMobile && \r\n                <span className=\"dates-on-report\">דו\"ח תוצרים לתאריכים: <span className=\"underline\">{this.state.report.datesOnReport}</span></span>\r\n                }\r\n\r\n\r\n                <ScrollContainer ref={this.buttonsRef} className=\"campaigns-buttons\">\r\n\r\n                <button className=\"campaigns-client-btn\" onClick={this.resetClientsToDisplay}>\r\n                        <button className=\"campaigns-remove-btn\" style={{ opacity: 0 }}>\r\n                            <span>&#10006;</span>\r\n                        </button>\r\n                        <span className=\"campaigns-inside-client-btn\">All</span>\r\n                    </button>\r\n\r\n\r\n                    {this.state?.selectedClients.map(client =>\r\n                        <button className=\"campaigns-client-btn\" onClick={this.filterByClientId(client.clientId as number)}>\r\n                            <span className=\"campaigns-inside-client-btn\">{client.clientName}</span>\r\n                        </button>\r\n                    )}\r\n\r\n\r\n                    <span style={{ display: this.state.isButtonsScrolled ? \"block\" : \"none\" }} className=\"campaigns-more-buttons-icon\">|</span>\r\n                </ScrollContainer>\r\n\r\n\r\n                {!this.state.isMobile && <span className=\"logout-span\" onClick={() => store.dispatch({ type: ActionType.logoutWatchingMode })}>logout</span>}\r\n\r\n                <div className=\"campaigns-top-scroll\" style={{ top: this.props.isScroll ? this.state.barTop : 0 }}></div>\r\n\r\n                <img className=\"campaigns-logo\" src={Logo.logoSrc} />\r\n\r\n                {this.state.display &&\r\n                    <AddClientPopUp />\r\n                }\r\n\r\n            </div>\r\n\r\n        )\r\n    }\r\n}","C:\\Users\\Maya\\Documents\\GitHub\\factory\\src\\components\\auth-for-watching-only\\auth-for-watching-only.tsx",["282","283","284","285","286"],"import React, { ChangeEvent, Component } from \"react\";\r\nimport { Unsubscribe } from \"redux\";\r\nimport { UserModel } from \"../../models/userModel\";\r\nimport { ActionType } from \"../../redux/actionType\";\r\nimport { store } from \"../../redux/store\";\r\nimport \"./auth-for-watching-only.css\";\r\nimport axios from \"axios\";\r\nimport { rejects } from \"assert\";\r\nimport TextField from '@material-ui/core/TextField';\r\nimport InputCode from \"../auth/InputCode\";\r\nimport { Config } from \"../../config\";\r\nimport { Logo } from \"../../get-logo\";\r\n\r\ninterface AuthForWatchingOnlyState {\r\n  phoneNumber: string,\r\n  code: string,\r\n  message: string,\r\n  isPhoneLegal: boolean,\r\n  isCodeLegal: boolean,\r\n  isDisplayForBtn: boolean,\r\n  allUsers: UserModel[],\r\n  isSmsSent: boolean,\r\n  title: string,\r\n  user: UserModel,\r\n  isStartTyping: boolean,\r\n  resendMessage: string,\r\n  displayErrorsArea: boolean\r\n\r\n}\r\n\r\nexport class AuthForWatchingOnly extends Component<any, AuthForWatchingOnlyState> {\r\n\r\n  private firstInput = React.createRef<HTMLInputElement>();\r\n  private secondInput = React.createRef<HTMLInputElement>();\r\n  private thirdInput = React.createRef<HTMLInputElement>();\r\n  private fourthInput = React.createRef<HTMLInputElement>();\r\n\r\n\r\n  public constructor(props: any) {\r\n    super(props);\r\n    this.state = {\r\n      phoneNumber: \"\",\r\n      code: \"\",\r\n      message: \"\",\r\n      title: \"יש להזין מספר טלפון על מנת להתחבר\",\r\n      isPhoneLegal: false,\r\n      isCodeLegal: false,\r\n      isDisplayForBtn: false,\r\n      allUsers: [],\r\n      isSmsSent: false,\r\n      user: new UserModel(),\r\n      isStartTyping: false,\r\n      resendMessage: \"\",\r\n      displayErrorsArea: false\r\n\r\n    }\r\n  }\r\n\r\n\r\n  public countForResend = () => {\r\n    let count = 30;\r\n    const int = setInterval(() => {\r\n      if (count > 1) {\r\n        count--;\r\n        const message = 'נוכל לשלוח לך את הקוד פעם נוספת בעוד ' + count + \" שניות\";\r\n        this.setState({ resendMessage: message });\r\n      }\r\n      else if (count === 1) {\r\n        const message = \"אפשר לנסות שוב ממש כאן\";\r\n        this.setState({ resendMessage: message });\r\n        clearInterval(int);\r\n      }\r\n    }, 1000);\r\n  }\r\n\r\n\r\n  public async componentDidMount() {\r\n    try {\r\n      const response = await axios.get(Config.serverUrl + \"/all-users/\");\r\n      const allUsers: UserModel[] = response.data.users;\r\n      this.setState({ allUsers });\r\n\r\n    }\r\n    catch (err) {\r\n      console.log(err.message);\r\n    }\r\n  }\r\n\r\n  public linsenToKeyPress = (e: any) => {\r\n    e.keyCode === 13 &&\r\n      this.authPhoneNumber();\r\n  }\r\n\r\n\r\n  public setPhoneNumber = (args: ChangeEvent<HTMLInputElement>) => {\r\n    const phoneNumber = args.target.value;\r\n    const fixedPhone = phoneNumber.replace(/[a-zA-Z$&@#*^%()!]/g, \"\");\r\n    this.setState({ phoneNumber: fixedPhone });\r\n    this.setState({ message: \"\" })\r\n\r\n  }\r\n\r\n\r\n  //Demo functions\r\n  public authPhoneNumber = () => {\r\n    const phoneNumber = this.state.phoneNumber;\r\n    const allUsers = [...this.state.allUsers];\r\n    const user = allUsers.find(u => u.phoneNumber?.toString() === phoneNumber);\r\n    \r\n\r\n    let message = \"\";\r\n    let isPhoneLegal = false;\r\n    let displayErrorsArea = false;\r\n\r\n\r\n    if (user) {\r\n      this.setState({ user });\r\n      message = \"\";\r\n      isPhoneLegal = true;\r\n      displayErrorsArea = false;\r\n      this.setState({ title: \"יש להזין את הקוד שקיבלת\" });\r\n      this.countForResend();\r\n      new Promise((resolve, reject) => {\r\n        resolve(() => console.log(\"\"))\r\n      }\r\n\r\n      )\r\n        .then(() =>\r\n          fetch(\r\n            `https://landing-page-media.co.il/projects/phone-auth/?phone=${phoneNumber}`\r\n          )\r\n        )\r\n        .then((data) => {\r\n          this.setState({ isSmsSent: true });\r\n          this.setState({ displayErrorsArea: false });\r\n        }\r\n        )\r\n        .catch((e) => {\r\n          console.log(e)\r\n        });\r\n    }\r\n    else {\r\n      message = \"מספר הטלפון שהוזן אינו מספר מורשה\";\r\n      displayErrorsArea = true;\r\n    }\r\n\r\n    this.setState({ message });\r\n    this.setState({ isPhoneLegal });\r\n    this.setState({ displayErrorsArea });\r\n  }\r\n\r\n  public authCode = () => {\r\n    const code = this.state.code;\r\n    const phoneNumber = this.state.phoneNumber;\r\n    let message = \"\";\r\n    let isCodeLegal = false;\r\n\r\n    if (this.state.isSmsSent) {\r\n      new Promise((resolve, reject) => {\r\n        resolve(console.log(\"\"));\r\n      })\r\n        .then(() =>\r\n          fetch(\r\n            `https://landing-page-media.co.il/projects/phone-auth/code_validation.php?code=${code}&phone=${phoneNumber}`\r\n          )\r\n        )\r\n        .then((response) => response.json())\r\n        .then((data) => {\r\n\r\n          if (data.auth) {\r\n            message = \"ברוכים הבאים\";\r\n            isCodeLegal = true;\r\n            store.dispatch({ type: ActionType.loginWatchingMode, payLoad: this.state.user });\r\n          } else {\r\n            message = \"קוד אינו חוקי\";\r\n          }\r\n          this.setState({ message })\r\n          this.setState({ isCodeLegal })\r\n        })\r\n    }\r\n  }\r\n\r\n\r\n\r\n\r\n  public render() {\r\n    return (\r\n      <div className=\"auth\">\r\n\r\n        <div className=\"auth-box\">\r\n\r\n          <img className=\"auth-logo\" src={Logo.logoSrc} />\r\n\r\n          <div className=\"auth-titles\">\r\n            <h1>מערכת תוצר</h1>\r\n          </div>\r\n\r\n          {this.state.displayErrorsArea && <div className=\"errors-area\">\r\n            <span className=\"auth-errors-message\">.יש לך אחלה מספר, אבל הוא לא ברשימה שלנו <br />\r\n            ...אולי טעות בספרה ואולי צריך לבקש רשות\r\n            <br />\r\n              <a href={`mailto:naorB@mccann.co.il; advaA@mccann.co.il&subject=אני רוצה אישור לצפייה בתוצרי הפקטורי&body=Pretty%20please...%20My%20number%20is%20${this.state.phoneNumber}`} className=\"allow-permission\">.לבקשת רשות קליק קטן כאן</a>\r\n            </span>\r\n            <img className=\"error-img\" src=\"./assets/images/error.gif\" />\r\n\r\n          </div>\r\n          }\r\n\r\n          {!this.state.isPhoneLegal &&\r\n            <button onClick={this.authPhoneNumber} className={this.state.isStartTyping ? \"send-btn btn-typed\" : \"send-btn\"}><img src=\"./assets/images/pink_btn_after.svg\" /></button>\r\n          }\r\n          <div className={this.state.isStartTyping ? \"phone-field typed\" : \"phone-field\"} onFocus={() => this.setState({ isStartTyping: true })}>\r\n            <TextField id=\"standard-basic\"\r\n              label=\"יש להזין מספר טלפון כדי לצפות בתוצרים\"\r\n              color=\"primary\"\r\n              type=\"tel\"\r\n              onChange={this.setPhoneNumber}\r\n              onKeyDown={this.linsenToKeyPress}\r\n              className={this.state.isPhoneLegal ? \"out\" : \"\"}\r\n              value={this.state.phoneNumber}\r\n              style={{\r\n                borderBottom: this.state.message === \"\" ? \"2px solid black\" : \"2px solid red\",\r\n              }} />\r\n            {!this.state.isPhoneLegal && <span className=\"err-message\">{this.state.message}</span>}\r\n            <br />\r\n          </div>\r\n\r\n\r\n          {this.state.isPhoneLegal &&\r\n            <div className=\"code-area\">\r\n              <InputCode\r\n                length={4}\r\n                label=\"יש להזין את הקוד שקיבלת\"\r\n                loading={() => { }}\r\n                onComplete={(code: any) => {\r\n                  this.setState({ code });\r\n                  setTimeout(() => {\r\n                    this.authCode();\r\n                  }, 1000);\r\n                }} />\r\n\r\n              <span className=\"err-message\">{this.state.message}</span>\r\n              <span className=\"re-send-area\"><span className=\"rtl\">לא קיבלת sms עם הקוד?</span>\r\n              <br />\r\n                <p className={this.state.resendMessage === \"אפשר לנסות שוב ממש כאן\" ? \"resend-btn\" : \"resend-timer\"}\r\n                  onClick={this.state.resendMessage === \"אפשר לנסות שוב ממש כאן\" ? this.authPhoneNumber : () => console.log(\"Not yet\")}>{this.state.resendMessage}</p>\r\n              </span>\r\n\r\n\r\n            </div>\r\n          }\r\n\r\n\r\n\r\n\r\n\r\n        </div>\r\n\r\n\r\n      </div >\r\n\r\n    )\r\n  }\r\n}","C:\\Users\\Maya\\Documents\\GitHub\\factory\\src\\components\\bottom-bar\\bottom-bar.tsx",["287","288"],"import React, { Component } from \"react\";\r\nimport { ActionType } from \"../../redux/actionType\";\r\nimport { store } from \"../../redux/store\";\r\nimport { FilteringSideMenu } from \"../filtering-side-menu/filtering-side-menu\";\r\nimport \"./bottom-bar.css\";\r\n\r\ninterface BottomBarState {\r\n    isPopUpOpen: boolean,\r\n    menuHeight: number\r\n\r\n}\r\n\r\nexport class BottomBar extends Component<any, BottomBarState>{\r\n\r\n\r\n    public constructor(props: any) {\r\n        super(props);\r\n        this.state = {\r\n            isPopUpOpen: false,\r\n            menuHeight: 52\r\n\r\n        }\r\n    }\r\n\r\n    // public setMenuHeight = (event: any) => {\r\n    //     const clientY = event.touches[0].clientY;\r\n    //     const windowHeight = window.screen.height;\r\n    //     const height = windowHeight - clientY;\r\n\r\n    //     if (height < 550 && height > 52) {\r\n    //         this.setState({ menuHeight: height });\r\n    //     }\r\n    //     if (height >= 550) {\r\n    //         this.setState({ isPopUpOpen: true });\r\n    //         store.dispatch({ type: ActionType.changeDisplayForMobileMenu, payLoad: true });\r\n    //     }\r\n    //     else if (height < 400) {\r\n    //         this.setState({ isPopUpOpen: false });\r\n    //         store.dispatch({ type: ActionType.changeDisplayForMobileMenu, payLoad: false });\r\n\r\n    //     }\r\n    // }\r\n    // public fixHeight = (event: any) => {\r\n    //     const height = this.state.menuHeight;\r\n    //     let fixedHeight: number = height as number;\r\n\r\n    //     if (height < 350) {\r\n    //         const int = setInterval(() => {\r\n    //             if (fixedHeight > 52) {\r\n    //                 fixedHeight -= 2;\r\n    //                 this.setState({ menuHeight: fixedHeight })\r\n    //             }\r\n    //         }, 1);\r\n\r\n    //         if (fixedHeight <= 52) {\r\n    //             clearInterval(int);\r\n    //         }\r\n    //         this.setState({ isPopUpOpen: false });\r\n    //         store.dispatch({ type: ActionType.changeDisplayForMobileMenu, payLoad: false });\r\n\r\n    //     }\r\n    //     else {\r\n\r\n    //         const int = setInterval(() => {\r\n    //             if (fixedHeight < 550) {\r\n    //                 fixedHeight += 2;\r\n    //                 this.setState({ menuHeight: fixedHeight })\r\n    //             }\r\n    //         }, 1);\r\n\r\n    //         if (fixedHeight >= 550) {\r\n    //             clearInterval(int);\r\n    //         }\r\n    //         this.setState({ isPopUpOpen: true });\r\n    //         store.dispatch({ type: ActionType.changeDisplayForMobileMenu, payLoad: true });\r\n\r\n    //     }\r\n    // }\r\n\r\n    public openBar = () => {\r\n        this.setState({ isPopUpOpen: true });\r\n        store.dispatch({ type: ActionType.changeDisplayForMobileMenu, payLoad: true });\r\n    }\r\n\r\n    public closeBar = () => {\r\n        this.setState({ isPopUpOpen: false });\r\n        store.dispatch({ type: ActionType.changeDisplayForMobileMenu, payLoad: false });\r\n    }\r\n\r\n\r\n    public render() {\r\n        return (\r\n            <>\r\n                <div className={this.state.isPopUpOpen ? \"lightbox-bg\" : \"close-lightbox\"}></div>\r\n                <div className={this.state.isPopUpOpen ? \"bottom-bar-area open-bar\" : \"bottom-bar-area close-bar\"}>\r\n\r\n                    <div className={this.state.isPopUpOpen ? \"wave opened-bar-bottom\" : \"wave close-bar-bottom\"}\r\n                        onMouseUp={this.state.isPopUpOpen ? this.closeBar : this.openBar } onTouchMove={this.state.isPopUpOpen ? this.closeBar : this.openBar}>\r\n                        {!this.state.isPopUpOpen && <img className=\"funnel-icon\" src=\"./assets/images/funnel.svg\" />}\r\n                        {this.state.isPopUpOpen && <img className=\"funnel-icon\" src=\"./assets/images/down-icon.svg\"/>}\r\n                        {/*    \r\n                    <div className=\"wave\" style={{ bottom: `${this.state.menuHeight}px` }} draggable={true} onTouchEnd={this.fixHeight} onTouchMove={this.setMenuHeight}>\r\n                    {!this.state.isPopUpOpen && <img className=\"funnel-icon\" src=\"./assets/images/funnel.svg\" onTouchEnd={this.fixHeight} onTouchMove={this.setMenuHeight} />}\r\n                    {this.state.isPopUpOpen && <img className=\"funnel-icon\" src=\"./assets/images/down-icon.svg\" onTouchEnd={this.fixHeight} onTouchMove={this.setMenuHeight} />} */}\r\n                    </div>\r\n                    <span style={{ display: this.state.isPopUpOpen ? \"none\" : \"block\" }} className=\"filtering-title\">סינון</span>\r\n                    <div className={this.state.isPopUpOpen ? \"opened-filtering-menu-area\" : \"closed-filtering-menu-area\"}>\r\n                        <FilteringSideMenu isOnReport={true} />\r\n                    </div>\r\n                </div>\r\n            </>\r\n        )\r\n    }\r\n}","C:\\Users\\Maya\\Documents\\GitHub\\factory\\src\\redux\\reducer.ts",["289"],"import { AppState } from \"./appState\";\r\nimport { Action } from \"./action\";\r\nimport { ActionType } from \"./actionType\";\r\nimport { act } from \"react-dom/test-utils\";\r\nimport { UserModel } from \"../models/userModel\";\r\n\r\nexport function reducer(oldAppState: AppState, action: Action): AppState {\r\n  const newAppState = { ...oldAppState }; //Duplicate the old state into a new state\r\n\r\n  switch (action.type) {\r\n    case ActionType.getAllClients:\r\n      newAppState.allClients = action.payLoad;\r\n      break;\r\n\r\n    case ActionType.getAllCampaigns:\r\n      newAppState.allCampaigns = action.payLoad;\r\n      break;\r\n\r\n    case ActionType.getAllProducts:\r\n      newAppState.allProducts = action.payLoad;\r\n      break;\r\n\r\n    case ActionType.addClientToSelectedClients:\r\n      newAppState.selectedClients.push(action.payLoad);\r\n      break;\r\n\r\n    case ActionType.unselectAllClients:\r\n      newAppState.selectedClients = [];\r\n      break;\r\n\r\n    case ActionType.updateSelectedClients:\r\n      newAppState.selectedClients = action.payLoad;\r\n      break;\r\n\r\n    case ActionType.getSelectedProducts:\r\n      newAppState.selectedProducts = action.payLoad;\r\n      break;\r\n\r\n    case ActionType.updateCampaignsToDisplay:\r\n      newAppState.campaignsToDisplay = action.payLoad;\r\n      break;\r\n\r\n    case ActionType.updateClientsToDisplay:\r\n      newAppState.clientsToDisplay = action.payLoad;\r\n      break;\r\n\r\n    case ActionType.updateProductsToDisplay:\r\n      newAppState.productsToDisplay = action.payLoad;\r\n      break;\r\n\r\n    case ActionType.resetFiltering:\r\n      newAppState.campaignsToDisplay = [];\r\n      newAppState.productsToDisplay = [];\r\n      newAppState.clientsToDisplay = [];\r\n      break;\r\n\r\n    case ActionType.getNonCampaignsClients:\r\n      newAppState.nonCampaignsClients = action.payLoad;\r\n      break;\r\n\r\n    case ActionType.getSelectedCampaigns:\r\n      newAppState.selectedCampaigns = action.payLoad;\r\n      break;\r\n\r\n    case ActionType.loginEditingMode:\r\n      newAppState.user = action.payLoad;\r\n      newAppState.isAuthSucceeded = true;\r\n      break;\r\n\r\n    case ActionType.logoutEditingMode:\r\n      if (!newAppState.isReportSave) {\r\n        localStorage.setItem(\r\n          `${newAppState.user.userId}`,\r\n          JSON.stringify(newAppState)\r\n        );\r\n      }\r\n      newAppState.user = new UserModel();\r\n      newAppState.isAuthSucceeded = false;\r\n      newAppState.selectedClients = [];\r\n      newAppState.selectedCampaigns = [];\r\n      newAppState.selectedProducts = [];\r\n      newAppState.clientsToDisplay = [];\r\n      newAppState.campaignsToDisplay = [];\r\n      newAppState.productsToDisplay = [];\r\n      break;\r\n\r\n    case ActionType.loginWatchingMode:\r\n      newAppState.user = action.payLoad;\r\n      newAppState.isAuthSucceededForReport = true;\r\n      break;\r\n\r\n    case ActionType.logoutWatchingMode:\r\n      newAppState.user = new UserModel();\r\n      newAppState.isAuthSucceededForReport = false;\r\n      newAppState.isAuthSucceeded = false;\r\n      newAppState.selectedClients = [];\r\n      newAppState.selectedCampaigns = [];\r\n      newAppState.selectedProducts = [];\r\n      newAppState.clientsToDisplay = [];\r\n      newAppState.campaignsToDisplay = [];\r\n      newAppState.productsToDisplay = [];\r\n      break;\r\n\r\n    case ActionType.changeDisplayForPopUp:\r\n      if (newAppState.isPopUpShow) {\r\n        newAppState.isPopUpShow = false;\r\n      } else {\r\n        newAppState.isPopUpShow = true;\r\n      }\r\n      break;\r\n\r\n    case ActionType.changeDisplayForProductsPopUp:\r\n      if (newAppState.isProductsPopUpShow) {\r\n        newAppState.isProductsPopUpShow = false;\r\n      } else {\r\n        newAppState.isProductsPopUpShow = true;\r\n      }\r\n      break;\r\n\r\n    case ActionType.changeDisplayForRestoreStatePopUp:\r\n      if (newAppState.isRestoreStatePopUpShow) {\r\n        newAppState.isRestoreStatePopUpShow = false;\r\n      } else {\r\n        newAppState.isRestoreStatePopUpShow = true;\r\n      }\r\n      break;\r\n\r\n    case ActionType.changeDisplayForReportsPopUp:\r\n      if (newAppState.isReportsPopUpShow) {\r\n        newAppState.isReportsPopUpShow = false;\r\n      } else {\r\n        newAppState.isReportsPopUpShow = true;\r\n      }\r\n      break;\r\n\r\n    case ActionType.changeDisplayForLinkPopUp:\r\n      if (newAppState.isLinksPopUpShow) {\r\n        newAppState.isLinksPopUpShow = false;\r\n      } else {\r\n        newAppState.isLinksPopUpShow = true;\r\n      }\r\n      break;\r\n\r\n    case ActionType.changeDisplayForMobileMenu:\r\n      newAppState.isMobileMenuShow = action.payLoad;\r\n      break;\r\n\r\n    case ActionType.changeDisplayForReportsLinkPopUp:\r\n      if (newAppState.displayForReportsLinkPopUp) {\r\n        newAppState.displayForReportsLinkPopUp = false;\r\n      } else {\r\n        newAppState.displayForReportsLinkPopUp = true;\r\n      }\r\n      break;\r\n\r\n    case ActionType.saveReport:\r\n      localStorage.removeItem(`${newAppState.user.userId}`);\r\n      newAppState.isReportSave = true;\r\n      break;\r\n\r\n    case ActionType.getDatesRanges:\r\n      newAppState.datesRange = action.payLoad;\r\n      break;\r\n\r\n    case ActionType.getReportToCopy:\r\n      newAppState.reportToCopy = action.payLoad;\r\n      break;\r\n\r\n    case ActionType.getCurrentReport:\r\n      newAppState.currentReport = action.payLoad;\r\n      break;\r\n\r\n    case ActionType.changeDisplayForNoCampaignsPopUp:\r\n      newAppState.isNoCampaignsPopUpOpen = action.payLoad;\r\n      break;\r\n\r\n    case ActionType.updateNoCampaignsAfterFiltering:\r\n      newAppState.noCampaignsAfterFiltering = action.payLoad;\r\n      break;\r\n\r\n    case ActionType.removeClient:\r\n      const clientId = action.payLoad;\r\n      const index = newAppState.selectedClients.findIndex(\r\n        (c) => c.clientId === clientId\r\n      );\r\n\r\n      newAppState.selectedClients.splice(index, 1);\r\n      newAppState.selectedCampaigns = newAppState.selectedCampaigns.filter(\r\n        (c) => c.clientId !== action.payLoad\r\n      );\r\n      newAppState.campaignsToDisplay = newAppState.campaignsToDisplay.filter(\r\n        (c) => c.clientId !== action.payLoad\r\n      );\r\n      newAppState.selectedProducts = newAppState.selectedProducts.filter(\r\n        (c) => c.clientId !== action.payLoad\r\n      );\r\n      newAppState.productsToDisplay = newAppState.productsToDisplay.filter(\r\n        (c) => c.clientId !== action.payLoad\r\n      );\r\n      newAppState.clientsToDisplay = newAppState.clientsToDisplay.filter(\r\n        (c) => c.clientId !== action.payLoad\r\n      );\r\n      break;\r\n\r\n    default:\r\n      break;\r\n  }\r\n\r\n  return newAppState;\r\n}\r\n","C:\\Users\\Maya\\Documents\\GitHub\\factory\\src\\redux\\appState.ts",[],"C:\\Users\\Maya\\Documents\\GitHub\\factory\\src\\redux\\middleware.ts",["290","291","292"],"import { Store } from \"redux\";\r\nimport { AppState } from \"./appState\";\r\nimport { Action } from \"./action\";\r\n\r\n// תחביר מקוצר לפונקציה הנ\"ל\r\nexport const saveToSessionStorage = (store: { getState: () => any; }) => (next: (arg0: any) => void) => (action: any) => {\r\n    next(action);\r\n    if(action.type === 20 || action.type === 22){\r\n        sessionStorage.removeItem(\"AppState\");\r\n    }\r\n    else{\r\n        sessionStorage.setItem(\"AppState\", JSON.stringify(store.getState()));\r\n    }\r\n};\r\n","C:\\Users\\Maya\\Documents\\GitHub\\factory\\src\\models\\campaignModel.ts",["293"],"import { ProductModel } from \"./productModel\";\r\n\r\nexport class CampaignModel {\r\n  public constructor(\r\n    public campaignId?: number,\r\n    public clientId?: number,\r\n    public campaignName?: string,\r\n    public lastUpdate?: string,\r\n    public timePassed?: number\r\n\r\n  ) {\r\n  }\r\n}\r\n","C:\\Users\\Maya\\Documents\\GitHub\\factory\\src\\models\\productModel.ts",[],"C:\\Users\\Maya\\Documents\\GitHub\\factory\\src\\models\\dateModel.ts",[],"C:\\Users\\Maya\\Documents\\GitHub\\factory\\src\\components\\add-client-pop-up\\add-client-pop-up.tsx",["294","295","296","297","298","299","300","301","302","303","304","305","306"],"C:\\Users\\Maya\\Documents\\GitHub\\factory\\src\\components\\product-pop-up\\product-pop-up.tsx",["307","308","309","310","311","312","313","314","315","316","317","318","319","320","321","322"],"import React, { Component } from \"react\";\r\nimport { ActionType } from \"../../redux/actionType\";\r\nimport { store } from \"../../redux/store\";\r\nimport \"./product-pop-up.css\";\r\nimport { ProductModel } from \"../../models/productModel\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\nimport { ProductsType } from \"../../models/productsTypeModel\";\r\nimport { getProductsTypes } from \"../../data/products-types\";\r\nimport { CampaignModel } from \"../../models/campaignModel\";\r\nimport ProgressBar from \"@ramonak/react-progress-bar\";\r\nimport axios from \"axios\";\r\nimport { ImagesModel } from \"../../models/imagesModel\";\r\nimport { Config } from \"../../config\";\r\nimport ScrollContainer from \"react-indiana-drag-scroll\";\r\nimport SimpleImageSlider from \"react-simple-image-slider\";\r\nimport ArrowRightIcon from '@material-ui/icons/ArrowRight';\r\nimport ArrowLeftIcon from '@material-ui/icons/ArrowLeft';\r\nimport IconButton from '@material-ui/core/IconButton';\r\n\r\ninterface ProductPopUpProps {\r\n  product: ProductModel;\r\n  campaign: CampaignModel;\r\n}\r\n\r\ninterface ProductPopUpState {\r\n  images: ImagesModel;\r\n  productsType: ProductsType;\r\n  isOnSlider: boolean;\r\n  isVideo: boolean;\r\n  isOnMobile: boolean;\r\n  isScroliing: boolean;\r\n  isVideosCarrousle: boolean;\r\n}\r\n\r\nexport class ProductPopUp extends Component<\r\n  ProductPopUpProps,\r\n  ProductPopUpState\r\n> {\r\n  private LeftAreaRef = React.createRef<HTMLDivElement>();\r\n  private sliderRef = React.createRef<any>();\r\n\r\n  public constructor(props: ProductPopUpProps) {\r\n    super(props);\r\n    this.state = {\r\n      images: new ImagesModel(),\r\n      productsType: new ProductsType(),\r\n      isOnSlider: false,\r\n      isVideo: false,\r\n      isOnMobile: false,\r\n      isScroliing: false,\r\n      isVideosCarrousle: false,\r\n    };\r\n  }\r\n\r\n  public closePopUp = () => {\r\n    store.dispatch({ type: ActionType.changeDisplayForProductsPopUp });\r\n  };\r\n\r\n  public stopPropagation = (e: any) => {\r\n    e.stopPropagation();\r\n  };\r\n\r\n  public async componentDidMount() {\r\n    try {\r\n      const bodyClass = document.body.classList[0];\r\n      if (bodyClass === \"mobile\") {\r\n        this.setState({ isOnMobile: true });\r\n      }\r\n\r\n      if (!this.props.product) {\r\n        this.closePopUp();\r\n      }\r\n      if (this.props.product.productTypeId === 857 || this.props.product.productTypeId === 402) {\r\n        this.setState({ isOnSlider: true });\r\n      }\r\n      let productImages = this.props.product.images as ImagesModel;\r\n      this.setState({ images: productImages });\r\n\r\n      if (productImages.is_video) {\r\n        const images = { img1: \"\", img2: \"\", img3: \"\" };\r\n        this.setState({ images });\r\n        this.setState({ isVideosCarrousle: true });\r\n        for (const video of Object.values(productImages)) {\r\n          if (video) {\r\n            const script = document.createElement(\"script\");\r\n            script.src = video;\r\n            script.async = true;\r\n            this.LeftAreaRef.current!.appendChild(script);\r\n          }\r\n        }\r\n      } else {\r\n        if (productImages.img2?.includes(\"https://live.sekindo.com\")) {\r\n          const script = document.createElement(\"script\");\r\n          script.src = productImages.img2;\r\n          script.async = true;\r\n          this.LeftAreaRef.current!.appendChild(script);\r\n          const images = { img1: \"\", img2: \"\", img3: \"\" };\r\n          this.setState({ images });\r\n          this.setState({ isVideo: true });\r\n        }\r\n      }\r\n\r\n      const response = await axios.get(\r\n        Config.serverUrl + \"/all-products-types/\"\r\n      );\r\n      const productsTypes: ProductsType[] = response.data.productsTypes;\r\n      const productTypes = productsTypes.find(\r\n        (t) => t.productsTypeId === this.props.product.productTypeId\r\n      );\r\n      this.setState({ productsType: productTypes as ProductsType });\r\n\r\n      const areaWidth = this.sliderRef.current?.container?.current?.clientWidth;\r\n      const scrollWidth = this.sliderRef.current?.container?.current\r\n        ?.scrollWidth;\r\n\r\n      if (scrollWidth > areaWidth) {\r\n        this.setState({ isScroliing: true });\r\n        this.sliderRef.current?.container.current.scrollTo({\r\n          left: 100,\r\n          behavior: \"smooth\"\r\n        })\r\n      }\r\n\r\n    } catch (err) {\r\n      console.log(err.message);\r\n    }\r\n  }\r\n\r\n  public scrollToLeft = () => {\r\n    let left = this.sliderRef.current?.container.current.scrollLeft;\r\n    this.sliderRef.current?.container.current.scrollTo({\r\n      left: left -= 20,\r\n      behavior: \"smooth\"\r\n    })\r\n  }\r\n\r\n  public scrollToRight = () => {\r\n    let left = this.sliderRef.current?.container.current.scrollLeft;\r\n    this.sliderRef.current?.container.current.scrollTo({\r\n      left: left += 20,\r\n      behavior: \"smooth\"\r\n    })\r\n  }\r\n\r\n  public render() {\r\n    return (\r\n      <div\r\n        className={\r\n          this.state.isVideosCarrousle\r\n            ? \"full-screen-product-conatiner videos\"\r\n            : \"full-screen-product-conatiner\"\r\n        }\r\n        onClick={this.closePopUp}\r\n      >\r\n        <div\r\n          className={\r\n            this.state.isOnMobile && this.state.isVideo\r\n              ? \"small-product-video-conatiner\"\r\n              : \"small-product-conatiner\"\r\n          }\r\n          onClick={this.stopPropagation}\r\n        >\r\n          <div\r\n            ref={this.LeftAreaRef}\r\n            className={\r\n              this.state.isOnSlider ? \"left-area carrousle-area\" : \"left-area\"\r\n            }\r\n          >\r\n            {!this.state.isOnSlider && (\r\n              <>\r\n                <img\r\n                  className=\"product-img product-img1\"\r\n                  src={this.state.images.img1}\r\n                />\r\n                <img\r\n                  className=\"product-img product-img2\"\r\n                  src={this.state.images.img2}\r\n                />\r\n                <img\r\n                  className=\"product-img product-img3\"\r\n                  src={this.state.images.img3}\r\n                />\r\n                <img\r\n                  className=\"product-img product-img4\"\r\n                  src={this.state.images.img4}\r\n                />\r\n              </>\r\n            )}\r\n            {this.state.isScroliing && <div style={{height: this.sliderRef.current?.container.current.clientHeight,\r\n               top: (606 - this.sliderRef.current?.container.current.clientHeight) / 2}} className=\"scrolling-left\"></div>}\r\n            {this.state.isOnSlider && (\r\n              <ScrollContainer className=\"carouslle\" ref={this.sliderRef}>\r\n                {this.state.images.img1 && (\r\n                  <img className=\"carouslle-img\" src={this.state.images.img1} />\r\n                )}\r\n                {this.state.images.img2 && (\r\n                  <img className=\"carouslle-img\" src={this.state.images.img2} />\r\n                )}\r\n                {this.state.images.img3 && (\r\n                  <img className=\"carouslle-img\" src={this.state.images.img3} />\r\n                )}\r\n                {this.state.images.img4 && (\r\n                  <img className=\"carouslle-img\" src={this.state.images.img4} />\r\n                )}\r\n                {this.state.images.img5 && (\r\n                  <img className=\"carouslle-img\" src={this.state.images.img5} />\r\n                )}\r\n                {this.state.images.img6 && (\r\n                  <img className=\"carouslle-img\" src={this.state.images.img6} />\r\n                )}\r\n                {this.state.images.img7 && (\r\n                  <img className=\"carouslle-img\" src={this.state.images.img7} />\r\n                )}\r\n              </ScrollContainer>\r\n            )}\r\n            {this.state.isOnSlider && this.state.isVideosCarrousle && (\r\n              <ScrollContainer\r\n                className=\"carouslle\"\r\n                ref={this.sliderRef}\r\n              ></ScrollContainer>\r\n            )}\r\n            {this.state.isScroliing && <div style={{height: this.sliderRef.current?.container.current.clientHeight,\r\n            top: (606 - this.sliderRef.current?.container.current.clientHeight) / 2}} className=\"scrolling-right\"></div>}\r\n          </div>\r\n\r\n          <script\r\n            type=\"text/javascript\"\r\n            src=\"https://live.sekindo.com/live/liveView.php?s=102802&cbuster=%%CACHEBUSTER%%&pubUrl=%%REFERRER_URL_ESC%%&subId=[SUBID_ENCODED]&x=%%WIDTH%%&y=%%HEIGHT%%&vp_content=embed138cf7ohjskq\"\r\n          ></script>\r\n          <div className=\"right-area\">\r\n            <div className=\"titlesInRightArea\">\r\n              <div className=\"right-in-titles\">\r\n                <div className=\"product-rate\">\r\n                  {this.props.product?.successRates} %\r\n                </div>\r\n              </div>\r\n              <div className=\"left-in-titles\">\r\n                <h1 className=\"type-title\">\r\n                  {this.props.product.productId &&\r\n                    this.state.productsType.nameForSingle}\r\n                </h1>\r\n                <p className=\"campaign-name-area\">\r\n                  {this.props.campaign?.campaignName}\r\n                </p>\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"bars-area\">\r\n              <p className=\"bar-title\">Best practice media</p>\r\n              <p className=\"bar-rate\">65 %</p>\r\n              <ProgressBar\r\n                height=\"7px\"\r\n                borderRadius=\"0\"\r\n                bgcolor=\"#FFDB48\"\r\n                completed={65}\r\n              />\r\n            </div>\r\n\r\n            <div className=\"bars-area\">\r\n              <p className=\"bar-title\">Best practice media</p>\r\n              <p className=\"bar-rate\">95 %</p>\r\n              <ProgressBar\r\n                height=\"7px\"\r\n                borderRadius=\"0\"\r\n                bgcolor=\"#1CE5A2\"\r\n                completed={95}\r\n              />\r\n            </div>\r\n\r\n            <div className=\"bars-area\">\r\n              <p className=\"bar-title\">Best practice media</p>\r\n              <p className=\"bar-rate\">40 %</p>\r\n              <ProgressBar\r\n                height=\"7px\"\r\n                borderRadius=\"0\"\r\n                bgcolor=\"#E4002B\"\r\n                completed={40}\r\n              />\r\n            </div>\r\n          </div>\r\n          <button\r\n            className=\"close-product-pop-up-btn\"\r\n            onClick={this.closePopUp}\r\n          >\r\n            <CloseIcon />\r\n          </button>\r\n{/* \r\n          {this.state.isScroliing &&\r\n            <div className=\"arrows-bottom\">\r\n              <IconButton onClick={this.scrollToLeft}>\r\n                <ArrowLeftIcon style={{fontSize: '8px' , marginRight: '7px'}}/>\r\n              </IconButton>\r\n              <IconButton onClick={this.scrollToRight}>\r\n                <ArrowRightIcon style={{fontSize: '8px', marginLeft: '7px'}}/>\r\n              </IconButton>\r\n\r\n            </div>} */}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","C:\\Users\\Maya\\Documents\\GitHub\\factory\\src\\models\\productsTypeModel.ts",[],"C:\\Users\\Maya\\Documents\\GitHub\\factory\\src\\models\\imagesModel.ts",[],["323","324"],"C:\\Users\\Maya\\Documents\\GitHub\\factory\\src\\is-on-factory.ts",[],"C:\\Users\\Maya\\Documents\\GitHub\\factory\\src\\components\\pedometer\\pedometer.js",["325"],{"ruleId":"326","replacedBy":"327"},{"ruleId":"328","replacedBy":"329"},{"ruleId":"330","severity":1,"message":"331","line":9,"column":10,"nodeType":"332","messageId":"333","endLine":9,"endColumn":19},{"ruleId":"330","severity":1,"message":"334","line":10,"column":10,"nodeType":"332","messageId":"333","endLine":10,"endColumn":20},{"ruleId":"330","severity":1,"message":"335","line":2,"column":10,"nodeType":"332","messageId":"333","endLine":2,"endColumn":21},{"ruleId":"330","severity":1,"message":"336","line":8,"column":10,"nodeType":"332","messageId":"333","endLine":8,"endColumn":17},{"ruleId":"337","severity":1,"message":"338","line":190,"column":11,"nodeType":"339","endLine":190,"endColumn":59},{"ruleId":"337","severity":1,"message":"338","line":202,"column":13,"nodeType":"339","endLine":202,"endColumn":74},{"ruleId":"337","severity":1,"message":"338","line":208,"column":73,"nodeType":"339","endLine":208,"endColumn":121},{"ruleId":"330","severity":1,"message":"340","line":4,"column":10,"nodeType":"332","messageId":"333","endLine":4,"endColumn":23},{"ruleId":"330","severity":1,"message":"341","line":6,"column":10,"nodeType":"332","messageId":"333","endLine":6,"endColumn":25},{"ruleId":"326","replacedBy":"327"},{"ruleId":"328","replacedBy":"329"},{"ruleId":"330","severity":1,"message":"342","line":4,"column":10,"nodeType":"332","messageId":"333","endLine":4,"endColumn":23},{"ruleId":"330","severity":1,"message":"343","line":8,"column":8,"nodeType":"332","messageId":"333","endLine":8,"endColumn":15},{"ruleId":"344","severity":1,"message":"345","line":85,"column":44,"nodeType":"346","messageId":"347","endLine":85,"endColumn":46},{"ruleId":"344","severity":1,"message":"348","line":89,"column":17,"nodeType":"349","messageId":"350","endLine":89,"endColumn":24},{"ruleId":"351","severity":1,"message":"352","line":123,"column":33,"nodeType":"346","messageId":"353","endLine":129,"endColumn":14},{"ruleId":"344","severity":1,"message":"345","line":123,"column":48,"nodeType":"346","messageId":"347","endLine":123,"endColumn":50},{"ruleId":"344","severity":1,"message":"348","line":127,"column":21,"nodeType":"349","messageId":"350","endLine":127,"endColumn":28},{"ruleId":"337","severity":1,"message":"338","line":172,"column":25,"nodeType":"339","endLine":172,"endColumn":104},{"ruleId":"337","severity":1,"message":"338","line":198,"column":21,"nodeType":"339","endLine":198,"endColumn":86},{"ruleId":"337","severity":1,"message":"338","line":206,"column":29,"nodeType":"339","endLine":206,"endColumn":100},{"ruleId":"337","severity":1,"message":"338","line":208,"column":33,"nodeType":"339","endLine":210,"endColumn":177},{"ruleId":"330","severity":1,"message":"354","line":1,"column":28,"nodeType":"332","messageId":"333","endLine":1,"endColumn":34},{"ruleId":"330","severity":1,"message":"355","line":8,"column":10,"nodeType":"332","messageId":"333","endLine":8,"endColumn":20},{"ruleId":"337","severity":1,"message":"338","line":106,"column":17,"nodeType":"339","endLine":106,"endColumn":180},{"ruleId":"337","severity":1,"message":"338","line":107,"column":17,"nodeType":"339","endLine":107,"endColumn":177},{"ruleId":"337","severity":1,"message":"338","line":126,"column":17,"nodeType":"339","endLine":126,"endColumn":172},{"ruleId":"337","severity":1,"message":"338","line":128,"column":21,"nodeType":"339","endLine":128,"endColumn":173},{"ruleId":"337","severity":1,"message":"338","line":137,"column":17,"nodeType":"339","endLine":137,"endColumn":60},{"ruleId":"330","severity":1,"message":"356","line":1,"column":10,"nodeType":"332","messageId":"333","endLine":1,"endColumn":14},{"ruleId":"330","severity":1,"message":"342","line":7,"column":10,"nodeType":"332","messageId":"333","endLine":7,"endColumn":23},{"ruleId":"330","severity":1,"message":"357","line":10,"column":10,"nodeType":"332","messageId":"333","endLine":10,"endColumn":25},{"ruleId":"330","severity":1,"message":"358","line":11,"column":10,"nodeType":"332","messageId":"333","endLine":11,"endColumn":24},{"ruleId":"330","severity":1,"message":"359","line":13,"column":10,"nodeType":"332","messageId":"333","endLine":13,"endColumn":26},{"ruleId":"330","severity":1,"message":"360","line":15,"column":10,"nodeType":"332","messageId":"333","endLine":15,"endColumn":17},{"ruleId":"330","severity":1,"message":"361","line":18,"column":8,"nodeType":"332","messageId":"333","endLine":18,"endColumn":22},{"ruleId":"330","severity":1,"message":"362","line":19,"column":8,"nodeType":"332","messageId":"333","endLine":19,"endColumn":18},{"ruleId":"344","severity":1,"message":"348","line":152,"column":59,"nodeType":"346","messageId":"363","endLine":152,"endColumn":61},{"ruleId":"344","severity":1,"message":"348","line":153,"column":51,"nodeType":"346","messageId":"363","endLine":153,"endColumn":53},{"ruleId":"344","severity":1,"message":"348","line":172,"column":52,"nodeType":"346","messageId":"363","endLine":172,"endColumn":54},{"ruleId":"344","severity":1,"message":"348","line":173,"column":55,"nodeType":"346","messageId":"363","endLine":173,"endColumn":57},{"ruleId":"344","severity":1,"message":"348","line":223,"column":40,"nodeType":"346","messageId":"363","endLine":223,"endColumn":42},{"ruleId":"344","severity":1,"message":"348","line":225,"column":48,"nodeType":"346","messageId":"363","endLine":225,"endColumn":50},{"ruleId":"344","severity":1,"message":"348","line":236,"column":40,"nodeType":"346","messageId":"363","endLine":236,"endColumn":42},{"ruleId":"344","severity":1,"message":"348","line":238,"column":49,"nodeType":"346","messageId":"363","endLine":238,"endColumn":51},{"ruleId":"337","severity":1,"message":"338","line":323,"column":21,"nodeType":"339","endLine":323,"endColumn":113},{"ruleId":"337","severity":1,"message":"338","line":330,"column":21,"nodeType":"339","endLine":330,"endColumn":81},{"ruleId":"337","severity":1,"message":"338","line":350,"column":41,"nodeType":"339","endLine":350,"endColumn":182},{"ruleId":"337","severity":1,"message":"338","line":364,"column":41,"nodeType":"339","endLine":364,"endColumn":182},{"ruleId":"337","severity":1,"message":"338","line":389,"column":37,"nodeType":"339","endLine":389,"endColumn":178},{"ruleId":"337","severity":1,"message":"338","line":403,"column":37,"nodeType":"339","endLine":403,"endColumn":178},{"ruleId":"337","severity":1,"message":"338","line":420,"column":41,"nodeType":"339","endLine":420,"endColumn":244},{"ruleId":"330","severity":1,"message":"359","line":9,"column":10,"nodeType":"332","messageId":"333","endLine":9,"endColumn":26},{"ruleId":"330","severity":1,"message":"358","line":10,"column":10,"nodeType":"332","messageId":"333","endLine":10,"endColumn":24},{"ruleId":"330","severity":1,"message":"364","line":11,"column":10,"nodeType":"332","messageId":"333","endLine":11,"endColumn":19},{"ruleId":"330","severity":1,"message":"365","line":12,"column":10,"nodeType":"332","messageId":"333","endLine":12,"endColumn":24},{"ruleId":"330","severity":1,"message":"366","line":19,"column":8,"nodeType":"332","messageId":"333","endLine":19,"endColumn":24},{"ruleId":"344","severity":1,"message":"348","line":109,"column":41,"nodeType":"346","messageId":"363","endLine":109,"endColumn":43},{"ruleId":"344","severity":1,"message":"348","line":115,"column":40,"nodeType":"346","messageId":"363","endLine":115,"endColumn":42},{"ruleId":"344","severity":1,"message":"348","line":117,"column":50,"nodeType":"346","messageId":"363","endLine":117,"endColumn":52},{"ruleId":"344","severity":1,"message":"348","line":138,"column":34,"nodeType":"346","messageId":"363","endLine":138,"endColumn":36},{"ruleId":"344","severity":1,"message":"348","line":140,"column":36,"nodeType":"346","messageId":"363","endLine":140,"endColumn":38},{"ruleId":"367","severity":1,"message":"368","line":195,"column":83,"nodeType":"369","messageId":"370","endLine":195,"endColumn":84,"fix":"371"},{"ruleId":"367","severity":1,"message":"368","line":212,"column":68,"nodeType":"369","messageId":"370","endLine":212,"endColumn":69,"fix":"372"},{"ruleId":"330","severity":1,"message":"373","line":222,"column":15,"nodeType":"332","messageId":"333","endLine":222,"endColumn":44},{"ruleId":"344","severity":1,"message":"348","line":259,"column":42,"nodeType":"346","messageId":"363","endLine":259,"endColumn":44},{"ruleId":"344","severity":1,"message":"348","line":260,"column":41,"nodeType":"346","messageId":"363","endLine":260,"endColumn":43},{"ruleId":"344","severity":1,"message":"348","line":271,"column":42,"nodeType":"346","messageId":"363","endLine":271,"endColumn":44},{"ruleId":"344","severity":1,"message":"348","line":272,"column":41,"nodeType":"346","messageId":"363","endLine":272,"endColumn":43},{"ruleId":"344","severity":1,"message":"348","line":297,"column":42,"nodeType":"346","messageId":"363","endLine":297,"endColumn":44},{"ruleId":"344","severity":1,"message":"348","line":298,"column":41,"nodeType":"346","messageId":"363","endLine":298,"endColumn":43},{"ruleId":"344","severity":1,"message":"348","line":309,"column":42,"nodeType":"346","messageId":"363","endLine":309,"endColumn":44},{"ruleId":"344","severity":1,"message":"348","line":310,"column":41,"nodeType":"346","messageId":"363","endLine":310,"endColumn":43},{"ruleId":"344","severity":1,"message":"348","line":355,"column":36,"nodeType":"346","messageId":"363","endLine":355,"endColumn":38},{"ruleId":"344","severity":1,"message":"348","line":357,"column":45,"nodeType":"346","messageId":"363","endLine":357,"endColumn":47},{"ruleId":"330","severity":1,"message":"354","line":1,"column":28,"nodeType":"332","messageId":"333","endLine":1,"endColumn":34},{"ruleId":"330","severity":1,"message":"374","line":8,"column":10,"nodeType":"332","messageId":"333","endLine":8,"endColumn":22},{"ruleId":"330","severity":1,"message":"355","line":12,"column":10,"nodeType":"332","messageId":"333","endLine":12,"endColumn":20},{"ruleId":"337","severity":1,"message":"338","line":211,"column":21,"nodeType":"339","endLine":211,"endColumn":74},{"ruleId":"330","severity":1,"message":"375","line":7,"column":10,"nodeType":"332","messageId":"333","endLine":7,"endColumn":16},{"ruleId":"344","severity":1,"message":"348","line":105,"column":48,"nodeType":"346","messageId":"363","endLine":105,"endColumn":50},{"ruleId":"344","severity":1,"message":"348","line":96,"column":40,"nodeType":"346","messageId":"363","endLine":96,"endColumn":42},{"ruleId":"344","severity":1,"message":"348","line":97,"column":43,"nodeType":"346","messageId":"363","endLine":97,"endColumn":45},{"ruleId":"344","severity":1,"message":"348","line":113,"column":44,"nodeType":"346","messageId":"363","endLine":113,"endColumn":46},{"ruleId":"344","severity":1,"message":"348","line":114,"column":47,"nodeType":"346","messageId":"363","endLine":114,"endColumn":49},{"ruleId":"330","severity":1,"message":"376","line":3,"column":8,"nodeType":"332","messageId":"333","endLine":3,"endColumn":17},{"ruleId":"344","severity":1,"message":"348","line":49,"column":46,"nodeType":"346","messageId":"363","endLine":49,"endColumn":48},{"ruleId":"330","severity":1,"message":"377","line":1,"column":17,"nodeType":"332","messageId":"333","endLine":1,"endColumn":28},{"ruleId":"330","severity":1,"message":"378","line":6,"column":10,"nodeType":"332","messageId":"333","endLine":6,"endColumn":16},{"ruleId":"330","severity":1,"message":"375","line":7,"column":10,"nodeType":"332","messageId":"333","endLine":7,"endColumn":16},{"ruleId":"330","severity":1,"message":"379","line":9,"column":8,"nodeType":"332","messageId":"333","endLine":9,"endColumn":13},{"ruleId":"330","severity":1,"message":"380","line":11,"column":10,"nodeType":"332","messageId":"333","endLine":11,"endColumn":21},{"ruleId":"330","severity":1,"message":"354","line":1,"column":28,"nodeType":"332","messageId":"333","endLine":1,"endColumn":34},{"ruleId":"330","severity":1,"message":"360","line":2,"column":10,"nodeType":"332","messageId":"333","endLine":2,"endColumn":17},{"ruleId":"330","severity":1,"message":"355","line":11,"column":10,"nodeType":"332","messageId":"333","endLine":11,"endColumn":20},{"ruleId":"330","severity":1,"message":"381","line":165,"column":15,"nodeType":"332","messageId":"333","endLine":165,"endColumn":25},{"ruleId":"330","severity":1,"message":"382","line":169,"column":15,"nodeType":"332","messageId":"333","endLine":169,"endColumn":27},{"ruleId":"337","severity":1,"message":"338","line":232,"column":17,"nodeType":"339","endLine":232,"endColumn":70},{"ruleId":"330","severity":1,"message":"335","line":2,"column":10,"nodeType":"332","messageId":"333","endLine":2,"endColumn":21},{"ruleId":"330","severity":1,"message":"336","line":8,"column":10,"nodeType":"332","messageId":"333","endLine":8,"endColumn":17},{"ruleId":"337","severity":1,"message":"338","line":192,"column":11,"nodeType":"339","endLine":192,"endColumn":59},{"ruleId":"337","severity":1,"message":"338","line":204,"column":13,"nodeType":"339","endLine":204,"endColumn":74},{"ruleId":"337","severity":1,"message":"338","line":210,"column":125,"nodeType":"339","endLine":210,"endColumn":173},{"ruleId":"337","severity":1,"message":"338","line":99,"column":53,"nodeType":"339","endLine":99,"endColumn":117},{"ruleId":"337","severity":1,"message":"338","line":100,"column":52,"nodeType":"339","endLine":100,"endColumn":118},{"ruleId":"330","severity":1,"message":"383","line":4,"column":10,"nodeType":"332","messageId":"333","endLine":4,"endColumn":13},{"ruleId":"330","severity":1,"message":"384","line":1,"column":10,"nodeType":"332","messageId":"333","endLine":1,"endColumn":15},{"ruleId":"330","severity":1,"message":"385","line":2,"column":10,"nodeType":"332","messageId":"333","endLine":2,"endColumn":18},{"ruleId":"330","severity":1,"message":"386","line":3,"column":10,"nodeType":"332","messageId":"333","endLine":3,"endColumn":16},{"ruleId":"330","severity":1,"message":"387","line":1,"column":10,"nodeType":"332","messageId":"333","endLine":1,"endColumn":22},{"ruleId":"330","severity":1,"message":"342","line":6,"column":10,"nodeType":"332","messageId":"333","endLine":6,"endColumn":23},{"ruleId":"330","severity":1,"message":"357","line":8,"column":10,"nodeType":"332","messageId":"333","endLine":8,"endColumn":25},{"ruleId":"330","severity":1,"message":"358","line":9,"column":10,"nodeType":"332","messageId":"333","endLine":9,"endColumn":24},{"ruleId":"330","severity":1,"message":"388","line":14,"column":8,"nodeType":"332","messageId":"333","endLine":14,"endColumn":29},{"ruleId":"344","severity":1,"message":"348","line":55,"column":35,"nodeType":"346","messageId":"363","endLine":55,"endColumn":37},{"ruleId":"344","severity":1,"message":"348","line":117,"column":48,"nodeType":"346","messageId":"363","endLine":117,"endColumn":50},{"ruleId":"344","severity":1,"message":"348","line":118,"column":47,"nodeType":"346","messageId":"363","endLine":118,"endColumn":49},{"ruleId":"344","severity":1,"message":"348","line":133,"column":48,"nodeType":"346","messageId":"363","endLine":133,"endColumn":50},{"ruleId":"344","severity":1,"message":"348","line":134,"column":41,"nodeType":"346","messageId":"363","endLine":134,"endColumn":43},{"ruleId":"344","severity":1,"message":"348","line":175,"column":40,"nodeType":"346","messageId":"363","endLine":175,"endColumn":42},{"ruleId":"344","severity":1,"message":"348","line":177,"column":48,"nodeType":"346","messageId":"363","endLine":177,"endColumn":50},{"ruleId":"344","severity":1,"message":"348","line":188,"column":40,"nodeType":"346","messageId":"363","endLine":188,"endColumn":42},{"ruleId":"344","severity":1,"message":"348","line":190,"column":49,"nodeType":"346","messageId":"363","endLine":190,"endColumn":51},{"ruleId":"330","severity":1,"message":"359","line":8,"column":10,"nodeType":"332","messageId":"333","endLine":8,"endColumn":26},{"ruleId":"330","severity":1,"message":"389","line":15,"column":8,"nodeType":"332","messageId":"333","endLine":15,"endColumn":25},{"ruleId":"330","severity":1,"message":"390","line":16,"column":8,"nodeType":"332","messageId":"333","endLine":16,"endColumn":22},{"ruleId":"330","severity":1,"message":"391","line":17,"column":8,"nodeType":"332","messageId":"333","endLine":17,"endColumn":21},{"ruleId":"330","severity":1,"message":"362","line":18,"column":8,"nodeType":"332","messageId":"333","endLine":18,"endColumn":18},{"ruleId":"337","severity":1,"message":"338","line":171,"column":17,"nodeType":"339","endLine":174,"endColumn":19},{"ruleId":"337","severity":1,"message":"338","line":175,"column":17,"nodeType":"339","endLine":178,"endColumn":19},{"ruleId":"337","severity":1,"message":"338","line":179,"column":17,"nodeType":"339","endLine":182,"endColumn":19},{"ruleId":"337","severity":1,"message":"338","line":183,"column":17,"nodeType":"339","endLine":186,"endColumn":19},{"ruleId":"337","severity":1,"message":"338","line":194,"column":19,"nodeType":"339","endLine":194,"endColumn":81},{"ruleId":"337","severity":1,"message":"338","line":197,"column":19,"nodeType":"339","endLine":197,"endColumn":81},{"ruleId":"337","severity":1,"message":"338","line":200,"column":19,"nodeType":"339","endLine":200,"endColumn":81},{"ruleId":"337","severity":1,"message":"338","line":203,"column":19,"nodeType":"339","endLine":203,"endColumn":81},{"ruleId":"337","severity":1,"message":"338","line":206,"column":19,"nodeType":"339","endLine":206,"endColumn":81},{"ruleId":"337","severity":1,"message":"338","line":209,"column":19,"nodeType":"339","endLine":209,"endColumn":81},{"ruleId":"337","severity":1,"message":"338","line":212,"column":19,"nodeType":"339","endLine":212,"endColumn":81},{"ruleId":"326","replacedBy":"392"},{"ruleId":"328","replacedBy":"393"},{"ruleId":"394","severity":1,"message":"395","line":6,"column":5,"nodeType":"396","messageId":"397","endLine":8,"endColumn":4},"no-native-reassign",["398"],"no-negated-in-lhs",["399"],"@typescript-eslint/no-unused-vars","'UserModel' is defined but never used.","Identifier","unusedVar","'ActionType' is defined but never used.","'Unsubscribe' is defined but never used.","'rejects' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'getAllReports' is defined but never used.","'TopCampaignsNav' is defined but never used.","'getAllClients' is defined but never used.","'AddIcon' is defined but never used.","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","Array.prototype.map() expects a return value from arrow function.","ReturnStatement","expectedReturnValue","no-loop-func","Function declared in a loop contains unsafe references to variable(s) 'isUnique'.","unsafeRefs","'useRef' is defined but never used.","'AllClients' is defined but never used.","'exec' is defined but never used.","'getAllCampaigns' is defined but never used.","'getAllProducts' is defined but never used.","'getProductsTypes' is defined but never used.","'NavLink' is defined but never used.","'FilterListIcon' is defined but never used.","'IconButton' is defined but never used.","expectedInside","'LinkPopUp' is defined but never used.","'AddClientPopUp' is defined but never used.","'HighlightOffIcon' is defined but never used.","dot-location","Expected dot to be on same line as property.","MemberExpression","expectedDotBeforeProperty",{"range":"400","text":"401"},{"range":"402","text":"401"},"'allCampaigns' is assigned a value but never used.","'ProductsType' is defined but never used.","'config' is defined but never used.","'CloseIcon' is defined but never used.","'ChangeEvent' is defined but never used.","'Config' is defined but never used.","'axios' is defined but never used.","'ClientModel' is defined but never used.","'offsetLeft' is assigned a value but never used.","'buttonsWidth' is assigned a value but never used.","'act' is defined but never used.","'Store' is defined but never used.","'AppState' is defined but never used.","'Action' is defined but never used.","'ProductModel' is defined but never used.","'KeyboardArrowLeftIcon' is defined but never used.","'SimpleImageSlider' is defined but never used.","'ArrowRightIcon' is defined but never used.","'ArrowLeftIcon' is defined but never used.",["398"],["399"],"no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","no-global-assign","no-unsafe-negation",[8207,8226],"\r\n                .",[8955,8974]]