[{"C:\\Users\\USER\\Desktop\\factory\\factory\\src\\index.tsx":"1","C:\\Users\\USER\\Desktop\\factory\\factory\\src\\reportWebVitals.ts":"2","C:\\Users\\USER\\Desktop\\factory\\factory\\src\\components\\layout\\layout.tsx":"3","C:\\Users\\USER\\Desktop\\factory\\factory\\src\\components\\auth\\auth.tsx":"4","C:\\Users\\USER\\Desktop\\factory\\factory\\src\\components\\home\\home.tsx":"5","C:\\Users\\USER\\Desktop\\factory\\factory\\src\\components\\page-not-found\\page-not-found.tsx":"6","C:\\Users\\USER\\Desktop\\factory\\factory\\src\\components\\report-maker\\report-maker.tsx":"7","C:\\Users\\USER\\Desktop\\factory\\factory\\src\\components\\report\\report.tsx":"8","C:\\Users\\USER\\Desktop\\factory\\factory\\src\\redux\\store.js":"9","C:\\Users\\USER\\Desktop\\factory\\factory\\src\\redux\\actionType.ts":"10","C:\\Users\\USER\\Desktop\\factory\\factory\\src\\components\\top-clients-nav\\top-clients-nav.tsx":"11","C:\\Users\\USER\\Desktop\\factory\\factory\\src\\components\\all-clients\\all-clients.tsx":"12","C:\\Users\\USER\\Desktop\\factory\\factory\\src\\components\\campaigns\\campaigns.tsx":"13","C:\\Users\\USER\\Desktop\\factory\\factory\\src\\components\\top-campaigns-nav\\top-campaigns-nav.tsx":"14","C:\\Users\\USER\\Desktop\\factory\\factory\\src\\components\\filtering-side-menu\\filtering-side-menu.tsx":"15","C:\\Users\\USER\\Desktop\\factory\\factory\\src\\components\\link-pop-up\\link-pop-up.tsx":"16","C:\\Users\\USER\\Desktop\\factory\\factory\\src\\models\\reportModel.ts":"17","C:\\Users\\USER\\Desktop\\factory\\factory\\src\\components\\top-report-nav\\top-report-nav.tsx":"18","C:\\Users\\USER\\Desktop\\factory\\factory\\src\\redux\\reducer.ts":"19","C:\\Users\\USER\\Desktop\\factory\\factory\\src\\redux\\middleware.ts":"20","C:\\Users\\USER\\Desktop\\factory\\factory\\src\\redux\\appState.ts":"21","C:\\Users\\USER\\Desktop\\factory\\factory\\src\\models\\productModel.ts":"22","C:\\Users\\USER\\Desktop\\factory\\factory\\src\\models\\campaignModel.ts":"23","C:\\Users\\USER\\Desktop\\factory\\factory\\src\\config.ts":"24","C:\\Users\\USER\\Desktop\\factory\\factory\\src\\data\\report.ts":"25","C:\\Users\\USER\\Desktop\\factory\\factory\\src\\data\\products.ts":"26","C:\\Users\\USER\\Desktop\\factory\\factory\\src\\components\\add-client-pop-up\\add-client-pop-up.tsx":"27","C:\\Users\\USER\\Desktop\\factory\\factory\\src\\components\\product-pop-up\\product-pop-up.tsx":"28","C:\\Users\\USER\\Desktop\\factory\\factory\\src\\models\\productsTypeModel.ts":"29","C:\\Users\\USER\\Desktop\\factory\\factory\\src\\components\\auth-for-watching-only\\auth-for-watching-only.tsx":"30"},{"size":333,"mtime":1611505975157,"results":"31","hashOfConfig":"32"},{"size":425,"mtime":499162500000,"results":"33","hashOfConfig":"32"},{"size":1160,"mtime":1611650392114,"results":"34","hashOfConfig":"32"},{"size":6000,"mtime":1611690748998,"results":"35","hashOfConfig":"32"},{"size":1614,"mtime":1611649364678,"results":"36","hashOfConfig":"32"},{"size":298,"mtime":1611505975127,"results":"37","hashOfConfig":"32"},{"size":2705,"mtime":1611649358937,"results":"38","hashOfConfig":"32"},{"size":3759,"mtime":1611666218535,"results":"39","hashOfConfig":"32"},{"size":291,"mtime":1611505975166,"results":"40","hashOfConfig":"32"},{"size":615,"mtime":1611665652486,"results":"41","hashOfConfig":"32"},{"size":5213,"mtime":1611505975137,"results":"42","hashOfConfig":"32"},{"size":6697,"mtime":1611505975102,"results":"43","hashOfConfig":"32"},{"size":13483,"mtime":1611666534635,"results":"44","hashOfConfig":"32"},{"size":9607,"mtime":1611689286739,"results":"45","hashOfConfig":"32"},{"size":13484,"mtime":1611665707707,"results":"46","hashOfConfig":"32"},{"size":2270,"mtime":1611665812764,"results":"47","hashOfConfig":"32"},{"size":487,"mtime":1611505975161,"results":"48","hashOfConfig":"32"},{"size":6450,"mtime":1611505975141,"results":"49","hashOfConfig":"32"},{"size":4118,"mtime":1611665668877,"results":"50","hashOfConfig":"32"},{"size":383,"mtime":1611505975164,"results":"51","hashOfConfig":"32"},{"size":1984,"mtime":1611668450504,"results":"52","hashOfConfig":"32"},{"size":597,"mtime":1611505975160,"results":"53","hashOfConfig":"32"},{"size":284,"mtime":1611505975158,"results":"54","hashOfConfig":"32"},{"size":344,"mtime":1611505975141,"results":"55","hashOfConfig":"32"},{"size":142324,"mtime":1611505975153,"results":"56","hashOfConfig":"32"},{"size":297904,"mtime":1611509461794,"results":"57","hashOfConfig":"32"},{"size":9171,"mtime":1611507088016,"results":"58","hashOfConfig":"32"},{"size":4619,"mtime":1611516984108,"results":"59","hashOfConfig":"32"},{"size":175,"mtime":1611505975161,"results":"60","hashOfConfig":"32"},{"size":4634,"mtime":1611650087928,"results":"61","hashOfConfig":"32"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},"10j0122",{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"69","messages":"70","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"77","messages":"78","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"84","messages":"85","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"64"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"64"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":17,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"92","messages":"93","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"94","messages":"95","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":1,"source":null},{"filePath":"96","messages":"97","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"64"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"105","messages":"106","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"64"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"114","usedDeprecatedRules":"64"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"123","usedDeprecatedRules":"64"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"126","usedDeprecatedRules":"64"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"131","usedDeprecatedRules":"64"},"C:\\Users\\USER\\Desktop\\factory\\factory\\src\\index.tsx",[],["132","133"],"C:\\Users\\USER\\Desktop\\factory\\factory\\src\\reportWebVitals.ts",[],"C:\\Users\\USER\\Desktop\\factory\\factory\\src\\components\\layout\\layout.tsx",["134"],"C:\\Users\\USER\\Desktop\\factory\\factory\\src\\components\\auth\\auth.tsx",["135","136","137","138"],"C:\\Users\\USER\\Desktop\\factory\\factory\\src\\components\\home\\home.tsx",[],"C:\\Users\\USER\\Desktop\\factory\\factory\\src\\components\\page-not-found\\page-not-found.tsx",[],"C:\\Users\\USER\\Desktop\\factory\\factory\\src\\components\\report-maker\\report-maker.tsx",[],"C:\\Users\\USER\\Desktop\\factory\\factory\\src\\components\\report\\report.tsx",["139","140"],"C:\\Users\\USER\\Desktop\\factory\\factory\\src\\redux\\store.js",[],["141","142"],"C:\\Users\\USER\\Desktop\\factory\\factory\\src\\redux\\actionType.ts",[],"C:\\Users\\USER\\Desktop\\factory\\factory\\src\\components\\top-clients-nav\\top-clients-nav.tsx",["143","144","145","146","147"],"import React, { Component, useRef } from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { Unsubscribe } from \"redux\";\r\nimport { ClientModel } from \"../../models/clientModel\";\r\nimport { ActionType } from \"../../redux/actionType\";\r\nimport { store } from \"../../redux/store\";\r\nimport { AllClients } from \"../all-clients/all-clients\";\r\nimport \"./top-clients-nav.css\";\r\n\r\ninterface TopClientsNavProps {\r\n    isScroll: boolean\r\n}\r\n\r\ninterface TopClientsNavState {\r\n    selectedClients: ClientModel[],\r\n    isButtonsScrolled: boolean,\r\n}\r\n\r\nexport class TopClientsNav extends Component<TopClientsNavProps, TopClientsNavState>{\r\n\r\n    private unsubscribeStore: Unsubscribe;\r\n    public buttonsRef = React.createRef<HTMLDivElement>();\r\n    public topNavRef = React.createRef<HTMLDivElement>();\r\n\r\n\r\n    public constructor(props: TopClientsNavProps) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            selectedClients: store.getState().selectedClients,\r\n            isButtonsScrolled: false\r\n        }\r\n        this.unsubscribeStore = store.subscribe(() => {\r\n            const selectedClients = store.getState().selectedClients;\r\n            this.setState({ selectedClients });\r\n        })\r\n    }\r\n\r\n    componentDidMount() {\r\n        const topNavWidth: number = this.topNavRef.current?.clientWidth as number;\r\n        const maxWidth = topNavWidth / 100 * 60;\r\n\r\n        window.addEventListener(\"click\", () => {\r\n            const buttonsWidth = this.buttonsRef.current?.scrollWidth as number;\r\n            if (buttonsWidth > maxWidth) {\r\n                this.setState({ isButtonsScrolled: true });\r\n            }\r\n            else {\r\n                this.setState({ isButtonsScrolled: false });\r\n            }\r\n        })\r\n    }\r\n\r\n\r\n    public componentWillUnmount(): void {\r\n        this.unsubscribeStore();\r\n    }\r\n\r\n    public scrollToRight = () => {\r\n        this.buttonsRef.current?.scrollTo({\r\n            top: 0,\r\n            left: 0,\r\n            behavior: \"smooth\"\r\n        });\r\n    }\r\n\r\n    public scrollToLeft = () => {\r\n        const buttonsWidth = this.buttonsRef.current?.scrollWidth as number;\r\n        this.buttonsRef.current?.scrollTo({\r\n            top: 0,\r\n            left: -buttonsWidth,\r\n            behavior: \"smooth\"\r\n        });\r\n    }\r\n\r\n    public removeAllClients = () => {\r\n        this.setState({ selectedClients: [] })\r\n        store.dispatch({ type: ActionType.unselectAllClients });\r\n    }\r\n\r\n    public removeClient = (clientId: number) => (event: any) => {\r\n        const selectedClients = [...this.state.selectedClients];\r\n        const index = selectedClients.findIndex(c => c.clientId === clientId);\r\n        selectedClients.splice(index, 1);\r\n        this.setState({ selectedClients });\r\n\r\n        store.dispatch({ type: ActionType.removeClient, payLoad: clientId });\r\n    }\r\n\r\n\r\n    public render() {\r\n        return (\r\n            <div ref={this.topNavRef} className=\"top-companies-nav\">\r\n                <button className=\"no-selected-button\" style={{ display: this.state.selectedClients.length === 0 ? \"block\" : \"none\" }}>\r\n                    +\r\n                </button>\r\n                <div ref={this.buttonsRef} className=\"buttons\">\r\n                    <div style={{ display: this.state.isButtonsScrolled ? \"block\" : \"none\" }}\r\n                        className=\"start-of-buttons-section\" onMouseEnter={this.scrollToRight}></div>\r\n\r\n                    {this.state?.selectedClients.map(client =>\r\n                        <button className=\"client-btn\">\r\n                            <button className=\"remove-btn\" onClick={this.removeClient(client.clientId as number)}>\r\n                                <span>&#10006;</span>\r\n                            </button>\r\n                            <span className=\"inside-client-btn\">{client.clientName}</span>\r\n                        </button>\r\n                    )}\r\n\r\n                    <div style={{ display: this.state.isButtonsScrolled ? \"block\" : \"none\" }}\r\n                        className=\"end-of-buttons-section\" onMouseEnter={this.scrollToLeft}>\r\n                        <span className=\"more-buttons-icon\">|</span>\r\n                    </div>\r\n                </div>\r\n\r\n\r\n                <div className=\"top-scroll\" style={{ top: this.props.isScroll ? this.topNavRef.current?.clientHeight : 0 }}></div>\r\n                <img src=\"./assets/images/pink_btn_before.svg\" className=\"next-btn-pink\" style={{ display: this.state.selectedClients.length === 0 ? \"block\" : \"none\" }} />\r\n                <NavLink onClick={() => console.log(store.getState().selectedClients)} to=\"/report-maker\" className=\"link-to-report-maker\" exact>\r\n                    <img src=\"./assets/images/pink_btn_after.svg\" className=\"next-btn-pink\" style={{ display: this.state.selectedClients.length > 0 ? \"block\" : \"none\" }} />\r\n                </NavLink>\r\n                <div className=\"other-buttons\">\r\n                    <span className=\"remove-all\" onClick={this.removeAllClients}>הסר הכל</span>\r\n                </div>\r\n\r\n                <div className=\"logo-container\"></div>\r\n                <img className=\"logo\" src=\"./assets/images/logo_factory.svg\" />\r\n\r\n            </div>\r\n\r\n        )\r\n    }\r\n}","C:\\Users\\USER\\Desktop\\factory\\factory\\src\\components\\all-clients\\all-clients.tsx",["148","149","150","151","152","153"],"import React, { Component } from \"react\";\r\nimport { ClientModel } from \"../../models/clientModel\";\r\nimport \"./all-clients.css\";\r\nimport { getAllClients } from \"../../data/clients\";\r\nimport { store } from \"../../redux/store\";\r\nimport { ActionType } from \"../../redux/actionType\";\r\nimport { Unsubscribe } from \"redux\";\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport axios from \"axios\";\r\n\r\ninterface AllClientsState {\r\n    allClients: ClientModel[],\r\n    companies: string[],\r\n    isPopUpShow: boolean,\r\n    clientsToShow: ClientModel[],\r\n    selectedClients: ClientModel[]\r\n}\r\n\r\nexport class AllClients extends Component<any, AllClientsState>{\r\n\r\n    private unsubscribeStore: Unsubscribe;\r\n\r\n    public constructor(props: any) {\r\n        super(props);\r\n        this.state = {\r\n            allClients: [],\r\n            companies: [],\r\n            isPopUpShow: false,\r\n            clientsToShow: [],\r\n            selectedClients: store.getState().selectedClients\r\n        }\r\n\r\n        this.unsubscribeStore = store.subscribe(() => {\r\n            const selectedClients = store.getState().selectedClients;\r\n            this.setState({ selectedClients });\r\n        })\r\n    }\r\n\r\n    async componentDidMount() {\r\n        try{\r\n            const response = await axios.get(\"http://factory-dev.landing-page-media.co.il/all-clients/\");\r\n            const allClients: ClientModel[] = response.data.clients;\r\n            this.setState({ allClients });\r\n            this.setState({ clientsToShow: allClients });\r\n    \r\n            store.dispatch({ type: ActionType.getAllClients, payLoad: allClients });\r\n        }\r\n        catch(err){\r\n            console.log(err.message);\r\n        }\r\n\r\n    }\r\n\r\n\r\n    //Display latest campaigns who changed first  \r\n    public filterByLatest = () => {\r\n        const allClients = [...this.state.allClients];\r\n        for (const client of allClients) {\r\n            client.timePassed = Date.parse(client.lastUpdate as string)\r\n        }\r\n        allClients.sort((a, b) => ((a.timePassed as number) > (b.timePassed as number)) ? 1 : -1);\r\n        this.setState({clientsToShow: allClients});\r\n    }\r\n\r\n    public componentWillUnmount(): void {\r\n        this.unsubscribeStore();\r\n    }\r\n\r\n\r\n\r\n    //Add client to clients top list\r\n    public selectClient = (client: ClientModel) => (event: any) => {\r\n        const selectedClients: ClientModel[] = store.getState().selectedClients;\r\n        let isUnique: boolean = true;\r\n        selectedClients.map(selectedClient => {\r\n            if (selectedClient.clientId === client.clientId) {\r\n                isUnique = false;\r\n                store.dispatch({ type: ActionType.removeClient, payLoad: client.clientId });\r\n                return;\r\n            }\r\n        })\r\n        if (isUnique) {\r\n            let selectedClients = [...this.state.selectedClients];\r\n            selectedClients.push(client);\r\n            this.setState({ selectedClients });\r\n            store.dispatch({ type: ActionType.addClientToSelectedClients, payLoad: client });\r\n        }\r\n    }\r\n\r\n\r\n    //Filter companies by company in Mccann\r\n    public filterByCompany = (companyName: string) => (event: any) => {\r\n\r\n        if (companyName === \"הכל\") {\r\n            const allClients = [...this.state.allClients];\r\n            this.setState({ clientsToShow: allClients });\r\n            return;\r\n        }\r\n\r\n        const clientsToShow = this.state.allClients.filter(c => c.company === companyName);\r\n        this.setState({ clientsToShow });\r\n    }\r\n\r\n    public filterAlphabetically = () => {\r\n        const clientsByAlphabetically = this.state.allClients.map(c => c.clientName).sort();\r\n        let clientsToShow: ClientModel[] = [];\r\n        for (let i = 0; i <= clientsByAlphabetically.length; i++) {\r\n            for (const client of this.state.allClients) {\r\n                if (client.clientName === clientsByAlphabetically[i]) {\r\n                    clientsToShow.push(client);\r\n                }\r\n            }\r\n        }\r\n        this.setState({ clientsToShow });\r\n    }\r\n\r\n\r\n\r\n    public render() {\r\n        return (\r\n            <div className=\"all-clients\">\r\n\r\n                {this.state.allClients.length === 0 && <img className=\"loader\" src=\"./assets/images/loading.gif\" />}\r\n\r\n                <div className=\"filter-area\">\r\n                    <div className=\"left-filter\">\r\n                        <img className=\"filter-by-date-img\" src=\"./assets/images/filter_by_date.svg\" />\r\n                        <span className=\"filter-by-new\" onClick={this.filterByLatest}>Latest</span>\r\n                        <span className=\"separate\">|</span>\r\n                        <span className=\"filter-by-name\" onClick={this.filterAlphabetically}>A <span className=\"inside-filter\">to</span> Z</span>\r\n                    </div>\r\n\r\n\r\n                    <span onMouseEnter={() => this.setState({ isPopUpShow: true })}\r\n                        onMouseLeave={() => this.setState({ isPopUpShow: false })}\r\n                        className=\"filter-by-company\">דוח לפי חברה</span>\r\n\r\n                </div>\r\n\r\n                {this.state.clientsToShow.map(client =>\r\n                    <div className=\"client\">\r\n                        <img src={client.clientImageSrc} onClick={this.selectClient(client)}/>\r\n                        <div className=\"client-info\">\r\n\r\n                            <button className={this.state.selectedClients.filter(c => c.clientId === client.clientId).length === 0 ? \"btn-before\" : \"btn-after\"}>\r\n                                <AddIcon className=\"plus-icon\" onClick={this.selectClient(client)} />\r\n                            </button>\r\n                            <span>{client.clientName}</span>\r\n                        </div>\r\n                    </div>)}\r\n\r\n                <div style={{ display: this.state.isPopUpShow ? \"block\" : \"none\" }} className=\"company-filter-pop-up-menu\"\r\n                    onMouseEnter={() => this.setState({ isPopUpShow: true })}\r\n                    onMouseLeave={() => this.setState({ isPopUpShow: false })}>\r\n                    <span onClick={this.filterByCompany(\"הכל\")} className=\"company-name\">כל הלקוחות</span>\r\n                    <span onClick={this.filterByCompany(\"Mccann\")} className=\"company-name\">לקוחות Mccann</span>\r\n                    <span onClick={this.filterByCompany(\"MRM\")} className=\"company-name\">לקוחות MRM</span>\r\n                    <span onClick={this.filterByCompany(\"Valley\")} className=\"company-name\">לקוחות Valley</span>\r\n                    <span onClick={this.filterByCompany(\"UMD\")} className=\"company-name\">לקוחות UMD</span>\r\n\r\n                </div>\r\n\r\n            </div>\r\n        )\r\n    }\r\n}","C:\\Users\\USER\\Desktop\\factory\\factory\\src\\components\\campaigns\\campaigns.tsx",["154","155","156","157","158","159","160","161","162","163","164","165","166","167","168","169","170"],"C:\\Users\\USER\\Desktop\\factory\\factory\\src\\components\\top-campaigns-nav\\top-campaigns-nav.tsx",["171","172","173","174"],"C:\\Users\\USER\\Desktop\\factory\\factory\\src\\components\\filtering-side-menu\\filtering-side-menu.tsx",["175","176","177","178","179","180"],"C:\\Users\\USER\\Desktop\\factory\\factory\\src\\components\\link-pop-up\\link-pop-up.tsx",["181","182","183"],"C:\\Users\\USER\\Desktop\\factory\\factory\\src\\models\\reportModel.ts",[],"C:\\Users\\USER\\Desktop\\factory\\factory\\src\\components\\top-report-nav\\top-report-nav.tsx",["184","185","186","187"],"import React, { Component, useRef } from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { Unsubscribe } from \"redux\";\r\nimport { CampaignModel } from \"../../models/campaignModel\";\r\nimport { ClientModel } from \"../../models/clientModel\";\r\nimport { ProductModel } from \"../../models/productModel\";\r\nimport { ActionType } from \"../../redux/actionType\";\r\nimport { store } from \"../../redux/store\";\r\nimport { AddClientPopUp } from \"../add-client-pop-up/add-client-pop-up\";\r\nimport { AllClients } from \"../all-clients/all-clients\";\r\nimport \"./top-report-nav.css\";\r\n\r\ninterface TopReportNavProps {\r\n    isScroll: boolean\r\n}\r\n\r\ninterface TopReportNavState {\r\n    selectedClients: ClientModel[],\r\n    isButtonsScrolled: boolean,\r\n    display: boolean,\r\n    filteringBefore: {\r\n        beforeCampaignsToDisplay: CampaignModel[],\r\n        beforeProductsToDisplay: ProductModel[]\r\n\r\n    }\r\n}\r\n\r\nexport class TopReportNav extends Component<TopReportNavProps, TopReportNavState>{\r\n\r\n    private unsubscribeStore: Unsubscribe;\r\n    public buttonsRef = React.createRef<HTMLDivElement>();\r\n    public topNavRef = React.createRef<HTMLDivElement>();\r\n\r\n\r\n    public constructor(props: TopReportNavProps) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            selectedClients: store.getState().selectedClients,\r\n            isButtonsScrolled: false,\r\n            display: store.getState().isPopUpShow,\r\n            filteringBefore: {\r\n                beforeCampaignsToDisplay: [],\r\n                beforeProductsToDisplay: []\r\n            }\r\n        }\r\n        this.unsubscribeStore = store.subscribe(() => {\r\n            const selectedClients = store.getState().selectedClients;\r\n            const display = store.getState().isPopUpShow;\r\n            this.setState({ selectedClients });\r\n            this.setState({ display });\r\n        })\r\n    }\r\n\r\n    componentDidMount() {\r\n        const topNavWidth: number = this.topNavRef.current?.clientWidth as number;\r\n        const maxWidth = topNavWidth / 100 * 70;\r\n\r\n        window.addEventListener(\"click\", () => {\r\n            const buttonsWidth = this.buttonsRef.current?.scrollWidth as number;\r\n            if (buttonsWidth > maxWidth) {\r\n                this.setState({ isButtonsScrolled: true });\r\n            }\r\n            else {\r\n                this.setState({ isButtonsScrolled: false });\r\n            }\r\n        })\r\n    }\r\n\r\n    public filterByClientId = (clientId: number) => (event: any) => {\r\n      \r\n        const campaignsToDisplay: CampaignModel[] = [];\r\n\r\n        const filteringBefore = { ...this.state.filteringBefore };\r\n        filteringBefore.beforeCampaignsToDisplay = store.getState().campaignsToDisplay;\r\n        filteringBefore.beforeProductsToDisplay = store.getState().productsToDisplay;\r\n        this.setState({ filteringBefore });\r\n\r\n        const allSelectedCampaigns = store.getState().selectedCampaigns;\r\n        for (const c of allSelectedCampaigns) {\r\n            if (c.clientId === clientId) {\r\n                campaignsToDisplay.push(c);\r\n            }\r\n        }\r\n        store.dispatch({ type: ActionType.updateCampaignsToDisplay, payLoad: campaignsToDisplay });\r\n     \r\n\r\n        const clientsToDisplay: ClientModel[] = [];\r\n        const allSelectedClients = store.getState().selectedClients;\r\n        for (const c of allSelectedClients) {\r\n            if (c.clientId === clientId) {\r\n                clientsToDisplay.push(c);\r\n            }\r\n        }\r\n\r\n        store.dispatch({ type: ActionType.updateClientsToDisplay, payLoad: clientsToDisplay });\r\n    }\r\n\r\n\r\n    public componentWillUnmount(): void {\r\n        this.unsubscribeStore();\r\n    }\r\n\r\n    public scrollToRight = () => {\r\n        this.buttonsRef.current?.scrollTo({\r\n            top: 0,\r\n            left: 0,\r\n            behavior: \"smooth\"\r\n        });\r\n    }\r\n\r\n    public scrollToLeft = () => {\r\n        const buttonsWidth = this.buttonsRef.current?.scrollWidth as number;\r\n        this.buttonsRef.current?.scrollTo({\r\n            top: 0,\r\n            left: -buttonsWidth,\r\n            behavior: \"smooth\"\r\n        });\r\n    }\r\n\r\n\r\n    public openPopUp = () => {\r\n        store.dispatch({ type: ActionType.changeDisplayForPopUp, payLoad: false });\r\n    }\r\n\r\n    public resetClientsToDisplay = () => {\r\n        store.dispatch({ type: ActionType.updateClientsToDisplay, payLoad: [] });\r\n        store.dispatch({ type: ActionType.updateCampaignsToDisplay, payLoad: this.state.filteringBefore.beforeCampaignsToDisplay });\r\n        store.dispatch({ type: ActionType.updateProductsToDisplay, payLoad: this.state.filteringBefore.beforeProductsToDisplay });\r\n    }\r\n\r\n\r\n    public render() {\r\n        return (\r\n            <div ref={this.topNavRef} className=\"top-campaigns-nav-report\">\r\n                <div ref={this.buttonsRef} className=\"campaigns-buttons\">\r\n                    <div style={{ display: this.state.isButtonsScrolled ? \"block\" : \"none\" }}\r\n                        className=\"campaigns-start-of-buttons-section\" onMouseEnter={this.scrollToRight}></div>\r\n\r\n                    <button className=\"campaigns-client-btn\" onClick={this.resetClientsToDisplay}>\r\n                        <button className=\"campaigns-remove-btn\" style={{ opacity: 0 }}>\r\n                            <span>&#10006;</span>\r\n                        </button>\r\n                        <span className=\"campaigns-inside-client-btn\">All</span>\r\n                    </button>\r\n\r\n\r\n                    {this.state?.selectedClients.map(client =>\r\n                        <button className=\"campaigns-client-btn\" onClick={this.filterByClientId(client.clientId as number)}>\r\n                            <span className=\"campaigns-inside-client-btn\">{client.clientName}</span>\r\n                        </button>\r\n                    )}\r\n\r\n                    <div style={{ display: this.state.isButtonsScrolled ? \"block\" : \"none\" }}\r\n                        className=\"campaigns-end-of-buttons-section\" onMouseEnter={this.scrollToLeft}>\r\n                        <span className=\"campaigns-more-buttons-icon\">|</span>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"campaigns-top-scroll\" style={{ top: this.props.isScroll ? \"6vw\" : 0 }}></div>\r\n\r\n                <img className=\"campaigns-logo\" src=\"./assets/images/logo_factory.svg\" />\r\n\r\n                {this.state.display &&\r\n                    <AddClientPopUp />\r\n                }\r\n\r\n            </div>\r\n\r\n        )\r\n    }\r\n}","C:\\Users\\USER\\Desktop\\factory\\factory\\src\\redux\\reducer.ts",["188"],"C:\\Users\\USER\\Desktop\\factory\\factory\\src\\redux\\middleware.ts",["189","190","191"],"import { Store } from \"redux\";\r\nimport { AppState } from \"./appState\";\r\nimport { Action } from \"./action\";\r\n\r\n// תחביר מקוצר לפונקציה הנ\"ל\r\nexport const saveToSessionStorage = (store: { getState: () => any; }) => (next: (arg0: any) => void) => (action: any) => {\r\n    next(action);\r\n    sessionStorage.setItem(\"AppState\", JSON.stringify(store.getState()));\r\n};\r\n","C:\\Users\\USER\\Desktop\\factory\\factory\\src\\redux\\appState.ts",[],"C:\\Users\\USER\\Desktop\\factory\\factory\\src\\models\\productModel.ts",[],"C:\\Users\\USER\\Desktop\\factory\\factory\\src\\models\\campaignModel.ts",["192"],"import { ProductModel } from \"./productModel\";\r\n\r\nexport class CampaignModel {\r\n  public constructor(\r\n    public campaignId?: number,\r\n    public clientId?: number,\r\n    public campaignName?: string,\r\n    public lastUpdate?: string,\r\n    public timePassed?: number\r\n\r\n  ) {\r\n  }\r\n}\r\n","C:\\Users\\USER\\Desktop\\factory\\factory\\src\\config.ts",[],"C:\\Users\\USER\\Desktop\\factory\\factory\\src\\data\\report.ts",[],"C:\\Users\\USER\\Desktop\\factory\\factory\\src\\data\\products.ts",[],"C:\\Users\\USER\\Desktop\\factory\\factory\\src\\components\\add-client-pop-up\\add-client-pop-up.tsx",["193","194","195","196","197","198","199","200"],"import React, { Component } from \"react\";\r\nimport { ClientModel } from \"../../models/clientModel\";\r\nimport { ActionType } from \"../../redux/actionType\";\r\nimport { store } from \"../../redux/store\";\r\nimport \"./add-client-pop-up.css\";\r\nimport { getAllClients } from \"../../data/clients\";\r\nimport { CampaignModel } from \"../../models/campaignModel\";\r\nimport { getAllCampaigns } from \"../../data/campaigns\";\r\nimport { getAllProducts } from \"../../data/products\";\r\nimport { ProductModel } from \"../../models/productModel\";\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport axios from \"axios\";\r\n\r\ninterface AddClientPopUpState {\r\n    allClients: ClientModel[],\r\n    companies: string[],\r\n    clientsToAdd: ClientModel[]\r\n}\r\n\r\nexport class AddClientPopUp extends Component<any, AddClientPopUpState>{\r\n\r\n    private companies: string[] = [];\r\n\r\n    public constructor(props: any) {\r\n        super(props);\r\n        this.state = {\r\n            allClients: store.getState().allClients,\r\n            companies: [],\r\n            clientsToAdd: []\r\n        }\r\n    }\r\n\r\n    public closePopUp = () => {\r\n        store.dispatch({ type: ActionType.changeDisplayForPopUp, payLoad: true });\r\n    }\r\n\r\n    async componentDidMount() {\r\n        try {\r\n            const reponse = await axios.get(\"http://factory-dev.landing-page-media.co.il/all-clients/\");\r\n            const allClients:ClientModel[] = reponse.data.clients;\r\n            this.setState({ allClients });\r\n\r\n            let companies: string[] = [];\r\n            allClients.map(client => {\r\n                const duplicate = companies.find(c => c === client.company);\r\n                if (!duplicate) {\r\n                    companies.push(client.company as string);\r\n                }\r\n            })\r\n            this.setState({ companies });\r\n        }\r\n        catch (err) {\r\n            console.log(err.message);\r\n        }\r\n    }\r\n\r\n    public stopPropagation = (e: any) => {\r\n        e.stopPropagation();\r\n    }\r\n\r\n    public addClient = (client: ClientModel) => (event: any) => {\r\n        const clientsToAdd = [...this.state.clientsToAdd];\r\n        for (const c of clientsToAdd) {\r\n            if (c.clientId === client.clientId) {\r\n                const index = clientsToAdd.indexOf(c);\r\n                clientsToAdd.splice(index, 1);\r\n                this.setState({ clientsToAdd });\r\n                return;\r\n            }\r\n        }\r\n\r\n        clientsToAdd.push(client);\r\n        this.setState({ clientsToAdd });\r\n\r\n    }\r\n\r\n    public isSelcected = (clientId: number) => {\r\n        for (const c of this.state.clientsToAdd) {\r\n            if (c.clientId === clientId) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    public addClientsToReport = async () => {\r\n        try{\r\n\r\n            const selectedClients = store.getState().selectedClients;\r\n            for (const c of this.state.clientsToAdd) {\r\n                selectedClients.push(c);\r\n            }\r\n            store.dispatch({ type: ActionType.updateSelectedClients, payLoad: selectedClients });\r\n            store.dispatch({ type: ActionType.updateClientsToDisplay, payLoad: [] });\r\n\r\n            const response = await axios.get(\"http://factory-dev.landing-page-media.co.il/all-campaigns/\");\r\n            const allCampaignsInDb:CampaignModel[] = response.data.campaigns;\r\n\r\n            const selectedCampaigns: CampaignModel[] = store.getState().selectedCampaigns;\r\n            this.state.clientsToAdd.map(client => {\r\n                allCampaignsInDb.map(campaign => {\r\n                    if (campaign.clientId === client.clientId) {\r\n                        selectedCampaigns.push(campaign);\r\n                    }\r\n                })\r\n            })\r\n\r\n            const allProductsResponse = await axios.get(\"http://factory-dev.landing-page-media.co.il/all-products\");\r\n            const allProducts: ProductModel[] = allProductsResponse.data.products;\r\n    \r\n            store.dispatch({ type: ActionType.getSelectedCampaigns, payLoad: selectedCampaigns });\r\n    \r\n            const selectedProducts: ProductModel[] = store.getState().selectedProducts;\r\n            this.state.clientsToAdd.map(client => {\r\n                allProducts.map(product => {\r\n                    if (product.clientId === client.clientId) {\r\n                        selectedProducts.push(product);\r\n    \r\n                    }\r\n                })\r\n            })\r\n            store.dispatch({ type: ActionType.getSelectedProducts, payLoad: selectedProducts });\r\n    \r\n            this.closePopUp();\r\n\r\n        }\r\n        catch(err){\r\n            console.log(err.message);\r\n        }\r\n    }\r\n\r\n    public isExist = (clientId: number) => {\r\n        const selectedClients = [...store.getState().selectedClients];\r\n        for (const c of selectedClients) {\r\n            if (c.clientId === clientId) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    public render() {\r\n        return (\r\n            <div className=\"full-screen-conatiner\" onClick={this.closePopUp}>\r\n                <div className=\"small-conatiner\" onClick={this.stopPropagation}>\r\n                    <button className=\"close-pop-up-btn\" onClick={this.closePopUp} ><CloseIcon /></button>\r\n                    <div className=\"clients-in-pop-up\">\r\n                        {this.state.companies?.map(company =>\r\n                            <div className=\"company\">\r\n                                <span className=\"company-name\">לקוחות {company}</span>\r\n                                <div className=\"client-in-pop-up\">\r\n                                    {this.state.allClients?.map(client =>\r\n                                        client.company === company &&\r\n                                        <button style={{\r\n                                            backgroundColor: this.isSelcected(client.clientId as number) ? \"black\" : \"\",\r\n                                            color: this.isSelcected(client.clientId as number) ? \"white\" : \"\"\r\n                                        }}\r\n                                            onClick={this.addClient(client)} className=\"pop-up-btn\"\r\n                                            disabled={this.isExist(client.clientId as number)}>\r\n                                            {client.clientName}\r\n                                        </button>\r\n\r\n                                    )}\r\n                                    <button className=\"pop-up-btn\">\r\n                                        Some company\r\n                                        </button>\r\n                                    <button className=\"pop-up-btn\">\r\n                                        Some\r\n                                        </button>\r\n                                    <button className=\"pop-up-btn\">\r\n                                        Some company\r\n                                        </button>\r\n                                    <button className=\"pop-up-btn\">\r\n                                        Some\r\n                                        </button>\r\n                                    <button className=\"pop-up-btn\">\r\n                                        Some company\r\n                                        </button>\r\n                                    <button className=\"pop-up-btn\">\r\n                                        Some\r\n                                        </button>\r\n                                    <button className=\"pop-up-btn\">\r\n                                        Some company\r\n                                        </button>\r\n                                    <button className=\"pop-up-btn\">\r\n                                        Some company\r\n                                        </button>\r\n                                    <button className=\"pop-up-btn\">\r\n                                        Some\r\n                                        </button>\r\n                                    <button className=\"pop-up-btn\">\r\n                                        Some company\r\n                                        </button>\r\n                                    <button className=\"pop-up-btn\">\r\n                                        Some\r\n                                        </button>\r\n                                    <button className=\"pop-up-btn\">\r\n                                        Some company\r\n                                        </button>\r\n                                    <button className=\"pop-up-btn\">\r\n                                        Some\r\n                                        </button>\r\n                                    <button className=\"pop-up-btn\">\r\n                                        Some company\r\n                                        </button>\r\n\r\n                                </div>\r\n                            </div>\r\n                        )}\r\n                    </div>\r\n                    <button onClick={this.addClientsToReport} disabled={this.state.clientsToAdd.length === 0} className=\"add-client-in-pop-up\">הוספה</button>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}","C:\\Users\\USER\\Desktop\\factory\\factory\\src\\components\\product-pop-up\\product-pop-up.tsx",["201","202","203"],"import React, { Component } from \"react\";\r\nimport { ActionType } from \"../../redux/actionType\";\r\nimport { store } from \"../../redux/store\";\r\nimport \"./product-pop-up.css\";\r\nimport { ProductModel } from \"../../models/productModel\";\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport { ProductsType } from \"../../models/productsTypeModel\";\r\nimport { getProductsTypes } from \"../../data/products-types\";\r\nimport { CampaignModel } from \"../../models/campaignModel\";\r\nimport ProgressBar from '@ramonak/react-progress-bar';\r\nimport axios from \"axios\";\r\n\r\n\r\ninterface ProductPopUpProps {\r\n    product: ProductModel,\r\n    campaign: CampaignModel,\r\n}\r\n\r\ninterface ProductPopUpState {\r\n    images: string[],\r\n    productsType: ProductsType\r\n}\r\n\r\nexport class ProductPopUp extends Component<ProductPopUpProps, ProductPopUpState>{\r\n\r\n    public constructor(props: ProductPopUpProps) {\r\n        super(props);\r\n        this.state = {\r\n            images: [],\r\n            productsType: new ProductsType()\r\n        }\r\n    }\r\n\r\n\r\n    public closePopUp = () => {\r\n        store.dispatch({ type: ActionType.changeDisplayForProductsPopUp });\r\n    }\r\n\r\n    public stopPropagation = (e: any) => {\r\n        e.stopPropagation();\r\n    }\r\n\r\n\r\n    public async componentDidMount() {\r\n        try {\r\n            if (!this.props.product) {\r\n                this.closePopUp();\r\n            }\r\n            const images: any[] = [];\r\n            let productImages = this.props.product.images;\r\n            if (productImages) {\r\n                Object.values(productImages).map(i => {\r\n                    images.push(i);\r\n                })\r\n\r\n            }\r\n            this.setState({ images });\r\n\r\n            const response = await axios.get(\"http://factory-dev.landing-page-media.co.il/all-products-types/\");\r\n            const productsTypes: ProductsType[] = response.data.productsTypes;\r\n            const productTypes = productsTypes.find(t => t.productsTypeId === this.props.product.productTypeId);\r\n            this.setState({productsType: productTypes as ProductsType});\r\n        }\r\n        catch (err) {\r\n            console.log(err.message);\r\n        }\r\n    }\r\n\r\n\r\n\r\n    public render() {\r\n        return (\r\n            <div className=\"full-screen-product-conatiner\" onClick={this.closePopUp} >\r\n                <div className=\"small-product-conatiner\" onClick={this.stopPropagation}>\r\n\r\n\r\n                    <div className=\"left-area\">\r\n                        <div className=\"grid-product\">\r\n                            {this.state.images.map(i =>\r\n                                <img className=\"product-img\" src={i} />\r\n                            )}\r\n\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"right-area\">\r\n                        <div className=\"titlesInRightArea\">\r\n                            <div className=\"right-in-titles\">\r\n                                <div className=\"product-rate\">{this.props.product?.successRates} %</div>\r\n                            </div>\r\n                            <div className=\"left-in-titles\">\r\n                                <h1 className=\"type-title\">{this.props.product.productId && this.state.productsType.nameForSingle}</h1>\r\n                                <p className=\"campaign-name-area\">{this.props.campaign?.campaignName}</p>\r\n                            </div>\r\n                        </div>\r\n\r\n\r\n                        <div className=\"bars-area\">\r\n                            <p className=\"bar-title\">Best practice media</p>\r\n                            <p className=\"bar-rate\">65 %</p>\r\n                            <ProgressBar height=\"7px\" borderRadius=\"0\" bgcolor=\"#FFDB48\" completed={65} />\r\n                        </div>\r\n\r\n                        <div className=\"bars-area\">\r\n                            <p className=\"bar-title\">Best practice media</p>\r\n                            <p className=\"bar-rate\">95 %</p>\r\n                            <ProgressBar height=\"7px\" borderRadius=\"0\" bgcolor=\"#1CE5A2\" completed={95} />\r\n                        </div>\r\n\r\n                        <div className=\"bars-area\">\r\n                            <p className=\"bar-title\">Best practice media</p>\r\n                            <p className=\"bar-rate\">40 %</p>\r\n                            <ProgressBar height=\"7px\" borderRadius=\"0\" bgcolor=\"#E4002B\" completed={40} />\r\n                        </div>\r\n\r\n                    </div>\r\n                    <button className=\"close-product-pop-up-btn\" onClick={this.closePopUp} ><CloseIcon /></button>\r\n\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}","C:\\Users\\USER\\Desktop\\factory\\factory\\src\\models\\productsTypeModel.ts",[],"C:\\Users\\USER\\Desktop\\factory\\factory\\src\\components\\auth-for-watching-only\\auth-for-watching-only.tsx",["204","205","206"],"import React, { ChangeEvent, Component } from \"react\";\r\nimport { Unsubscribe } from \"redux\";\r\nimport { UserModel } from \"../../models/userModel\";\r\nimport { ActionType } from \"../../redux/actionType\";\r\nimport { store } from \"../../redux/store\";\r\nimport \"./auth-for-watching-only.css\";\r\nimport axios from \"axios\";\r\nimport { rejects } from \"assert\";\r\n\r\ninterface AuthForWatchingOnlyState {\r\n  phoneNumber: string,\r\n  code: string,\r\n  message: string,\r\n  isPhoneLegal: boolean,\r\n  isCodeLegal: boolean,\r\n  isDisplayForBtn: boolean,\r\n  allUsers: UserModel[],\r\n  isSmsSent: boolean\r\n}\r\n\r\nexport class AuthForWatchingOnly extends Component<any, AuthForWatchingOnlyState> {\r\n\r\n\r\n  public constructor(props: any) {\r\n    super(props);\r\n    this.state = {\r\n      phoneNumber: \"\",\r\n      code: \"\",\r\n      message: \"\",\r\n      isPhoneLegal: false,\r\n      isCodeLegal: false,\r\n      isDisplayForBtn: false,\r\n      allUsers: [],\r\n      isSmsSent: false\r\n    }\r\n  }\r\n\r\n  public async componentDidMount() {\r\n    try {\r\n      const response = await axios.get(\"http://factory-dev.landing-page-media.co.il/all-users/\");\r\n      const allUsers: UserModel[] = response.data.users;\r\n      this.setState({ allUsers });\r\n    }\r\n    catch (err) {\r\n      console.log(err.message);\r\n    }\r\n  }\r\n\r\n\r\n  public setPhoneNumber = (args: ChangeEvent<HTMLInputElement>) => {\r\n    const phoneNumber = args.target.value;\r\n    this.setState({ phoneNumber });\r\n  }\r\n\r\n  public setCode = (args: ChangeEvent<HTMLInputElement>) => {\r\n    const code = args.target.value;\r\n    this.setState({ isDisplayForBtn: true });\r\n    this.setState({ code });\r\n  }\r\n\r\n  //Demo functions\r\n  public authPhoneNumber = () => {\r\n    const phoneNumber = this.state.phoneNumber;\r\n    const allUsers = [...this.state.allUsers];\r\n    const user = allUsers.find(u => u.phoneNumber?.toString() === phoneNumber);\r\n\r\n    let message = \"\";\r\n    let isPhoneLegal = false;\r\n\r\n    if (user) {\r\n        message = \"שלחנו לך הודעה עם קוד בן 4 ספרות\";\r\n        isPhoneLegal = true;\r\n        new Promise((resolve, reject) => {\r\n          resolve(() => console.log(\"\"))\r\n        }\r\n  \r\n        )\r\n          .then(() =>\r\n            fetch(\r\n              `https://landing-page-media.co.il/projects/phone-auth/?phone=${phoneNumber}`\r\n            )\r\n          )\r\n          .then((data) => {\r\n            this.setState({ isSmsSent: true });\r\n          }\r\n          )\r\n          .catch((e) => {\r\n            console.log(e)\r\n          });\r\n    }\r\n    else {\r\n      message = \"מספר טלפון אינו מזוהה\";\r\n    }\r\n    this.setState({ message })\r\n    this.setState({ isPhoneLegal })\r\n  }\r\n\r\n  public authCode = () => {\r\n    const code = this.state.code;\r\n    const phoneNumber = this.state.phoneNumber;\r\n    let message = \"\";\r\n    let isCodeLegal = false;\r\n\r\n    if (this.state.isSmsSent) {\r\n      new Promise((resolve, reject) => {\r\n        resolve(console.log(\"\"));\r\n      })\r\n        .then(() =>\r\n          fetch(\r\n            `https://landing-page-media.co.il/projects/phone-auth/code_validation.php?code=${code}&phone=${phoneNumber}`\r\n          )\r\n        )\r\n        .then((response) => response.json())\r\n        .then((data) => {\r\n          if (data.auth) {\r\n            message = \"ברוכים הבאים\";\r\n            isCodeLegal = true;\r\n            store.dispatch({ type: ActionType.changeAuthForReport });\r\n          } else {\r\n            message = \"קוד אינו חוקי\";\r\n            this.setState(() => ({ code: \"\" }));\r\n          }\r\n          this.setState({ message })\r\n          this.setState({ isCodeLegal })\r\n        })\r\n    }\r\n  }\r\n\r\n  public render() {\r\n    return (\r\n      <div className=\"auth\">\r\n\r\n        <div className=\"auth-box\">\r\n\r\n          <img className=\"auth-logo\" src=\"/assets/images/logo_factory.svg\" />\r\n          <h1>אימות</h1>\r\n\r\n          <button onClick={this.authPhoneNumber} className=\"send-btn\">שלח</button>\r\n          <input onChange={this.setPhoneNumber} placeholder=\"אנא הזן מספר טלפון\" type=\"tel\" className=\"phone-box\" />\r\n          <br />\r\n\r\n          <input onChange={this.setCode} style={{ display: this.state.isPhoneLegal ? \"inline-block\" : \"none\" }} placeholder=\"אנא הזן את הקוד שנשלח\" type=\"text\" className=\"code-box\" />\r\n          <br />\r\n          {this.state.isDisplayForBtn &&\r\n            <button onClick={this.authCode} style={{ display: this.state.isPhoneLegal ? \"inline-block\" : \"none\" }} className=\"auth-code-btn\">אמת</button>\r\n          }\r\n          <br />\r\n\r\n          <span className=\"message\">{this.state.message}</span>\r\n\r\n        </div>\r\n\r\n\r\n      </div>\r\n\r\n    )\r\n  }\r\n}",{"ruleId":"207","replacedBy":"208"},{"ruleId":"209","replacedBy":"210"},{"ruleId":"211","severity":1,"message":"212","line":8,"column":8,"nodeType":"213","messageId":"214","endLine":8,"endColumn":13},{"ruleId":"211","severity":1,"message":"215","line":2,"column":10,"nodeType":"213","messageId":"214","endLine":2,"endColumn":21},{"ruleId":"211","severity":1,"message":"216","line":8,"column":10,"nodeType":"213","messageId":"214","endLine":8,"endColumn":17},{"ruleId":"217","severity":1,"message":"218","line":152,"column":11,"nodeType":"219","endLine":152,"endColumn":78},{"ruleId":"217","severity":1,"message":"218","line":161,"column":73,"nodeType":"219","endLine":161,"endColumn":121},{"ruleId":"211","severity":1,"message":"220","line":4,"column":10,"nodeType":"213","messageId":"214","endLine":4,"endColumn":23},{"ruleId":"211","severity":1,"message":"221","line":6,"column":10,"nodeType":"213","messageId":"214","endLine":6,"endColumn":25},{"ruleId":"207","replacedBy":"208"},{"ruleId":"209","replacedBy":"210"},{"ruleId":"211","severity":1,"message":"222","line":1,"column":28,"nodeType":"213","messageId":"214","endLine":1,"endColumn":34},{"ruleId":"211","severity":1,"message":"223","line":7,"column":10,"nodeType":"213","messageId":"214","endLine":7,"endColumn":20},{"ruleId":"217","severity":1,"message":"218","line":118,"column":17,"nodeType":"219","endLine":118,"endColumn":172},{"ruleId":"217","severity":1,"message":"218","line":120,"column":21,"nodeType":"219","endLine":120,"endColumn":173},{"ruleId":"217","severity":1,"message":"218","line":127,"column":17,"nodeType":"219","endLine":127,"endColumn":80},{"ruleId":"211","severity":1,"message":"224","line":4,"column":10,"nodeType":"213","messageId":"214","endLine":4,"endColumn":23},{"ruleId":"225","severity":1,"message":"226","line":75,"column":44,"nodeType":"227","messageId":"228","endLine":75,"endColumn":46},{"ruleId":"225","severity":1,"message":"229","line":79,"column":17,"nodeType":"230","messageId":"231","endLine":79,"endColumn":24},{"ruleId":"217","severity":1,"message":"218","line":123,"column":56,"nodeType":"219","endLine":123,"endColumn":116},{"ruleId":"217","severity":1,"message":"218","line":127,"column":25,"nodeType":"219","endLine":127,"endColumn":104},{"ruleId":"217","severity":1,"message":"218","line":142,"column":25,"nodeType":"219","endLine":142,"endColumn":95},{"ruleId":"211","severity":1,"message":"232","line":1,"column":10,"nodeType":"213","messageId":"214","endLine":1,"endColumn":14},{"ruleId":"211","severity":1,"message":"224","line":7,"column":10,"nodeType":"213","messageId":"214","endLine":7,"endColumn":23},{"ruleId":"211","severity":1,"message":"233","line":10,"column":10,"nodeType":"213","messageId":"214","endLine":10,"endColumn":25},{"ruleId":"211","severity":1,"message":"234","line":11,"column":10,"nodeType":"213","messageId":"214","endLine":11,"endColumn":24},{"ruleId":"211","severity":1,"message":"235","line":13,"column":10,"nodeType":"213","messageId":"214","endLine":13,"endColumn":26},{"ruleId":"211","severity":1,"message":"236","line":15,"column":10,"nodeType":"213","messageId":"214","endLine":15,"endColumn":17},{"ruleId":"225","severity":1,"message":"229","line":89,"column":55,"nodeType":"227","messageId":"237","endLine":89,"endColumn":57},{"ruleId":"225","severity":1,"message":"229","line":90,"column":47,"nodeType":"227","messageId":"237","endLine":90,"endColumn":49},{"ruleId":"225","severity":1,"message":"229","line":106,"column":48,"nodeType":"227","messageId":"237","endLine":106,"endColumn":50},{"ruleId":"225","severity":1,"message":"229","line":107,"column":51,"nodeType":"227","messageId":"237","endLine":107,"endColumn":53},{"ruleId":"217","severity":1,"message":"218","line":190,"column":17,"nodeType":"219","endLine":190,"endColumn":139},{"ruleId":"217","severity":1,"message":"218","line":193,"column":21,"nodeType":"219","endLine":193,"endColumn":113},{"ruleId":"217","severity":1,"message":"218","line":209,"column":37,"nodeType":"219","endLine":209,"endColumn":157},{"ruleId":"217","severity":1,"message":"218","line":223,"column":37,"nodeType":"219","endLine":223,"endColumn":157},{"ruleId":"217","severity":1,"message":"218","line":245,"column":37,"nodeType":"219","endLine":245,"endColumn":157},{"ruleId":"217","severity":1,"message":"218","line":259,"column":37,"nodeType":"219","endLine":259,"endColumn":157},{"ruleId":"217","severity":1,"message":"218","line":274,"column":17,"nodeType":"219","endLine":274,"endColumn":202},{"ruleId":"211","severity":1,"message":"222","line":1,"column":28,"nodeType":"213","messageId":"214","endLine":1,"endColumn":34},{"ruleId":"211","severity":1,"message":"238","line":7,"column":10,"nodeType":"213","messageId":"214","endLine":7,"endColumn":22},{"ruleId":"211","severity":1,"message":"223","line":11,"column":10,"nodeType":"213","messageId":"214","endLine":11,"endColumn":20},{"ruleId":"217","severity":1,"message":"218","line":224,"column":21,"nodeType":"219","endLine":224,"endColumn":94},{"ruleId":"211","severity":1,"message":"235","line":9,"column":10,"nodeType":"213","messageId":"214","endLine":9,"endColumn":26},{"ruleId":"211","severity":1,"message":"234","line":10,"column":10,"nodeType":"213","messageId":"214","endLine":10,"endColumn":24},{"ruleId":"211","severity":1,"message":"239","line":11,"column":10,"nodeType":"213","messageId":"214","endLine":11,"endColumn":19},{"ruleId":"211","severity":1,"message":"240","line":12,"column":10,"nodeType":"213","messageId":"214","endLine":12,"endColumn":24},{"ruleId":"241","severity":1,"message":"242","line":126,"column":83,"nodeType":"243","messageId":"244","endLine":126,"endColumn":84,"fix":"245"},{"ruleId":"211","severity":1,"message":"246","line":137,"column":15,"nodeType":"213","messageId":"214","endLine":137,"endColumn":44},{"ruleId":"211","severity":1,"message":"247","line":7,"column":10,"nodeType":"213","messageId":"214","endLine":7,"endColumn":16},{"ruleId":"211","severity":1,"message":"248","line":8,"column":10,"nodeType":"213","messageId":"214","endLine":8,"endColumn":21},{"ruleId":"211","severity":1,"message":"212","line":9,"column":8,"nodeType":"213","messageId":"214","endLine":9,"endColumn":13},{"ruleId":"211","severity":1,"message":"222","line":1,"column":28,"nodeType":"213","messageId":"214","endLine":1,"endColumn":34},{"ruleId":"211","severity":1,"message":"236","line":2,"column":10,"nodeType":"213","messageId":"214","endLine":2,"endColumn":17},{"ruleId":"211","severity":1,"message":"223","line":10,"column":10,"nodeType":"213","messageId":"214","endLine":10,"endColumn":20},{"ruleId":"217","severity":1,"message":"218","line":162,"column":17,"nodeType":"219","endLine":162,"endColumn":90},{"ruleId":"211","severity":1,"message":"249","line":4,"column":10,"nodeType":"213","messageId":"214","endLine":4,"endColumn":13},{"ruleId":"211","severity":1,"message":"250","line":1,"column":10,"nodeType":"213","messageId":"214","endLine":1,"endColumn":15},{"ruleId":"211","severity":1,"message":"251","line":2,"column":10,"nodeType":"213","messageId":"214","endLine":2,"endColumn":18},{"ruleId":"211","severity":1,"message":"252","line":3,"column":10,"nodeType":"213","messageId":"214","endLine":3,"endColumn":16},{"ruleId":"211","severity":1,"message":"253","line":1,"column":10,"nodeType":"213","messageId":"214","endLine":1,"endColumn":22},{"ruleId":"211","severity":1,"message":"224","line":6,"column":10,"nodeType":"213","messageId":"214","endLine":6,"endColumn":23},{"ruleId":"211","severity":1,"message":"233","line":8,"column":10,"nodeType":"213","messageId":"214","endLine":8,"endColumn":25},{"ruleId":"211","severity":1,"message":"234","line":9,"column":10,"nodeType":"213","messageId":"214","endLine":9,"endColumn":24},{"ruleId":"225","severity":1,"message":"229","line":44,"column":35,"nodeType":"227","messageId":"237","endLine":44,"endColumn":37},{"ruleId":"225","severity":1,"message":"229","line":100,"column":48,"nodeType":"227","messageId":"237","endLine":100,"endColumn":50},{"ruleId":"225","severity":1,"message":"229","line":101,"column":47,"nodeType":"227","messageId":"237","endLine":101,"endColumn":49},{"ruleId":"225","severity":1,"message":"229","line":114,"column":48,"nodeType":"227","messageId":"237","endLine":114,"endColumn":50},{"ruleId":"225","severity":1,"message":"229","line":115,"column":41,"nodeType":"227","messageId":"237","endLine":115,"endColumn":43},{"ruleId":"211","severity":1,"message":"235","line":8,"column":10,"nodeType":"213","messageId":"214","endLine":8,"endColumn":26},{"ruleId":"225","severity":1,"message":"229","line":52,"column":52,"nodeType":"227","messageId":"237","endLine":52,"endColumn":54},{"ruleId":"217","severity":1,"message":"218","line":80,"column":33,"nodeType":"219","endLine":80,"endColumn":72},{"ruleId":"211","severity":1,"message":"215","line":2,"column":10,"nodeType":"213","messageId":"214","endLine":2,"endColumn":21},{"ruleId":"211","severity":1,"message":"216","line":8,"column":10,"nodeType":"213","messageId":"214","endLine":8,"endColumn":17},{"ruleId":"217","severity":1,"message":"218","line":135,"column":11,"nodeType":"219","endLine":135,"endColumn":78},"no-native-reassign",["254"],"no-negated-in-lhs",["255"],"@typescript-eslint/no-unused-vars","'axios' is defined but never used.","Identifier","unusedVar","'Unsubscribe' is defined but never used.","'rejects' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'getAllReports' is defined but never used.","'TopCampaignsNav' is defined but never used.","'useRef' is defined but never used.","'AllClients' is defined but never used.","'getAllClients' is defined but never used.","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","Array.prototype.map() expects a return value from arrow function.","ReturnStatement","expectedReturnValue","'exec' is defined but never used.","'getAllCampaigns' is defined but never used.","'getAllProducts' is defined but never used.","'getProductsTypes' is defined but never used.","'NavLink' is defined but never used.","expectedInside","'ProductsType' is defined but never used.","'LinkPopUp' is defined but never used.","'AddClientPopUp' is defined but never used.","dot-location","Expected dot to be on same line as property.","MemberExpression","expectedDotBeforeProperty",{"range":"256","text":"257"},"'allCampaigns' is assigned a value but never used.","'config' is defined but never used.","'ReportModel' is defined but never used.","'act' is defined but never used.","'Store' is defined but never used.","'AppState' is defined but never used.","'Action' is defined but never used.","'ProductModel' is defined but never used.","no-global-assign","no-unsafe-negation",[5357,5376],"\r\n                ."]