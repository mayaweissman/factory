[{"C:\\Users\\Maya\\Documents\\GitHub\\factory\\src\\index.tsx":"1","C:\\Users\\Maya\\Documents\\GitHub\\factory\\src\\reportWebVitals.ts":"2","C:\\Users\\Maya\\Documents\\GitHub\\factory\\src\\components\\layout\\layout.tsx":"3","C:\\Users\\Maya\\Documents\\GitHub\\factory\\src\\components\\auth\\auth.tsx":"4","C:\\Users\\Maya\\Documents\\GitHub\\factory\\src\\components\\home\\home.tsx":"5","C:\\Users\\Maya\\Documents\\GitHub\\factory\\src\\components\\report\\report.tsx":"6","C:\\Users\\Maya\\Documents\\GitHub\\factory\\src\\components\\page-not-found\\page-not-found.tsx":"7","C:\\Users\\Maya\\Documents\\GitHub\\factory\\src\\components\\report-maker\\report-maker.tsx":"8","C:\\Users\\Maya\\Documents\\GitHub\\factory\\src\\redux\\store.js":"9","C:\\Users\\Maya\\Documents\\GitHub\\factory\\src\\redux\\actionType.ts":"10","C:\\Users\\Maya\\Documents\\GitHub\\factory\\src\\models\\reportModel.ts":"11","C:\\Users\\Maya\\Documents\\GitHub\\factory\\src\\data\\report.ts":"12","C:\\Users\\Maya\\Documents\\GitHub\\factory\\src\\components\\all-clients\\all-clients.tsx":"13","C:\\Users\\Maya\\Documents\\GitHub\\factory\\src\\components\\top-clients-nav\\top-clients-nav.tsx":"14","C:\\Users\\Maya\\Documents\\GitHub\\factory\\src\\components\\campaigns\\campaigns.tsx":"15","C:\\Users\\Maya\\Documents\\GitHub\\factory\\src\\components\\filtering-side-menu\\filtering-side-menu.tsx":"16","C:\\Users\\Maya\\Documents\\GitHub\\factory\\src\\components\\top-campaigns-nav\\top-campaigns-nav.tsx":"17","C:\\Users\\Maya\\Documents\\GitHub\\factory\\src\\components\\link-pop-up\\link-pop-up.tsx":"18","C:\\Users\\Maya\\Documents\\GitHub\\factory\\src\\components\\top-report-nav\\top-report-nav.tsx":"19","C:\\Users\\Maya\\Documents\\GitHub\\factory\\src\\redux\\appState.ts":"20","C:\\Users\\Maya\\Documents\\GitHub\\factory\\src\\redux\\reducer.ts":"21","C:\\Users\\Maya\\Documents\\GitHub\\factory\\src\\data\\clients.ts":"22","C:\\Users\\Maya\\Documents\\GitHub\\factory\\src\\models\\campaignModel.ts":"23","C:\\Users\\Maya\\Documents\\GitHub\\factory\\src\\data\\campaigns.ts":"24","C:\\Users\\Maya\\Documents\\GitHub\\factory\\src\\models\\productModel.ts":"25","C:\\Users\\Maya\\Documents\\GitHub\\factory\\src\\data\\products-types.ts":"26","C:\\Users\\Maya\\Documents\\GitHub\\factory\\src\\data\\products.ts":"27","C:\\Users\\Maya\\Documents\\GitHub\\factory\\src\\components\\product-pop-up\\product-pop-up.tsx":"28","C:\\Users\\Maya\\Documents\\GitHub\\factory\\src\\config.ts":"29","C:\\Users\\Maya\\Documents\\GitHub\\factory\\src\\components\\add-client-pop-up\\add-client-pop-up.tsx":"30","C:\\Users\\Maya\\Documents\\GitHub\\factory\\src\\redux\\middleware.ts":"31"},{"size":333,"mtime":1610434431335,"results":"32","hashOfConfig":"33"},{"size":440,"mtime":1610434431338,"results":"34","hashOfConfig":"33"},{"size":1128,"mtime":1610607916611,"results":"35","hashOfConfig":"33"},{"size":3372,"mtime":1610543660888,"results":"36","hashOfConfig":"33"},{"size":1614,"mtime":1610543701615,"results":"37","hashOfConfig":"33"},{"size":2513,"mtime":1610553135156,"results":"38","hashOfConfig":"33"},{"size":298,"mtime":1610553161562,"results":"39","hashOfConfig":"33"},{"size":1966,"mtime":1610552829969,"results":"40","hashOfConfig":"33"},{"size":291,"mtime":1610615089055,"results":"41","hashOfConfig":"33"},{"size":542,"mtime":1610617420415,"results":"42","hashOfConfig":"33"},{"size":487,"mtime":1610550772873,"results":"43","hashOfConfig":"33"},{"size":45978,"mtime":1610551263603,"results":"44","hashOfConfig":"33"},{"size":6436,"mtime":1610641065635,"results":"45","hashOfConfig":"33"},{"size":5123,"mtime":1610538602933,"results":"46","hashOfConfig":"33"},{"size":11361,"mtime":1610640255644,"results":"47","hashOfConfig":"33"},{"size":7861,"mtime":1610640495224,"results":"48","hashOfConfig":"33"},{"size":8099,"mtime":1610625656237,"results":"49","hashOfConfig":"33"},{"size":2910,"mtime":1610609255831,"results":"50","hashOfConfig":"33"},{"size":6450,"mtime":1610625690938,"results":"51","hashOfConfig":"33"},{"size":1692,"mtime":1610632124071,"results":"52","hashOfConfig":"33"},{"size":3546,"mtime":1610641081535,"results":"53","hashOfConfig":"33"},{"size":46723,"mtime":1610630270803,"results":"54","hashOfConfig":"33"},{"size":284,"mtime":1610632057418,"results":"55","hashOfConfig":"33"},{"size":1412,"mtime":1610639015009,"results":"56","hashOfConfig":"33"},{"size":597,"mtime":1610626728155,"results":"57","hashOfConfig":"33"},{"size":969,"mtime":1610446351855,"results":"58","hashOfConfig":"33"},{"size":262518,"mtime":1610631661062,"results":"59","hashOfConfig":"33"},{"size":3582,"mtime":1610627189649,"results":"60","hashOfConfig":"33"},{"size":344,"mtime":1610607201193,"results":"61","hashOfConfig":"33"},{"size":8256,"mtime":1610618089301,"results":"62","hashOfConfig":"33"},{"size":383,"mtime":1610614979770,"results":"63","hashOfConfig":"33"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},"z5uj72",{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"66"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"66"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"94","messages":"95","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"66"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"99","messages":"100","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":1,"source":null},{"filePath":"101","messages":"102","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"66"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"66"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"66"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118","usedDeprecatedRules":"66"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"129","usedDeprecatedRules":"66"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"134","usedDeprecatedRules":"66"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"137","usedDeprecatedRules":"66"},"C:\\Users\\Maya\\Documents\\GitHub\\factory\\src\\index.tsx",[],["138","139"],"C:\\Users\\Maya\\Documents\\GitHub\\factory\\src\\reportWebVitals.ts",[],"C:\\Users\\Maya\\Documents\\GitHub\\factory\\src\\components\\layout\\layout.tsx",[],"C:\\Users\\Maya\\Documents\\GitHub\\factory\\src\\components\\auth\\auth.tsx",["140","141"],"import React, { ChangeEvent, Component } from \"react\";\r\nimport { Unsubscribe } from \"redux\";\r\nimport { ActionType } from \"../../redux/actionType\";\r\nimport { store } from \"../../redux/store\";\r\nimport \"./auth.css\";\r\n\r\ninterface AuthState {\r\n    phoneNumber: string,\r\n    code: string,\r\n    message: string,\r\n    isPhoneLegal: boolean,\r\n    isCodeLegal: boolean,\r\n    isDisplayForBtn: boolean\r\n}\r\n\r\nexport class Auth extends Component<any, AuthState> {\r\n\r\n\r\n    public constructor(props: any) {\r\n        super(props);\r\n        this.state = {\r\n            phoneNumber: \"\",\r\n            code: \"\",\r\n            message: \"\",\r\n            isPhoneLegal: false,\r\n            isCodeLegal: false,\r\n            isDisplayForBtn: false\r\n        }\r\n    }\r\n\r\n    public setPhoneNumber = (args: ChangeEvent<HTMLInputElement>) => {\r\n        const phoneNumber = args.target.value;\r\n        this.setState({ phoneNumber });\r\n    }\r\n\r\n    public setCode = (args: ChangeEvent<HTMLInputElement>) => {\r\n        const code = args.target.value;\r\n        this.setState({ isDisplayForBtn: true });\r\n        this.setState({ code });\r\n    }\r\n\r\n\r\n    //Demo functions\r\n    public authPhoneNumber = () => {\r\n        const demoAnswer = \"0501234567\";\r\n\r\n        let message = \"\";\r\n        let isPhoneLegal = false;\r\n\r\n        if (this.state.phoneNumber === demoAnswer) {\r\n            message = \"שלחנו לך הודעה עם קוד בן 4 ספרות\";\r\n            isPhoneLegal = true;\r\n        }\r\n        else {\r\n            message = \"מספר טלפון אינו מזוהה\";\r\n        }\r\n        this.setState({ message })\r\n        this.setState({ isPhoneLegal })\r\n    }\r\n\r\n    public authCode = () => {\r\n        const demoCode = \"1234\";\r\n\r\n        let message = \"\";\r\n        let isCodeLegal = false;\r\n\r\n        if (this.state.code === demoCode) {\r\n            message = \"ברוכים הבאים\";\r\n            isCodeLegal = true;\r\n            store.dispatch({ type: ActionType.changeAuth });\r\n            this.props.history.push('/home');\r\n        }\r\n        else {\r\n            message = \"קוד אינו חוקי\";\r\n        }\r\n        this.setState({ message })\r\n        this.setState({ isCodeLegal })\r\n    }\r\n\r\n    public render() {\r\n        return (\r\n            <div className=\"auth\">\r\n\r\n                <div className=\"auth-box\">\r\n\r\n                    <img className=\"auth-logo\" src=\"/assets/images/logo_factory.svg\" />\r\n                    <h1>אימות</h1>\r\n\r\n                    <button onClick={this.authPhoneNumber} className=\"send-btn\">שלח</button>\r\n                    <input onChange={this.setPhoneNumber} placeholder=\"אנא הזן מספר טלפון\" type=\"tel\" className=\"phone-box\" />\r\n                    <br />\r\n\r\n                    <input onChange={this.setCode} style={{ display: this.state.isPhoneLegal ? \"inline-block\" : \"none\" }} placeholder=\"אנא הזן את הקוד שנשלח\" type=\"text\" className=\"code-box\" />\r\n                    <br />\r\n                    {this.state.isDisplayForBtn &&\r\n                        <button onClick={this.authCode} style={{ display: this.state.isPhoneLegal ? \"inline-block\" : \"none\" }} className=\"auth-code-btn\">אמת</button>\r\n                    }\r\n                    <br />\r\n\r\n                    <span className=\"message\">{this.state.message}</span>\r\n\r\n                </div>\r\n\r\n\r\n            </div>\r\n\r\n        )\r\n    }\r\n}","C:\\Users\\Maya\\Documents\\GitHub\\factory\\src\\components\\home\\home.tsx",[],"C:\\Users\\Maya\\Documents\\GitHub\\factory\\src\\components\\report\\report.tsx",["142"],"import React, { Component } from \"react\";\r\nimport { ReportModel } from \"../../models/reportModel\";\r\nimport \"./report.css\";\r\nimport { getAllReports } from \"../../data/report\";\r\nimport { Campaigns } from \"../campaigns/campaigns\";\r\nimport { TopCampaignsNav } from \"../top-campaigns-nav/top-campaigns-nav\";\r\nimport { store } from \"../../redux/store\";\r\nimport { Unsubscribe } from \"redux\";\r\nimport { FilteringSideMenu } from \"../filtering-side-menu/filtering-side-menu\";\r\nimport { LinkPopUp } from \"../link-pop-up/link-pop-up\";\r\nimport { TopReportNav } from \"../top-report-nav/top-report-nav\";\r\nimport { ActionType } from \"../../redux/actionType\";\r\n\r\ninterface ReportState {\r\n    report: ReportModel,\r\n    isScroll: boolean,\r\n    display: boolean\r\n}\r\n\r\nexport class Report extends Component<any, ReportState>{\r\n\r\n    private unsubscribeStore: Unsubscribe;\r\n\r\n    public constructor(props: any) {\r\n        super(props);\r\n        this.state = {\r\n            report: new ReportModel(),\r\n            isScroll: false,\r\n            display: store.getState().isLinksPopUpShow\r\n        }\r\n\r\n\r\n        this.unsubscribeStore = store.subscribe(() => {\r\n            const display = store.getState().isLinksPopUpShow;\r\n            this.setState({ display });\r\n        })\r\n    }\r\n\r\n    public componentDidMount() {\r\n        const uuid = this.props.match.params.uuid;\r\n        const report: ReportModel = getAllReports().filter(r => r.uuid === uuid)[0];\r\n        if(!report){\r\n            this.props.history.push(\"/page-not-found\");\r\n            return;\r\n        }\r\n        this.setState({ report });\r\n\r\n        store.dispatch({ type: ActionType.updateSelectedClients, payLoad: report.clients });\r\n        store.dispatch({ type: ActionType.getSelectedProducts, payLoad: report.products });\r\n        store.dispatch({ type: ActionType.getSelectedCampaigns, payLoad: report.campaigns });\r\n        console.log(report);\r\n    }\r\n\r\n    public componentWillUnmount(): void {\r\n        this.unsubscribeStore();\r\n    }\r\n\r\n    public render() {\r\n        return (\r\n            <div className=\"report\">\r\n\r\n                <main>\r\n                    <div className=\"header\">\r\n                        <TopReportNav isScroll={this.state.isScroll} />\r\n                    </div>\r\n                    <Campaigns />\r\n                </main>\r\n\r\n                <aside>\r\n                    <FilteringSideMenu isOnReport={true} />\r\n                </aside>\r\n                {this.state.display && <LinkPopUp />}\r\n\r\n            </div>\r\n        )\r\n    }\r\n}","C:\\Users\\Maya\\Documents\\GitHub\\factory\\src\\components\\page-not-found\\page-not-found.tsx",[],"C:\\Users\\Maya\\Documents\\GitHub\\factory\\src\\components\\report-maker\\report-maker.tsx",[],"C:\\Users\\Maya\\Documents\\GitHub\\factory\\src\\redux\\store.js",[],["143","144"],"C:\\Users\\Maya\\Documents\\GitHub\\factory\\src\\redux\\actionType.ts",[],"C:\\Users\\Maya\\Documents\\GitHub\\factory\\src\\models\\reportModel.ts",[],"C:\\Users\\Maya\\Documents\\GitHub\\factory\\src\\data\\report.ts",[],"C:\\Users\\Maya\\Documents\\GitHub\\factory\\src\\components\\all-clients\\all-clients.tsx",["145","146","147","148","149"],"C:\\Users\\Maya\\Documents\\GitHub\\factory\\src\\components\\top-clients-nav\\top-clients-nav.tsx",["150","151","152","153","154"],"import React, { Component, useRef } from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { Unsubscribe } from \"redux\";\r\nimport { ClientModel } from \"../../models/clientModel\";\r\nimport { ActionType } from \"../../redux/actionType\";\r\nimport { store } from \"../../redux/store\";\r\nimport { AllClients } from \"../all-clients/all-clients\";\r\nimport \"./top-clients-nav.css\";\r\n\r\ninterface TopClientsNavProps {\r\n    isScroll: boolean\r\n}\r\n\r\ninterface TopClientsNavState {\r\n    selectedClients: ClientModel[],\r\n    isButtonsScrolled: boolean,\r\n}\r\n\r\nexport class TopClientsNav extends Component<TopClientsNavProps, TopClientsNavState>{\r\n\r\n    private unsubscribeStore: Unsubscribe;\r\n    public buttonsRef = React.createRef<HTMLDivElement>();\r\n    public topNavRef = React.createRef<HTMLDivElement>();\r\n\r\n\r\n    public constructor(props: TopClientsNavProps) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            selectedClients: store.getState().selectedClients,\r\n            isButtonsScrolled: false\r\n        }\r\n        this.unsubscribeStore = store.subscribe(() => {\r\n            const selectedClients = store.getState().selectedClients;\r\n            this.setState({ selectedClients });\r\n        })\r\n    }\r\n\r\n    componentDidMount() {\r\n        const topNavWidth: number = this.topNavRef.current?.clientWidth as number;\r\n        const maxWidth = topNavWidth / 100 * 60;\r\n\r\n        window.addEventListener(\"click\", () => {\r\n            const buttonsWidth = this.buttonsRef.current?.scrollWidth as number;\r\n            if (buttonsWidth > maxWidth) {\r\n                this.setState({ isButtonsScrolled: true });\r\n            }\r\n            else{\r\n                this.setState({ isButtonsScrolled: false });\r\n            }\r\n        })\r\n    }\r\n\r\n\r\n    public componentWillUnmount(): void {\r\n        this.unsubscribeStore();\r\n    }\r\n\r\n    public scrollToRight = () => {\r\n        this.buttonsRef.current?.scrollTo({\r\n            top: 0,\r\n            left: 0,\r\n            behavior: \"smooth\"\r\n        });\r\n    }\r\n\r\n    public scrollToLeft = () => {\r\n        const buttonsWidth = this.buttonsRef.current?.scrollWidth as number;\r\n        this.buttonsRef.current?.scrollTo({\r\n            top: 0,\r\n            left: -buttonsWidth,\r\n            behavior: \"smooth\"\r\n        });\r\n    }\r\n\r\n    public removeAllClients = () => {\r\n        this.setState({ selectedClients: [] })\r\n        store.dispatch({ type: ActionType.unselectAllClients });\r\n    }\r\n\r\n    public removeClient = (clientId: number) => (event: any) => {\r\n        const selectedClients = [...this.state.selectedClients];\r\n        const index = selectedClients.findIndex(c => c.clientId === clientId);\r\n        selectedClients.splice(index, 1);\r\n        this.setState({ selectedClients });\r\n\r\n        store.dispatch({ type: ActionType.removeClient, payLoad: clientId });\r\n    }\r\n\r\n    public render() {\r\n        return (\r\n            <div ref={this.topNavRef} className=\"top-companies-nav\">\r\n                <button className=\"no-selected-button\" style={{ display: this.state.selectedClients.length === 0 ? \"block\" : \"none\" }}>\r\n                    +\r\n                </button>\r\n                <div ref={this.buttonsRef} className=\"buttons\">\r\n                    <div style={{ display: this.state.isButtonsScrolled ? \"block\" : \"none\" }}\r\n                        className=\"start-of-buttons-section\" onMouseEnter={this.scrollToRight}></div>\r\n\r\n                    {this.state?.selectedClients.map(client =>\r\n                        <button className=\"client-btn\">\r\n                            <button className=\"remove-btn\" onClick={this.removeClient(client.clientId as number)}>\r\n                                <span>&#10006;</span>\r\n                            </button>\r\n                            <span className=\"inside-client-btn\">{client.clientName}</span>\r\n                        </button>\r\n                    )}\r\n\r\n                    <div style={{ display: this.state.isButtonsScrolled ? \"block\" : \"none\" }}\r\n                        className=\"end-of-buttons-section\" onMouseEnter={this.scrollToLeft}>\r\n                        <span className=\"more-buttons-icon\">|</span>\r\n                    </div>\r\n                </div>\r\n\r\n\r\n                <div className=\"top-scroll\" style={{ top: this.props.isScroll ? \"6vw\" : 0 }}></div>\r\n                <img src=\"./assets/images/pink_btn_before.svg\" className=\"next-btn-pink\" style={{ display: this.state.selectedClients.length === 0 ? \"block\" : \"none\" }} />\r\n                <NavLink onClick={() => console.log(store.getState().selectedClients)} to=\"/report-maker\" className=\"link-to-report-maker\" exact>\r\n                    <img src=\"./assets/images/pink_btn_after.svg\" className=\"next-btn-pink\" style={{ display: this.state.selectedClients.length > 0 ? \"block\" : \"none\" }} />\r\n                </NavLink>\r\n                <div className=\"other-buttons\">\r\n                    <span className=\"remove-all\" onClick={this.removeAllClients}>הסר הכל</span>\r\n                </div>\r\n\r\n                <img className=\"logo\" src=\"./assets/images/logo_factory.svg\" />\r\n\r\n            </div>\r\n\r\n        )\r\n    }\r\n}","C:\\Users\\Maya\\Documents\\GitHub\\factory\\src\\components\\campaigns\\campaigns.tsx",["155","156","157","158","159","160","161","162","163","164","165"],"C:\\Users\\Maya\\Documents\\GitHub\\factory\\src\\components\\filtering-side-menu\\filtering-side-menu.tsx",["166","167","168","169"],"C:\\Users\\Maya\\Documents\\GitHub\\factory\\src\\components\\top-campaigns-nav\\top-campaigns-nav.tsx",["170","171","172","173"],"import React, { Component, useRef } from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { Unsubscribe } from \"redux\";\r\nimport { CampaignModel } from \"../../models/campaignModel\";\r\nimport { ClientModel } from \"../../models/clientModel\";\r\nimport { ProductModel } from \"../../models/productModel\";\r\nimport { ProductsType } from \"../../models/productsTypeModel\";\r\nimport { ActionType } from \"../../redux/actionType\";\r\nimport { store } from \"../../redux/store\";\r\nimport { AddClientPopUp } from \"../add-client-pop-up/add-client-pop-up\";\r\nimport { AllClients } from \"../all-clients/all-clients\";\r\nimport \"./top-campaigns-nav.css\";\r\n\r\ninterface TopCampaignsNavProps {\r\n    isScroll: boolean\r\n}\r\n\r\ninterface TopCampaignsNavState {\r\n    selectedClients: ClientModel[],\r\n    clientsToDisplay: ClientModel[],\r\n    isButtonsScrolled: boolean,\r\n    display: boolean,\r\n    filteringBefore: {\r\n        beforeCampaignsToDisplay: CampaignModel[],\r\n        beforeProductsToDisplay: ProductModel[]\r\n\r\n    }\r\n}\r\n\r\nexport class TopCampaignsNav extends Component<TopCampaignsNavProps, TopCampaignsNavState>{\r\n\r\n    private unsubscribeStore: Unsubscribe;\r\n    public buttonsRef = React.createRef<HTMLDivElement>();\r\n    public topNavRef = React.createRef<HTMLDivElement>();\r\n\r\n\r\n    public constructor(props: TopCampaignsNavProps) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            selectedClients: store.getState().selectedClients,\r\n            clientsToDisplay: store.getState().clientsToDisplay,\r\n            isButtonsScrolled: false,\r\n            display: store.getState().isPopUpShow,\r\n            filteringBefore: {\r\n                beforeCampaignsToDisplay: [],\r\n                beforeProductsToDisplay: []\r\n            }\r\n        }\r\n        this.unsubscribeStore = store.subscribe(() => {\r\n            const selectedClients = store.getState().selectedClients;\r\n            const display = store.getState().isPopUpShow;\r\n            const clientsToDisplay = store.getState().clientsToDisplay;\r\n            this.setState({ selectedClients });\r\n            this.setState({ display });\r\n            this.setState({ clientsToDisplay });\r\n        })\r\n    }\r\n\r\n    componentDidMount() {\r\n        const topNavWidth: number = this.topNavRef.current?.clientWidth as number;\r\n        const maxWidth = topNavWidth / 100 * 70;\r\n\r\n        window.addEventListener(\"click\", () => {\r\n            const buttonsWidth = this.buttonsRef.current?.scrollWidth as number;\r\n            if (buttonsWidth > maxWidth) {\r\n                this.setState({ isButtonsScrolled: true });\r\n            }\r\n            else {\r\n                this.setState({ isButtonsScrolled: false });\r\n            }\r\n        })\r\n    }\r\n\r\n    public filterByClientId = (clientId: number) => (event: any) => {\r\n\r\n        const campaignsToDisplay: CampaignModel[] = [];\r\n\r\n        const filteringBefore = { ...this.state.filteringBefore };\r\n        filteringBefore.beforeCampaignsToDisplay = store.getState().campaignsToDisplay;\r\n        filteringBefore.beforeProductsToDisplay = store.getState().productsToDisplay;\r\n        this.setState({ filteringBefore });\r\n\r\n        const allSelectedCampaigns = store.getState().selectedCampaigns;\r\n        for (const c of allSelectedCampaigns) {\r\n            if (c.clientId === clientId) {\r\n                campaignsToDisplay.push(c);\r\n            }\r\n        }\r\n        store.dispatch({ type: ActionType.updateCampaignsToDisplay, payLoad: campaignsToDisplay });\r\n     \r\n\r\n        const clientsToDisplay: ClientModel[] = [];\r\n        const allSelectedClients = store.getState().selectedClients;\r\n        for (const c of allSelectedClients) {\r\n            if (c.clientId === clientId) {\r\n                clientsToDisplay.push(c);\r\n            }\r\n        }\r\n\r\n        store.dispatch({ type: ActionType.updateClientsToDisplay, payLoad: clientsToDisplay });\r\n    }\r\n\r\n\r\n    public componentWillUnmount(): void {\r\n        this.unsubscribeStore();\r\n    }\r\n\r\n    public scrollToRight = () => {\r\n        this.buttonsRef.current?.scrollTo({\r\n            top: 0,\r\n            left: 0,\r\n            behavior: \"smooth\"\r\n        });\r\n    }\r\n\r\n    public scrollToLeft = () => {\r\n        const buttonsWidth = this.buttonsRef.current?.scrollWidth as number;\r\n        this.buttonsRef.current?.scrollTo({\r\n            top: 0,\r\n            left: -buttonsWidth,\r\n            behavior: \"smooth\"\r\n        });\r\n    }\r\n\r\n\r\n    public removeClient = (clientId: number) => (event: any) => {\r\n\r\n        //Remove from clients in redux\r\n        const selectedClients = [...this.state.selectedClients];\r\n        const index = selectedClients.findIndex(c => c.clientId === clientId);\r\n        selectedClients.splice(index, 1);\r\n        this.setState({ selectedClients });\r\n\r\n        store.dispatch({ type: ActionType.removeClient, payLoad: clientId });\r\n\r\n    }\r\n\r\n    public openPopUp = () => {\r\n        store.dispatch({ type: ActionType.changeDisplayForPopUp, payLoad: false });\r\n    }\r\n\r\n    public resetClientsToDisplay = () => {\r\n        store.dispatch({ type: ActionType.updateClientsToDisplay, payLoad: [] });\r\n        store.dispatch({ type: ActionType.updateCampaignsToDisplay, payLoad: this.state.filteringBefore.beforeCampaignsToDisplay });\r\n        store.dispatch({ type: ActionType.updateProductsToDisplay, payLoad: this.state.filteringBefore.beforeProductsToDisplay });\r\n    }\r\n\r\n\r\n    public render() {\r\n        return (\r\n            <div ref={this.topNavRef} className=\"top-campaigns-nav\">\r\n                <div ref={this.buttonsRef} className=\"campaigns-buttons\">\r\n                    <div style={{ display: this.state.isButtonsScrolled ? \"block\" : \"none\" }}\r\n                        className=\"campaigns-start-of-buttons-section\" onMouseEnter={this.scrollToRight}></div>\r\n\r\n\r\n\r\n                    {this.state.clientsToDisplay.length === 0 && this.state?.selectedClients.map(client =>\r\n                        <button className=\"campaigns-client-btn\" onClick={this.filterByClientId(client.clientId as number)}>\r\n                            <button className=\"campaigns-remove-btn\" onClick={this.removeClient(client.clientId as number)}>\r\n                                <span>&#10006;</span>\r\n                            </button>\r\n                            <span className=\"campaigns-inside-client-btn\">{client.clientName}</span>\r\n                        </button>\r\n                    )}\r\n\r\n                    {this.state.clientsToDisplay.length > 0 && this.state?.clientsToDisplay.map(client =>\r\n                        <button className=\"campaigns-client-btn\" onClick={this.filterByClientId(client.clientId as number)}>\r\n                            <button className=\"campaigns-remove-btn\" onClick={this.removeClient(client.clientId as number)}>\r\n                                <span>&#10006;</span>\r\n                            </button>\r\n                            <span className=\"campaigns-inside-client-btn\">{client.clientName}</span>\r\n                        </button>\r\n                    )}\r\n\r\n                    <div style={{ display: this.state.isButtonsScrolled ? \"block\" : \"none\" }}\r\n                        className=\"campaigns-end-of-buttons-section\" onMouseEnter={this.scrollToLeft}>\r\n                        <span className=\"campaigns-more-buttons-icon\">|</span>\r\n                    </div>\r\n                </div>\r\n\r\n                {this.state.clientsToDisplay.length === 0 &&\r\n                    <span className=\"add-client-span\" onClick={this.openPopUp}>הוספת לקוח</span>}\r\n\r\n                {this.state.clientsToDisplay.length > 0 &&\r\n                    <span className=\"add-client-span\" onClick={this.resetClientsToDisplay}>כל הלקוחות</span>}\r\n\r\n                <div className=\"campaigns-top-scroll\" style={{ top: this.props.isScroll ? \"6vw\" : 0 }}></div>\r\n\r\n                <NavLink to=\"/home\">\r\n                    <img className=\"campaigns-logo\" src=\"./assets/images/logo_factory.svg\" />\r\n                </NavLink>\r\n\r\n                {this.state.display &&\r\n                    <AddClientPopUp />\r\n                }\r\n\r\n            </div>\r\n\r\n        )\r\n    }\r\n}","C:\\Users\\Maya\\Documents\\GitHub\\factory\\src\\components\\link-pop-up\\link-pop-up.tsx",["174","175"],"import React, { Component } from \"react\";\r\nimport { ActionType } from \"../../redux/actionType\";\r\nimport { store } from \"../../redux/store\";\r\nimport \"./link-pop-up.css\";\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport { Config } from \"../../config\";\r\nimport { config } from \"process\";\r\nimport { ReportModel } from \"../../models/reportModel\";\r\nimport { getAllReports } from \"../../data/report\";\r\nimport axios from \"axios\";\r\n\r\ninterface LinkPopUpState {\r\n    url: string\r\n}\r\nexport class LinkPopUp extends Component<any, LinkPopUpState>{\r\n\r\n    public urlInput = React.createRef<HTMLDivElement>();\r\n\r\n    public linkRef = React.createRef<HTMLInputElement>();\r\n\r\n\r\n    public constructor(props: any) {\r\n        super(props);\r\n        this.state = {\r\n            url: Config.serverUrl + \"/213276a8-8eb2-4710-b97d-9d67e9aeaae9\"\r\n        }\r\n    }\r\n\r\n\r\n    public uuid = () => {\r\n        const hashTable = [\r\n            'a', 'b', 'c', 'd', 'e', 'f',\r\n            '0', '1', '2', '3', '4', '5', '6', '7', '8', '9'\r\n        ]\r\n        let uuid = []\r\n        for (let i = 0; i < 35; i++) {\r\n            if (i === 7 || i === 12 || i === 17 || i === 22) {\r\n                uuid[i] = '-'\r\n            } else {\r\n                uuid[i] = hashTable[Math.floor(Math.random() * hashTable.length - 1)]\r\n            }\r\n        }\r\n        return uuid.join('');\r\n    }\r\n\r\n\r\n    public postToReports = () => {\r\n\r\n        //Made new report\r\n        const report = new ReportModel();\r\n        const allReports = getAllReports();\r\n        report.reportId = allReports.length + 1;\r\n        const uuid: string = this.uuid();\r\n        report.uuid = uuid;\r\n\r\n        //Push new report all selections\r\n        report.clients = store.getState().selectedClients;\r\n        report.campaigns = store.getState().campaignsToDisplay;\r\n        report.products = store.getState().productsToDisplay;\r\n    }\r\n\r\n\r\n    public closePopUp = () => {\r\n        store.dispatch({ type: ActionType.changeDisplayForLinkPopUp });\r\n    }\r\n\r\n    public stopPropagation = (e: any) => {\r\n        e.stopPropagation();\r\n    }\r\n\r\n    public copyToClipboard = () => {\r\n        this.postToReports();\r\n\r\n        this.linkRef.current?.select();\r\n        document.execCommand(\"copy\");\r\n    };\r\n\r\n    public render() {\r\n        return (\r\n            <div className=\"full-screen-link-conatiner\" onClick={this.closePopUp} >\r\n                <div className=\"small-link-conatiner\" onClick={this.stopPropagation}>\r\n                    <button className=\"close-link-pop-up-btn\" onClick={this.closePopUp} ><CloseIcon /></button>\r\n\r\n                    <h2 className=\"link-title\">הלינק לשיתוף</h2>\r\n                    <input ref={this.linkRef} className=\"url-box\" value={this.state.url} />\r\n\r\n                    <button onClick={this.copyToClipboard} className=\"copy-link-btn\">Copy link</button>\r\n\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}","C:\\Users\\Maya\\Documents\\GitHub\\factory\\src\\components\\top-report-nav\\top-report-nav.tsx",["176","177","178","179"],"import React, { Component, useRef } from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { Unsubscribe } from \"redux\";\r\nimport { CampaignModel } from \"../../models/campaignModel\";\r\nimport { ClientModel } from \"../../models/clientModel\";\r\nimport { ProductModel } from \"../../models/productModel\";\r\nimport { ActionType } from \"../../redux/actionType\";\r\nimport { store } from \"../../redux/store\";\r\nimport { AddClientPopUp } from \"../add-client-pop-up/add-client-pop-up\";\r\nimport { AllClients } from \"../all-clients/all-clients\";\r\nimport \"./top-report-nav.css\";\r\n\r\ninterface TopReportNavProps {\r\n    isScroll: boolean\r\n}\r\n\r\ninterface TopReportNavState {\r\n    selectedClients: ClientModel[],\r\n    isButtonsScrolled: boolean,\r\n    display: boolean,\r\n    filteringBefore: {\r\n        beforeCampaignsToDisplay: CampaignModel[],\r\n        beforeProductsToDisplay: ProductModel[]\r\n\r\n    }\r\n}\r\n\r\nexport class TopReportNav extends Component<TopReportNavProps, TopReportNavState>{\r\n\r\n    private unsubscribeStore: Unsubscribe;\r\n    public buttonsRef = React.createRef<HTMLDivElement>();\r\n    public topNavRef = React.createRef<HTMLDivElement>();\r\n\r\n\r\n    public constructor(props: TopReportNavProps) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            selectedClients: store.getState().selectedClients,\r\n            isButtonsScrolled: false,\r\n            display: store.getState().isPopUpShow,\r\n            filteringBefore: {\r\n                beforeCampaignsToDisplay: [],\r\n                beforeProductsToDisplay: []\r\n            }\r\n        }\r\n        this.unsubscribeStore = store.subscribe(() => {\r\n            const selectedClients = store.getState().selectedClients;\r\n            const display = store.getState().isPopUpShow;\r\n            this.setState({ selectedClients });\r\n            this.setState({ display });\r\n        })\r\n    }\r\n\r\n    componentDidMount() {\r\n        const topNavWidth: number = this.topNavRef.current?.clientWidth as number;\r\n        const maxWidth = topNavWidth / 100 * 70;\r\n\r\n        window.addEventListener(\"click\", () => {\r\n            const buttonsWidth = this.buttonsRef.current?.scrollWidth as number;\r\n            if (buttonsWidth > maxWidth) {\r\n                this.setState({ isButtonsScrolled: true });\r\n            }\r\n            else {\r\n                this.setState({ isButtonsScrolled: false });\r\n            }\r\n        })\r\n    }\r\n\r\n    public filterByClientId = (clientId: number) => (event: any) => {\r\n      \r\n        const campaignsToDisplay: CampaignModel[] = [];\r\n\r\n        const filteringBefore = { ...this.state.filteringBefore };\r\n        filteringBefore.beforeCampaignsToDisplay = store.getState().campaignsToDisplay;\r\n        filteringBefore.beforeProductsToDisplay = store.getState().productsToDisplay;\r\n        this.setState({ filteringBefore });\r\n\r\n        const allSelectedCampaigns = store.getState().selectedCampaigns;\r\n        for (const c of allSelectedCampaigns) {\r\n            if (c.clientId === clientId) {\r\n                campaignsToDisplay.push(c);\r\n            }\r\n        }\r\n        store.dispatch({ type: ActionType.updateCampaignsToDisplay, payLoad: campaignsToDisplay });\r\n     \r\n\r\n        const clientsToDisplay: ClientModel[] = [];\r\n        const allSelectedClients = store.getState().selectedClients;\r\n        for (const c of allSelectedClients) {\r\n            if (c.clientId === clientId) {\r\n                clientsToDisplay.push(c);\r\n            }\r\n        }\r\n\r\n        store.dispatch({ type: ActionType.updateClientsToDisplay, payLoad: clientsToDisplay });\r\n    }\r\n\r\n\r\n    public componentWillUnmount(): void {\r\n        this.unsubscribeStore();\r\n    }\r\n\r\n    public scrollToRight = () => {\r\n        this.buttonsRef.current?.scrollTo({\r\n            top: 0,\r\n            left: 0,\r\n            behavior: \"smooth\"\r\n        });\r\n    }\r\n\r\n    public scrollToLeft = () => {\r\n        const buttonsWidth = this.buttonsRef.current?.scrollWidth as number;\r\n        this.buttonsRef.current?.scrollTo({\r\n            top: 0,\r\n            left: -buttonsWidth,\r\n            behavior: \"smooth\"\r\n        });\r\n    }\r\n\r\n\r\n    public openPopUp = () => {\r\n        store.dispatch({ type: ActionType.changeDisplayForPopUp, payLoad: false });\r\n    }\r\n\r\n    public resetClientsToDisplay = () => {\r\n        store.dispatch({ type: ActionType.updateClientsToDisplay, payLoad: [] });\r\n        store.dispatch({ type: ActionType.updateCampaignsToDisplay, payLoad: this.state.filteringBefore.beforeCampaignsToDisplay });\r\n        store.dispatch({ type: ActionType.updateProductsToDisplay, payLoad: this.state.filteringBefore.beforeProductsToDisplay });\r\n    }\r\n\r\n\r\n    public render() {\r\n        return (\r\n            <div ref={this.topNavRef} className=\"top-campaigns-nav-report\">\r\n                <div ref={this.buttonsRef} className=\"campaigns-buttons\">\r\n                    <div style={{ display: this.state.isButtonsScrolled ? \"block\" : \"none\" }}\r\n                        className=\"campaigns-start-of-buttons-section\" onMouseEnter={this.scrollToRight}></div>\r\n\r\n                    <button className=\"campaigns-client-btn\" onClick={this.resetClientsToDisplay}>\r\n                        <button className=\"campaigns-remove-btn\" style={{ opacity: 0 }}>\r\n                            <span>&#10006;</span>\r\n                        </button>\r\n                        <span className=\"campaigns-inside-client-btn\">All</span>\r\n                    </button>\r\n\r\n\r\n                    {this.state?.selectedClients.map(client =>\r\n                        <button className=\"campaigns-client-btn\" onClick={this.filterByClientId(client.clientId as number)}>\r\n                            <span className=\"campaigns-inside-client-btn\">{client.clientName}</span>\r\n                        </button>\r\n                    )}\r\n\r\n                    <div style={{ display: this.state.isButtonsScrolled ? \"block\" : \"none\" }}\r\n                        className=\"campaigns-end-of-buttons-section\" onMouseEnter={this.scrollToLeft}>\r\n                        <span className=\"campaigns-more-buttons-icon\">|</span>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"campaigns-top-scroll\" style={{ top: this.props.isScroll ? \"6vw\" : 0 }}></div>\r\n\r\n                <img className=\"campaigns-logo\" src=\"./assets/images/logo_factory.svg\" />\r\n\r\n                {this.state.display &&\r\n                    <AddClientPopUp />\r\n                }\r\n\r\n            </div>\r\n\r\n        )\r\n    }\r\n}","C:\\Users\\Maya\\Documents\\GitHub\\factory\\src\\redux\\appState.ts",[],"C:\\Users\\Maya\\Documents\\GitHub\\factory\\src\\redux\\reducer.ts",["180"],"C:\\Users\\Maya\\Documents\\GitHub\\factory\\src\\data\\clients.ts",[],"C:\\Users\\Maya\\Documents\\GitHub\\factory\\src\\models\\campaignModel.ts",["181"],"import { ProductModel } from \"./productModel\";\r\n\r\nexport class CampaignModel {\r\n  public constructor(\r\n    public campaignId?: number,\r\n    public clientId?: number,\r\n    public campaignName?: string,\r\n    public lastUpdate?: string,\r\n    public timePassed?: number\r\n\r\n  ) {\r\n  }\r\n}\r\n","C:\\Users\\Maya\\Documents\\GitHub\\factory\\src\\data\\campaigns.ts",[],"C:\\Users\\Maya\\Documents\\GitHub\\factory\\src\\models\\productModel.ts",[],"C:\\Users\\Maya\\Documents\\GitHub\\factory\\src\\data\\products-types.ts",[],"C:\\Users\\Maya\\Documents\\GitHub\\factory\\src\\data\\products.ts",[],"C:\\Users\\Maya\\Documents\\GitHub\\factory\\src\\components\\product-pop-up\\product-pop-up.tsx",["182","183"],"import React, { Component } from \"react\";\r\nimport { ActionType } from \"../../redux/actionType\";\r\nimport { store } from \"../../redux/store\";\r\nimport \"./product-pop-up.css\";\r\nimport { ProductModel } from \"../../models/productModel\";\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport { ProductsType } from \"../../models/productsTypeModel\";\r\nimport { getProductsTypes } from \"../../data/products-types\";\r\nimport { CampaignModel } from \"../../models/campaignModel\";\r\nimport ProgressBar from '@ramonak/react-progress-bar';\r\n\r\n\r\n\r\ninterface ProductPopUpProps {\r\n    product: ProductModel,\r\n    campaign: CampaignModel\r\n}\r\n\r\n\r\nexport class ProductPopUp extends Component<ProductPopUpProps>{\r\n\r\n    public constructor(props: ProductPopUpProps) {\r\n        super(props);\r\n    }\r\n\r\n\r\n    public closePopUp = () => {\r\n        store.dispatch({ type: ActionType.changeDisplayForProductsPopUp });\r\n    }\r\n\r\n    public stopPropagation = (e: any) => {\r\n        e.stopPropagation();\r\n    }\r\n\r\n    public getProductType = (productTypeId: number) => {\r\n        const productType = getProductsTypes().filter(t => t.productsTypeId === productTypeId);\r\n        return productType[0].nameForSingle;\r\n    }\r\n\r\n    public render() {\r\n        return (\r\n            <div className=\"full-screen-product-conatiner\" onClick={this.closePopUp} >\r\n                <div className=\"small-product-conatiner\" onClick={this.stopPropagation}>\r\n\r\n                    <div className=\"left-area\">\r\n                        <div className=\"grid-product\">\r\n                            <img className=\"product-img\" src={this.props.product.images?.img1} />\r\n\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"right-area\">\r\n                        <div className=\"titlesInRightArea\">\r\n                            <div className=\"right-in-titles\">\r\n                                <div className=\"product-rate\">{this.props.product.successRates} %</div>\r\n                            </div>\r\n                            <div className=\"left-in-titles\">\r\n                                <h1 className=\"type-title\">{this.getProductType(this.props.product.productTypeId as number)}</h1>\r\n                                <p className=\"campaign-name-area\">{this.props.campaign.campaignName}</p>\r\n                            </div>\r\n                        </div>\r\n\r\n\r\n                        <div className=\"bars-area\">\r\n                            <p className=\"bar-title\">Best practice media</p>\r\n                            <p className=\"bar-rate\">65 %</p>\r\n                            <ProgressBar height=\"7px\" borderRadius=\"0\" bgcolor=\"#FFDB48\" completed={65} />\r\n                        </div>\r\n\r\n                        <div className=\"bars-area\">\r\n                            <p className=\"bar-title\">Best practice media</p>\r\n                            <p className=\"bar-rate\">95 %</p>\r\n                            <ProgressBar height=\"7px\" borderRadius=\"0\" bgcolor=\"#1CE5A2\" completed={95} />\r\n                        </div>\r\n\r\n                        <div className=\"bars-area\">\r\n                            <p className=\"bar-title\">Best practice media</p>\r\n                            <p className=\"bar-rate\">40 %</p>\r\n                            <ProgressBar height=\"7px\" borderRadius=\"0\" bgcolor=\"#E4002B\" completed={40} />\r\n                        </div>\r\n\r\n                    </div>\r\n                    <button className=\"close-product-pop-up-btn\" onClick={this.closePopUp} ><CloseIcon /></button>\r\n\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}","C:\\Users\\Maya\\Documents\\GitHub\\factory\\src\\config.ts",[],"C:\\Users\\Maya\\Documents\\GitHub\\factory\\src\\components\\add-client-pop-up\\add-client-pop-up.tsx",["184","185","186","187","188"],"import React, { Component } from \"react\";\r\nimport { ClientModel } from \"../../models/clientModel\";\r\nimport { ActionType } from \"../../redux/actionType\";\r\nimport { store } from \"../../redux/store\";\r\nimport \"./add-client-pop-up.css\";\r\nimport { getAllClients } from \"../../data/clients\";\r\nimport { CampaignModel } from \"../../models/campaignModel\";\r\nimport { getAllCampaigns } from \"../../data/campaigns\";\r\nimport { getAllProducts } from \"../../data/products\";\r\nimport { ProductModel } from \"../../models/productModel\";\r\nimport CloseIcon from '@material-ui/icons/Close';\r\n\r\ninterface AddClientPopUpState {\r\n    allClients: ClientModel[],\r\n    companies: string[],\r\n    clientsToAdd: ClientModel[]\r\n}\r\n\r\nexport class AddClientPopUp extends Component<any, AddClientPopUpState>{\r\n\r\n    private companies: string[] = [];\r\n\r\n    public constructor(props: any) {\r\n        super(props);\r\n        this.state = {\r\n            allClients: store.getState().allClients,\r\n            companies: [],\r\n            clientsToAdd: []\r\n        }\r\n    }\r\n\r\n    public closePopUp = () => {\r\n        store.dispatch({ type: ActionType.changeDisplayForPopUp, payLoad: true });\r\n    }\r\n\r\n    public componentDidMount() {\r\n        const allClients = getAllClients();\r\n        this.setState({ allClients });\r\n\r\n        let companies: string[] = [];\r\n        allClients.map(client => {\r\n            const duplicate = companies.find(c => c === client.company);\r\n            if (!duplicate) {\r\n                companies.push(client.company);\r\n            }\r\n        })\r\n        this.setState({ companies });\r\n    }\r\n\r\n    public stopPropagation = (e: any) => {\r\n        e.stopPropagation();\r\n    }\r\n\r\n    public addClient = (client: ClientModel) => (event: any) => {\r\n        const clientsToAdd = [...this.state.clientsToAdd];\r\n        for (const c of clientsToAdd) {\r\n            if (c.clientId === client.clientId) {\r\n                const index = clientsToAdd.indexOf(c);\r\n                clientsToAdd.splice(index, 1);\r\n                this.setState({ clientsToAdd });\r\n                return;\r\n            }\r\n        }\r\n\r\n        clientsToAdd.push(client);\r\n        this.setState({ clientsToAdd });\r\n\r\n    }\r\n\r\n    public isSelcected = (clientId: number) => {\r\n        for (const c of this.state.clientsToAdd) {\r\n            if (c.clientId === clientId) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    public addClientsToReport = () => {\r\n        const selectedClients = store.getState().selectedClients;\r\n        for (const c of this.state.clientsToAdd) {\r\n            selectedClients.push(c);\r\n        }\r\n        store.dispatch({ type: ActionType.updateSelectedClients, payLoad: selectedClients });\r\n        store.dispatch({ type: ActionType.updateClientsToDisplay, payLoad: [] });\r\n\r\n        const selectedCampaigns: CampaignModel[] = store.getState().selectedCampaigns;\r\n        this.state.clientsToAdd.map(client => {\r\n            getAllCampaigns().map(campaign => {\r\n                if (campaign.clientId === client.clientId) {\r\n                    selectedCampaigns.push(campaign);\r\n                }\r\n            })\r\n        })\r\n\r\n        store.dispatch({ type: ActionType.getSelectedCampaigns, payLoad: selectedCampaigns });\r\n\r\n        const selectedProducts: ProductModel[] = store.getState().selectedProducts;\r\n        this.state.clientsToAdd.map(client => {\r\n            getAllProducts().map(product => {\r\n                if (product.clientId === client.clientId) {\r\n                    selectedProducts.push(product);\r\n\r\n                }\r\n            })\r\n        })\r\n        store.dispatch({ type: ActionType.getSelectedProducts, payLoad: selectedProducts });\r\n\r\n        this.closePopUp();\r\n    }\r\n\r\n    public isExist = (clientId: number) => {\r\n        const selectedClients = [...store.getState().selectedClients];\r\n        for(const c of selectedClients){\r\n            if(c.clientId === clientId){\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    public render() {\r\n        return (\r\n            <div className=\"full-screen-conatiner\" onClick={this.closePopUp}>\r\n                <div className=\"small-conatiner\" onClick={this.stopPropagation}>\r\n                    <button className=\"close-pop-up-btn\" onClick={this.closePopUp} ><CloseIcon/></button>\r\n                    <div className=\"clients-in-pop-up\">\r\n                        {this.state.companies?.map(company =>\r\n                            <div className=\"company\">\r\n                                <span className=\"company-name\">לקוחות {company}</span>\r\n                                <div className=\"client-in-pop-up\">\r\n                                    {this.state.allClients?.map(client =>\r\n                                        client.company === company &&\r\n                                        <button style={{\r\n                                            backgroundColor: this.isSelcected(client.clientId as number) ? \"black\" : \"\",\r\n                                            color: this.isSelcected(client.clientId as number) ? \"white\" : \"\"\r\n                                        }}\r\n                                            onClick={this.addClient(client)} className=\"pop-up-btn\" \r\n                                            disabled={this.isExist(client.clientId as number)}>\r\n                                            {client.clientName}\r\n                                        </button>\r\n\r\n                                    )}\r\n                                    <button className=\"pop-up-btn\">\r\n                                        Some company\r\n                                        </button>\r\n                                    <button className=\"pop-up-btn\">\r\n                                        Some\r\n                                        </button>\r\n                                    <button className=\"pop-up-btn\">\r\n                                        Some company\r\n                                        </button>\r\n                                    <button className=\"pop-up-btn\">\r\n                                        Some\r\n                                        </button>\r\n                                    <button className=\"pop-up-btn\">\r\n                                        Some company\r\n                                        </button>\r\n                                    <button className=\"pop-up-btn\">\r\n                                        Some\r\n                                        </button>\r\n                                    <button className=\"pop-up-btn\">\r\n                                        Some company\r\n                                        </button>\r\n                                    <button className=\"pop-up-btn\">\r\n                                        Some company\r\n                                        </button>\r\n                                    <button className=\"pop-up-btn\">\r\n                                        Some\r\n                                        </button>\r\n                                    <button className=\"pop-up-btn\">\r\n                                        Some company\r\n                                        </button>\r\n                                    <button className=\"pop-up-btn\">\r\n                                        Some\r\n                                        </button>\r\n                                    <button className=\"pop-up-btn\">\r\n                                        Some company\r\n                                        </button>\r\n                                    <button className=\"pop-up-btn\">\r\n                                        Some\r\n                                        </button>\r\n                                    <button className=\"pop-up-btn\">\r\n                                        Some company\r\n                                        </button>\r\n\r\n                                </div>\r\n                            </div>\r\n                        )}\r\n                    </div>\r\n                    <button onClick={this.addClientsToReport} disabled={this.state.clientsToAdd.length === 0} className=\"add-client-in-pop-up\">הוספה</button>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}","C:\\Users\\Maya\\Documents\\GitHub\\factory\\src\\redux\\middleware.ts",["189","190","191"],"import { Store } from \"redux\";\r\nimport { AppState } from \"./appState\";\r\nimport { Action } from \"./action\";\r\n\r\n// תחביר מקוצר לפונקציה הנ\"ל\r\nexport const saveToSessionStorage = (store: { getState: () => any; }) => (next: (arg0: any) => void) => (action: any) => {\r\n    next(action);\r\n    sessionStorage.setItem(\"AppState\", JSON.stringify(store.getState()));\r\n};\r\n",{"ruleId":"192","replacedBy":"193"},{"ruleId":"194","replacedBy":"195"},{"ruleId":"196","severity":1,"message":"197","line":2,"column":10,"nodeType":"198","messageId":"199","endLine":2,"endColumn":21},{"ruleId":"200","severity":1,"message":"201","line":86,"column":21,"nodeType":"202","endLine":86,"endColumn":88},{"ruleId":"196","severity":1,"message":"203","line":6,"column":10,"nodeType":"198","messageId":"199","endLine":6,"endColumn":25},{"ruleId":"192","replacedBy":"193"},{"ruleId":"194","replacedBy":"195"},{"ruleId":"204","severity":1,"message":"205","line":69,"column":44,"nodeType":"206","messageId":"207","endLine":69,"endColumn":46},{"ruleId":"204","severity":1,"message":"208","line":73,"column":17,"nodeType":"209","messageId":"210","endLine":73,"endColumn":24},{"ruleId":"200","severity":1,"message":"201","line":117,"column":56,"nodeType":"202","endLine":117,"endColumn":116},{"ruleId":"200","severity":1,"message":"201","line":121,"column":25,"nodeType":"202","endLine":121,"endColumn":104},{"ruleId":"200","severity":1,"message":"201","line":136,"column":25,"nodeType":"202","endLine":136,"endColumn":95},{"ruleId":"196","severity":1,"message":"211","line":1,"column":28,"nodeType":"198","messageId":"199","endLine":1,"endColumn":34},{"ruleId":"196","severity":1,"message":"212","line":7,"column":10,"nodeType":"198","messageId":"199","endLine":7,"endColumn":20},{"ruleId":"200","severity":1,"message":"201","line":117,"column":17,"nodeType":"202","endLine":117,"endColumn":172},{"ruleId":"200","severity":1,"message":"201","line":119,"column":21,"nodeType":"202","endLine":119,"endColumn":173},{"ruleId":"200","severity":1,"message":"201","line":125,"column":17,"nodeType":"202","endLine":125,"endColumn":80},{"ruleId":"196","severity":1,"message":"213","line":1,"column":10,"nodeType":"198","messageId":"199","endLine":1,"endColumn":14},{"ruleId":"196","severity":1,"message":"214","line":7,"column":10,"nodeType":"198","messageId":"199","endLine":7,"endColumn":23},{"ruleId":"204","severity":1,"message":"208","line":75,"column":47,"nodeType":"206","messageId":"215","endLine":75,"endColumn":49},{"ruleId":"204","severity":1,"message":"208","line":76,"column":44,"nodeType":"206","messageId":"215","endLine":76,"endColumn":46},{"ruleId":"204","severity":1,"message":"208","line":87,"column":40,"nodeType":"206","messageId":"215","endLine":87,"endColumn":42},{"ruleId":"204","severity":1,"message":"208","line":88,"column":42,"nodeType":"206","messageId":"215","endLine":88,"endColumn":44},{"ruleId":"200","severity":1,"message":"201","line":153,"column":21,"nodeType":"202","endLine":153,"endColumn":113},{"ruleId":"200","severity":1,"message":"201","line":165,"column":37,"nodeType":"202","endLine":165,"endColumn":156},{"ruleId":"200","severity":1,"message":"201","line":179,"column":37,"nodeType":"202","endLine":179,"endColumn":156},{"ruleId":"200","severity":1,"message":"201","line":201,"column":37,"nodeType":"202","endLine":201,"endColumn":157},{"ruleId":"200","severity":1,"message":"201","line":215,"column":37,"nodeType":"202","endLine":215,"endColumn":156},{"ruleId":"196","severity":1,"message":"216","line":11,"column":10,"nodeType":"198","messageId":"199","endLine":11,"endColumn":19},{"ruleId":"196","severity":1,"message":"217","line":12,"column":10,"nodeType":"198","messageId":"199","endLine":12,"endColumn":24},{"ruleId":"196","severity":1,"message":"218","line":13,"column":10,"nodeType":"198","messageId":"199","endLine":13,"endColumn":21},{"ruleId":"219","severity":1,"message":"220","line":91,"column":77,"nodeType":"221","messageId":"222","endLine":91,"endColumn":78,"fix":"223"},{"ruleId":"196","severity":1,"message":"211","line":1,"column":28,"nodeType":"198","messageId":"199","endLine":1,"endColumn":34},{"ruleId":"196","severity":1,"message":"224","line":7,"column":10,"nodeType":"198","messageId":"199","endLine":7,"endColumn":22},{"ruleId":"196","severity":1,"message":"212","line":11,"column":10,"nodeType":"198","messageId":"199","endLine":11,"endColumn":20},{"ruleId":"200","severity":1,"message":"201","line":192,"column":21,"nodeType":"202","endLine":192,"endColumn":94},{"ruleId":"196","severity":1,"message":"225","line":7,"column":10,"nodeType":"198","messageId":"199","endLine":7,"endColumn":16},{"ruleId":"196","severity":1,"message":"226","line":10,"column":8,"nodeType":"198","messageId":"199","endLine":10,"endColumn":13},{"ruleId":"196","severity":1,"message":"211","line":1,"column":28,"nodeType":"198","messageId":"199","endLine":1,"endColumn":34},{"ruleId":"196","severity":1,"message":"227","line":2,"column":10,"nodeType":"198","messageId":"199","endLine":2,"endColumn":17},{"ruleId":"196","severity":1,"message":"212","line":10,"column":10,"nodeType":"198","messageId":"199","endLine":10,"endColumn":20},{"ruleId":"200","severity":1,"message":"201","line":162,"column":17,"nodeType":"202","endLine":162,"endColumn":90},{"ruleId":"196","severity":1,"message":"228","line":4,"column":10,"nodeType":"198","messageId":"199","endLine":4,"endColumn":13},{"ruleId":"196","severity":1,"message":"229","line":1,"column":10,"nodeType":"198","messageId":"199","endLine":1,"endColumn":22},{"ruleId":"196","severity":1,"message":"224","line":7,"column":10,"nodeType":"198","messageId":"199","endLine":7,"endColumn":22},{"ruleId":"200","severity":1,"message":"201","line":47,"column":29,"nodeType":"202","endLine":47,"endColumn":98},{"ruleId":"204","severity":1,"message":"208","line":41,"column":31,"nodeType":"206","messageId":"215","endLine":41,"endColumn":33},{"ruleId":"204","severity":1,"message":"208","line":88,"column":44,"nodeType":"206","messageId":"215","endLine":88,"endColumn":46},{"ruleId":"204","severity":1,"message":"208","line":89,"column":44,"nodeType":"206","messageId":"215","endLine":89,"endColumn":46},{"ruleId":"204","severity":1,"message":"208","line":99,"column":44,"nodeType":"206","messageId":"215","endLine":99,"endColumn":46},{"ruleId":"204","severity":1,"message":"208","line":100,"column":42,"nodeType":"206","messageId":"215","endLine":100,"endColumn":44},{"ruleId":"196","severity":1,"message":"230","line":1,"column":10,"nodeType":"198","messageId":"199","endLine":1,"endColumn":15},{"ruleId":"196","severity":1,"message":"231","line":2,"column":10,"nodeType":"198","messageId":"199","endLine":2,"endColumn":18},{"ruleId":"196","severity":1,"message":"232","line":3,"column":10,"nodeType":"198","messageId":"199","endLine":3,"endColumn":16},"no-native-reassign",["233"],"no-negated-in-lhs",["234"],"@typescript-eslint/no-unused-vars","'Unsubscribe' is defined but never used.","Identifier","unusedVar","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'TopCampaignsNav' is defined but never used.","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","Array.prototype.map() expects a return value from arrow function.","ReturnStatement","expectedReturnValue","'useRef' is defined but never used.","'AllClients' is defined but never used.","'exec' is defined but never used.","'getAllClients' is defined but never used.","expectedInside","'LinkPopUp' is defined but never used.","'AddClientPopUp' is defined but never used.","'ReportModel' is defined but never used.","dot-location","Expected dot to be on same line as property.","MemberExpression","expectedDotBeforeProperty",{"range":"235","text":"236"},"'ProductsType' is defined but never used.","'config' is defined but never used.","'axios' is defined but never used.","'NavLink' is defined but never used.","'act' is defined but never used.","'ProductModel' is defined but never used.","'Store' is defined but never used.","'AppState' is defined but never used.","'Action' is defined but never used.","no-global-assign","no-unsafe-negation",[3935,3954],"\r\n                ."]