[{"C:\\Users\\USER\\Documents\\GitHub\\factory\\src\\index.tsx":"1","C:\\Users\\USER\\Documents\\GitHub\\factory\\src\\reportWebVitals.ts":"2","C:\\Users\\USER\\Documents\\GitHub\\factory\\src\\components\\layout\\layout.tsx":"3","C:\\Users\\USER\\Documents\\GitHub\\factory\\src\\components\\home\\home.tsx":"4","C:\\Users\\USER\\Documents\\GitHub\\factory\\src\\data\\clients.ts":"5","C:\\Users\\USER\\Documents\\GitHub\\factory\\src\\components\\all-clients\\all-clients.tsx":"6","C:\\Users\\USER\\Documents\\GitHub\\factory\\src\\redux\\store.js":"7","C:\\Users\\USER\\Documents\\GitHub\\factory\\src\\redux\\reducer.ts":"8","C:\\Users\\USER\\Documents\\GitHub\\factory\\src\\redux\\appState.ts":"9","C:\\Users\\USER\\Documents\\GitHub\\factory\\src\\redux\\actionType.ts":"10","C:\\Users\\USER\\Documents\\GitHub\\factory\\src\\components\\report-maker\\report-maker.tsx":"11","C:\\Users\\USER\\Documents\\GitHub\\factory\\src\\components\\top-clients-nav\\top-clients-nav.tsx":"12","C:\\Users\\USER\\Documents\\GitHub\\factory\\src\\components\\filtering-side-menu\\filtering-side-menu.tsx":"13","C:\\Users\\USER\\Documents\\GitHub\\factory\\src\\components\\campaigns\\campaigns.tsx":"14","C:\\Users\\USER\\Documents\\GitHub\\factory\\src\\components\\top-campaigns-nav\\top-campaigns-nav.tsx":"15"},{"size":333,"mtime":1610284375185,"results":"16","hashOfConfig":"17"},{"size":440,"mtime":1610214539392,"results":"18","hashOfConfig":"17"},{"size":758,"mtime":1610356947393,"results":"19","hashOfConfig":"17"},{"size":996,"mtime":1610357678082,"results":"20","hashOfConfig":"17"},{"size":311019,"mtime":1610395351945,"results":"21","hashOfConfig":"17"},{"size":6261,"mtime":1610388055694,"results":"22","hashOfConfig":"17"},{"size":179,"mtime":1610263798482,"results":"23","hashOfConfig":"17"},{"size":1060,"mtime":1610398697526,"results":"24","hashOfConfig":"17"},{"size":253,"mtime":1610398735211,"results":"25","hashOfConfig":"17"},{"size":167,"mtime":1610398725865,"results":"26","hashOfConfig":"17"},{"size":1509,"mtime":1610398717877,"results":"27","hashOfConfig":"17"},{"size":5120,"mtime":1610381830121,"results":"28","hashOfConfig":"17"},{"size":4982,"mtime":1610398762773,"results":"29","hashOfConfig":"17"},{"size":3072,"mtime":1610398710777,"results":"30","hashOfConfig":"17"},{"size":4843,"mtime":1610387565661,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"4aq9o0",{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"56","messages":"57","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"34"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"61","messages":"62","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"63","messages":"64","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\USER\\Documents\\GitHub\\factory\\src\\index.tsx",[],["65","66"],"C:\\Users\\USER\\Documents\\GitHub\\factory\\src\\reportWebVitals.ts",[],"C:\\Users\\USER\\Documents\\GitHub\\factory\\src\\components\\layout\\layout.tsx",[],"C:\\Users\\USER\\Documents\\GitHub\\factory\\src\\components\\home\\home.tsx",[],"C:\\Users\\USER\\Documents\\GitHub\\factory\\src\\data\\clients.ts",[],"C:\\Users\\USER\\Documents\\GitHub\\factory\\src\\components\\all-clients\\all-clients.tsx",["67","68","69","70","71","72","73"],"C:\\Users\\USER\\Documents\\GitHub\\factory\\src\\redux\\store.js",[],["74","75"],"C:\\Users\\USER\\Documents\\GitHub\\factory\\src\\redux\\reducer.ts",[],"C:\\Users\\USER\\Documents\\GitHub\\factory\\src\\redux\\appState.ts",[],"C:\\Users\\USER\\Documents\\GitHub\\factory\\src\\redux\\actionType.ts",[],"C:\\Users\\USER\\Documents\\GitHub\\factory\\src\\components\\report-maker\\report-maker.tsx",["76","77","78"],"C:\\Users\\USER\\Documents\\GitHub\\factory\\src\\components\\top-clients-nav\\top-clients-nav.tsx",["79","80","81","82","83"],"import React, { Component, useRef } from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { Unsubscribe } from \"redux\";\r\nimport { ClientModel } from \"../../models/clientModel\";\r\nimport { ActionType } from \"../../redux/actionType\";\r\nimport { store } from \"../../redux/store\";\r\nimport { AllClients } from \"../all-clients/all-clients\";\r\nimport \"./top-clients-nav.css\";\r\n\r\ninterface TopClientsNavProps {\r\n    isScroll: boolean\r\n}\r\n\r\ninterface TopClientsNavState {\r\n    selectedClients: ClientModel[],\r\n    isButtonsScrolled: boolean,\r\n}\r\n\r\nexport class TopClientsNav extends Component<TopClientsNavProps, TopClientsNavState>{\r\n\r\n    private unsubscribeStore: Unsubscribe;\r\n    public buttonsRef = React.createRef<HTMLDivElement>();\r\n    public topNavRef = React.createRef<HTMLDivElement>();\r\n\r\n\r\n    public constructor(props: TopClientsNavProps) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            selectedClients: store.getState().selectedClients,\r\n            isButtonsScrolled: false\r\n        }\r\n        this.unsubscribeStore = store.subscribe(() => {\r\n            const selectedClients = store.getState().selectedClients;\r\n            this.setState({ selectedClients });\r\n        })\r\n    }\r\n\r\n    componentDidMount() {\r\n        const topNavWidth: number = this.topNavRef.current?.clientWidth as number;\r\n        const maxWidth = topNavWidth / 100 * 60;\r\n\r\n        window.addEventListener(\"click\", () => {\r\n            const buttonsWidth = this.buttonsRef.current?.scrollWidth as number;\r\n            if (buttonsWidth > maxWidth) {\r\n                this.setState({ isButtonsScrolled: true });\r\n            }\r\n            else{\r\n                this.setState({ isButtonsScrolled: false });\r\n            }\r\n        })\r\n    }\r\n\r\n\r\n    public componentWillUnmount(): void {\r\n        this.unsubscribeStore();\r\n    }\r\n\r\n    public scrollToRight = () => {\r\n        this.buttonsRef.current?.scrollTo({\r\n            top: 0,\r\n            left: 0,\r\n            behavior: \"smooth\"\r\n        });\r\n    }\r\n\r\n    public scrollToLeft = () => {\r\n        const buttonsWidth = this.buttonsRef.current?.scrollWidth as number;\r\n        this.buttonsRef.current?.scrollTo({\r\n            top: 0,\r\n            left: -buttonsWidth,\r\n            behavior: \"smooth\"\r\n        });\r\n    }\r\n\r\n    public removeAllClients = () => {\r\n        this.setState({ selectedClients: [] })\r\n        store.dispatch({ type: ActionType.unselectAllClients });\r\n    }\r\n\r\n    public removeClient = (clientId: number) => (event: any) => {\r\n        const selectedClients = [...this.state.selectedClients];\r\n        const index = selectedClients.findIndex(c => c.clientId === clientId);\r\n        selectedClients.splice(index, 1);\r\n        this.setState({ selectedClients });\r\n\r\n        store.dispatch({ type: ActionType.removeClient, payLoad: clientId });\r\n    }\r\n\r\n    public render() {\r\n        return (\r\n            <div ref={this.topNavRef} className=\"top-companies-nav\">\r\n                <button className=\"no-selected-button\" style={{ display: this.state.selectedClients.length === 0 ? \"block\" : \"none\" }}>\r\n                    +\r\n                </button>\r\n                <div ref={this.buttonsRef} className=\"buttons\">\r\n                    <div style={{ display: this.state.isButtonsScrolled ? \"block\" : \"none\" }}\r\n                        className=\"start-of-buttons-section\" onMouseEnter={this.scrollToRight}></div>\r\n\r\n                    {this.state?.selectedClients.map(client =>\r\n                        <button className=\"client-btn\">\r\n                            <button className=\"remove-btn\" onClick={this.removeClient(client.clientId as number)}>\r\n                                <span>&#10006;</span>\r\n                            </button>\r\n                            <span className=\"inside-client-btn\">{client.clientName}</span>\r\n                        </button>\r\n                    )}\r\n\r\n                    <div style={{ display: this.state.isButtonsScrolled ? \"block\" : \"none\" }}\r\n                        className=\"end-of-buttons-section\" onMouseEnter={this.scrollToLeft}>\r\n                        <span className=\"more-buttons-icon\">|</span>\r\n                    </div>\r\n                </div>\r\n\r\n\r\n                <div className=\"top-scroll\" style={{ top: this.props.isScroll ? \"6vw\" : 0 }}></div>\r\n                <img src=\"/assets/images/pink_btn_before.svg\" className=\"next-btn-pink\" style={{ display: this.state.selectedClients.length === 0 ? \"block\" : \"none\" }} />\r\n                <NavLink onClick={() => console.log(store.getState().selectedClients)} to=\"/report-maker\" className=\"link-to-report-maker\" exact>\r\n                    <img src=\"/assets/images/pink_btn_after.svg\" className=\"next-btn-pink\" style={{ display: this.state.selectedClients.length > 0 ? \"block\" : \"none\" }} />\r\n                </NavLink>\r\n                <div className=\"other-buttons\">\r\n                    <span className=\"remove-all\" onClick={this.removeAllClients}>הסר הכל</span>\r\n                </div>\r\n\r\n                <img className=\"logo\" src=\"/assets/images/logo_factory.svg\" />\r\n\r\n            </div>\r\n\r\n        )\r\n    }\r\n}","C:\\Users\\USER\\Documents\\GitHub\\factory\\src\\components\\filtering-side-menu\\filtering-side-menu.tsx",["84"],"C:\\Users\\USER\\Documents\\GitHub\\factory\\src\\components\\campaigns\\campaigns.tsx",["85","86","87"],"C:\\Users\\USER\\Documents\\GitHub\\factory\\src\\components\\top-campaigns-nav\\top-campaigns-nav.tsx",["88","89","90"],{"ruleId":"91","replacedBy":"92"},{"ruleId":"93","replacedBy":"94"},{"ruleId":"95","severity":1,"message":"96","line":46,"column":31,"nodeType":"97","messageId":"98","endLine":46,"endColumn":33},{"ruleId":"95","severity":1,"message":"96","line":47,"column":35,"nodeType":"97","messageId":"98","endLine":47,"endColumn":37},{"ruleId":"95","severity":1,"message":"96","line":66,"column":44,"nodeType":"97","messageId":"98","endLine":66,"endColumn":46},{"ruleId":"99","severity":1,"message":"100","line":113,"column":25,"nodeType":"101","endLine":113,"endColumn":103},{"ruleId":"99","severity":1,"message":"100","line":128,"column":25,"nodeType":"101","endLine":128,"endColumn":60},{"ruleId":"99","severity":1,"message":"100","line":131,"column":29,"nodeType":"101","endLine":133,"endColumn":109},{"ruleId":"99","severity":1,"message":"100","line":134,"column":29,"nodeType":"101","endLine":136,"endColumn":108},{"ruleId":"91","replacedBy":"92"},{"ruleId":"93","replacedBy":"94"},{"ruleId":"102","severity":1,"message":"103","line":5,"column":10,"nodeType":"104","messageId":"105","endLine":5,"endColumn":23},{"ruleId":"102","severity":1,"message":"106","line":7,"column":10,"nodeType":"104","messageId":"105","endLine":7,"endColumn":15},{"ruleId":"102","severity":1,"message":"107","line":8,"column":10,"nodeType":"104","messageId":"105","endLine":8,"endColumn":20},{"ruleId":"102","severity":1,"message":"108","line":1,"column":28,"nodeType":"104","messageId":"105","endLine":1,"endColumn":34},{"ruleId":"102","severity":1,"message":"109","line":7,"column":10,"nodeType":"104","messageId":"105","endLine":7,"endColumn":20},{"ruleId":"99","severity":1,"message":"100","line":117,"column":17,"nodeType":"101","endLine":117,"endColumn":171},{"ruleId":"99","severity":1,"message":"100","line":119,"column":21,"nodeType":"101","endLine":119,"endColumn":172},{"ruleId":"99","severity":1,"message":"100","line":125,"column":17,"nodeType":"101","endLine":125,"endColumn":79},{"ruleId":"102","severity":1,"message":"107","line":4,"column":10,"nodeType":"104","messageId":"105","endLine":4,"endColumn":20},{"ruleId":"102","severity":1,"message":"110","line":1,"column":10,"nodeType":"104","messageId":"105","endLine":1,"endColumn":14},{"ruleId":"99","severity":1,"message":"100","line":52,"column":21,"nodeType":"101","endLine":52,"endColumn":112},{"ruleId":"99","severity":1,"message":"100","line":65,"column":41,"nodeType":"101","endLine":65,"endColumn":96},{"ruleId":"102","severity":1,"message":"108","line":1,"column":28,"nodeType":"104","messageId":"105","endLine":1,"endColumn":34},{"ruleId":"102","severity":1,"message":"109","line":7,"column":10,"nodeType":"104","messageId":"105","endLine":7,"endColumn":20},{"ruleId":"99","severity":1,"message":"100","line":124,"column":21,"nodeType":"101","endLine":124,"endColumn":93},"no-native-reassign",["111"],"no-negated-in-lhs",["112"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","@typescript-eslint/no-unused-vars","'getAllClients' is defined but never used.","Identifier","unusedVar","'store' is defined but never used.","'ActionType' is defined but never used.","'useRef' is defined but never used.","'AllClients' is defined but never used.","'exec' is defined but never used.","no-global-assign","no-unsafe-negation"]